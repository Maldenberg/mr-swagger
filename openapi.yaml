openapi: 3.0.1

info:
  title: Публичный API SuperApp
  version: '0.8.0'
  description: |
    Справочник внешних методов API MR Group SuperApp.

    ## История изменений

    ### 0.8.0

    #### Изменено

    - В ответ метода `GET /banners` добавлены поля `code` и `logo`.
    - В представление проекта, возвращаемое методами `/sale` добавлено поле `logo`.

    #### Добавлено

    - Добавлен метод `POST /purchases:refresh`.

    ### 0.7.0

    - Добавлен метод `GET /realty/objects/{code}/presentation`.
    - Добавлен метод `GET /yandex/realty/feeds/sale-new`

    ### 0.6.2

    - В ответ метода `GET /purchase/{purchase-id}` в объект phase_document добавлен параметр debt_amount

    ### 0.6.1

    - Добавлен метод `GET /private/banners`.
    - Добавлен метод `GET /private/{project-code}/banners`.

    ### 0.5.8

    - Добавлена возможность передачи сведений об источнике обращения в методы:
      '/app/device'
      '/brokers/partnership/requests'
      '/user/consultation'
      '/user/booking/product/{code}'
    - Добавлен метод `POST /referral/participation/requests` для отправки потенциальными клиентами
      заявок на участие в реферальной программе.
    - Добавлен метод `GET /commerсials/banners` для получения данных баннеров торговой недвижимости
    - В метод `GET /promo` добавлен входной параметр tags
    - В ответ методов `GET /sale/projects` и `GET /sale/projects/{code}` добавлен параметр business_unit
    - В ответ метода `GET /sale/projects/{code}` добавлен объект related_project с информацией о связанном проекте
    - В методы `GET /sale/products/filters`, `GET /sale/product` и `GET /sale/product/{code}` добавлен параметр ventilation в качестве входного и в ответы методов

    ### 0.5.6

    #### Добавлено

    - В метод `GET /decoration/kitchen/options` добавлены параметры:
    kitchen_partner, additional_images, slider_position, а также ID типа планировки и варианта кухни

    ### 0.5.5

    #### Добавлено

    - Добавлен метод `POST /brokers/partnership/requests` для отправки потенциальными брокерами
      заявок на партнёрство.


servers:
  - description: |
      Промышленная среда.
    url: https://www.mr-group.ru/api
  - description: |
      Среда финального тестирования.
    url: https://stage-superapp.mr-group.ru/api
  - description: |
      Среда разработки АДВ.
    url: https://mrsuperapp.adv.ru/api

tags:
  - name: app
    description: Методы для работы с данными для функционирования приложения
  - name: brokers
    description: Работа с брокерами.
    externalDocs:
      description: Модуль «Брокеры»
      url: https://wiki.adv.ru/pages/viewpage.action?pageId=326960703
  - name: forms/configs
    description: Конфигурации форм ввода.
    externalDocs:
      description: Модуль «Формы ввода»
      url: https://wiki.adv.ru/pages/viewpage.action?pageId=307092888
  - name: catalog
    description: Методы каталога
  - name: code
    description: Методы для работы с функциональностью отправки и валидации одноразового кода для аутентификации пользователя
  - name: content
    description: Методы для работы с контентными данными
  - name: faq
    description: Методы для работы с FAQ
  - name: files
    description: Методы для работы с файлами
  - name: hotline
    description: Методы для работы с линией доверия
  - name: legal/consent-documents
    description: Документы согласий.
    externalDocs:
      description: Модуль «Согласия пользователя»
      url: https://wiki.adv.ru/pages/viewpage.action?pageId=307094460
  - name: news
    description: Работа с новостями.
    externalDocs:
      description: Модуль «Новости»
      url: https://wiki.adv.ru/pages/viewpage.action?pageId=321206102
  - name: mortgage
    description: Методы для работы с ипотекой
  - name: mrclub
    description: Методы для работы с данными программы лояльности
  - name: partner
    description: |
      Методы, предназначенные для использования организациями-партнёрами MR Group.
      В соответствии с https://wiki.adv.ru/pages/viewpage.action?pageId=289571578
  - name: private
    description: Методы направления «MR Private».
  - name: promo
    description: Методы для работы с акциями
  - name: purchase
    description: Методы для работы с платным бронированием (сделкой)
  - name: referral
    description: Методы для работы с реферальной программой
  - name: realty/objects
    description: |
      Работа с объектами недвижимости из каталога недвижимости.
  - name: sale
    description: Методы каталога (sale-service)
    externalDocs:
      description: Служба каталога ОН (sale-service)
      url: https://wiki.adv.ru/pages/viewpage.action?pageId=273673071
  - name: site
    description: Методы для работы с данными для функционирования сайта
  - name: tradein
    description: Методы для работы с trade in
  - name: user
    description: Методы для работы с данными пользователя
  - name: hold
    description: Описанные методы, реализация которых отложена в силу бизнес-необходимости
  - name: yandex/realty
    description: Интеграция с Яндекс Недвижимостью.
    externalDocs:
      description: Модуль «Интеграция с сервисом Яндекс Недвижимость»
      url: https://confluence.mr-group.ru/pages/viewpage.action?pageId=73894520

paths:

  /app/device:
    put:
      operationId: registerDevice
      summary: Регистрация пользовательского устройства
      tags: [ app ]
      description: |
        Регистрирует новое устройство. Аутентификация не обязательна, но при её наличии устройство
        связывается с пользователем.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291311414
      security:
        - { }
        - JWT: [ ]
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CommonRequestPayload'
                - $ref: '#/components/schemas/Device'
      responses:
        '204':
          description: |
            Устройство успешно зарегистрировано.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /app/version:
    get:
      operationId: getMinimalSupportedAppsVersions
      summary: Минимальные поддерживаемые версии мобильных приложений
      tags: [ app ]
      description: |
        Возвращает минимальные версии мобильных приложений, которые поддерживаются в данный момент.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291309517
      responses:
        '200':
          description: |
            Минимальные поддерживаемые версии мобильных приложений.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVersion'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /banners:
    get:
      operationId: listBanners
      tags: [ site ]
      summary: Список баннеров для главной страницы сайта
      description: |
        Возвращает список баннеров для главной страницы сайта.
      externalDocs:
        url: https://confluence.mr-group.ru/pages/viewpage.action?pageId=73893512
      responses:
        '200':
          description: |
            Список баннеров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainBannersCollection'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /banners/private:
    get:
      operationId: listPrivateBanners1
      tags: [ site ]
      description: |
        Получение списка баннеров для страницы MR Private
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=302781211
      responses:
        '200':
          description: |
            Список баннеров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateProjectBannerListResponse'
        '500':
          description: Internal Server Error

  /brokers/partnership/requests:
    post:
      operationId: sendPartnershipRequest
      summary: Запрос на партнёрство
      tags: [ brokers ]
      description: |
        Позволяет потенциальному
        [брокеру](https://wiki.adv.ru/pages/viewpage.action?pageId=326960409) подать заявку на
        партнёрство в
        [отдел по работе с брокерами](https://wiki.adv.ru/pages/viewpage.action?pageId=326960406)
        в рамках процесса
        [регистрации брокера](https://wiki.adv.ru/pages/viewpage.action?pageId=326960609).
        [Аналитика](https://wiki.adv.ru/pages/viewpage.action?pageId=326959816)
      externalDocs:
        description: Подача заявки на партнёрство.
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=326960650
      security: [ ]
      parameters:
        - $ref: '#/components/parameters/captchaToken'
        - $ref: '#/components/parameters/deviceToken'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CommonRequestPayload'
                - required:
                    - data
                    - meta
                  properties:
                    data:
                      $ref: '#/components/schemas/BrokersPartnershipRequest'
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      required:
                        - consents
                      properties:
                        consents:
                          $ref: '#/components/schemas/Consents'
      responses:
        '204':
          description: |
            Заявка успешно отправлена.
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /code/check:
    post:
      operationId: checkCode
      tags: [ code ]
      description: |
        Проверка значения кода подтверждения
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273653144
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckCodeRequest'
        required: false
      responses:
        '200':
          description: |
            Итерация закрыта.
        '400':
          description: Bad request (синтаксические ошибки в запросе - неверный JSON, нет обязательного поля, недопустимый тип значения)
          content:
            application/json:
              example:
                {
                  "errors": [
                    {
                      "detail": "Недопустимый тип значения"
                    }
                  ]
                }
        '403':
          description: |
            Переход на следующий шаг запрещён.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCodeResponse2'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /code/send:
    post:
      operationId: sendCode
      tags: [ code ]
      description: |
        Отправка кода подтверждения на email или телефон
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273654708
      parameters:
        - $ref: '#/components/parameters/captchaToken'
        - $ref: '#/components/parameters/deviceToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCodeRequest'
        required: false
      responses:
        '200':
          description: Successful operation (код отправлен)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCodeResponse'
        '202':
          description: Accepted (запрос обработан, но отправка кода невозможна)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCodeResponse2'
        '400':
          description: Bad request (синтаксические ошибки в запросе - неверный JSON, нет обязательного поля, недопустимый тип значения)
          content:
            application/json:
              example:
                {
                  "errors": [
                    {
                      "detail": "Недопустимый тип значения"
                    }
                  ]
                }
        '403':
          description: Forbidden (переход на следующий шаг запрещен)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCodeResponse3'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /commercials/banners:
    get:
      operationId: listCommercialsBanners
      tags: [ site ]
      description: |
        Возвращает список баннеров для разводящей страницы торговой недвижимости.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=330571537
      responses:
        '200':
          description: Список баннеров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercialsBannerListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /forms/configs:
    get:
      operationId: listFormConfigs
      summary: Получение конфигураций форм
      tags: [ 'forms/configs' ]
      description: |
        Возвращает список
        [конфигураций форм](https://wiki.adv.ru/pages/viewpage.action?pageId=307092923).

        Главным образом метод предназначен для сокращения количества запросов к API в целях
        повышения отзывчивости пользовательского интерфейса. Предполагается что клиентское
        приложение (мобильное или сайт) может разом запросить конфигурации всех форм и сохранить их
        в кэше. Это позволит не запрашивать конфигурацию каждой формы перед её показом.

        - [Обзорное описание получения согласий пользователя](https://wiki.adv.ru/pages/viewpage.action?pageId=307094741)
        - [Описание метода API для бэкенда](https://wiki.adv.ru/pages/viewpage.action?pageId=307093539)
      security: [ ]
      responses:
        '200':
          $ref: '#/components/responses/FormConfigCollection'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /forms/configs/{id}:
    get:
      operationId: getFormConfig
      summary: Получение конфигурации конкретной формы
      tags: [ 'forms/configs' ]
      description: |
        Возвращает [конфигурацию](https://wiki.adv.ru/pages/viewpage.action?pageId=307092923)
        запрошенной формы.

        **Обратите внимание, что перечень идентификаторов определён как перечисляемый тип, но может
        набор его вариантов может изменяться с выпуском новых версий.**

        - [Обзорное описание получения согласий пользователя](https://wiki.adv.ru/pages/viewpage.action?pageId=307094741)
        - [Описание метода API для бэкенда](https://wiki.adv.ru/pages/viewpage.action?pageId=307093643)
      security: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: |
            Идентификатор (код) конфигурации формы.
          schema:
            $ref: '#/components/schemas/FormConfigId'
      responses:
        '200':
          $ref: '#/components/responses/FormConfig'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /legal/consent-documents/{identifier}:
    get:
      operationId: getConsentDocument
      summary: Получение документа согласия
      tags: [ 'legal/consent-documents' ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307082513
      description: |
        Возвращает [документ согласия](https://wiki.adv.ru/pages/viewpage.action?pageId=307093060)
        по его идентификатору или коду.

        - [Обзорное описание получения согласий пользователя](https://wiki.adv.ru/pages/viewpage.action?pageId=307094741)
        - [Описание метода API для бэкенда](https://wiki.adv.ru/pages/viewpage.action?pageId=307094682)
      security: [ ]
      parameters:
        - name: identifier
          in: path
          required: true
          description: |
            Идентификатор или `urlCode` документа согласия.
          schema:
            oneOf:
              - $ref: '#/components/schemas/ConsentDocumentId'
              - $ref: '#/components/schemas/ConsentDocumentUrlName'
      responses:
        '200':
          $ref: '#/components/responses/ConsentDocument'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /news:
    get:
      operationId: listNews
      summary: Получение списка новостей
      tags: [ news ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273662845
      description: |
        Возвращает список новостей. При необходимости список может быть отфильтрован с помощью
        параметров в запросе.
      security: [ ]
      parameters:
        - $ref: '#/components/parameters/projectsFilter'
        - name: dateFrom
          in: query
          description: |
            Фильтр по дате новости, ОТ (включительно).
          schema:
            $ref: '#/components/schemas/AttrDate'
        - name: dateTo
          in: query
          description: |
            Фильтр по дате новости, ДО (включительно).
          schema:
            $ref: '#/components/schemas/AttrDate'
        - name: tags[]
          in: query
          description: |
            Вернуть только те новости, у которых есть **хотя бы одна** из перечисленных меток.
          example: [ 'social' ]
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/paginationPage'
        - $ref: '#/components/parameters/paginationLimit'
      responses:
        '200':
          description: |
            Список новостей.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsCollection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'


  /news/{news-code}:
    get:
      operationId: getNewsItem
      summary: Получение отдельной новости
      tags: [ news ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670589
      description: |
        Возвращает одну новость.
      parameters:
        - name: news-code
          in: path
          required: true
          description: |
            Код новости.
          schema:
            type: string
      responses:
        '200':
          description: |
            Запрошенная новость.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /offices/banners:
    get:
      operationId: listOfficesBanners
      tags: [ site ]
      description: |
        Возвращает список баннеров для разводящей страницы офисов.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671532
      responses:
        '200':
          description: Список баннеров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficesBannerListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /pages/menu:
    get:
      operationId: getSiteMenu
      tags: [ site ]
      summary: Пункты меню для сайта
      description: |
        Иерархический набор ссылок для сайта

        Есть следующие типы меню (slug):

        - desktop_menu — меню для desktop-режиме сайта;
        - top_menu — верхнее меню сайта;
        - sitemap — карта сайта в footer сайта.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273666932
      responses:
        '200':
          description: |
            Пункты меню.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteMenuPagesList'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /private/banners:
    get:
      operationId: listPrivateBanners2
      tags: [ private ]
      description: |
        Возвращает список баннеров для разводящей страницы MR Private.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=330571758
      responses:
        '200':
          description: |
            Список баннеров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateBannerListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /private/{project-code}/banners:
    get:
      operationId: listPrivateProjectBanners
      tags: [ private ]
      description: |
        Возвращает список баннеров для проекта бренда MR Private.
      parameters:
        - name: project-code
          in: path
          required: true
          description: Символьный код проекта, баннеры которого нужно получить
          schema:
            type: string
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=330572766
      responses:
        '200':
          description: |
            Список баннеров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateProjectBannerListResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /realty/objects/{code}/presentation:
    get:
      operationId: downloadRealtyObjectPresentation
      summary: Файл презентации ОН
      tags: [ realty/objects ]
      description: |
        Возвращает презентацию объекта недвижимости в виде загружаемого файла.

        На текущий момент всегда возвращается файл PDF.
      externalDocs:
        url: https://confluence.mr-group.ru/pages/viewpage.action?pageId=74069342
      security: [ ]
      parameters:
        - $ref: "#/components/parameters/realtyObjectCodeInPath"
        - name: accept
          in: header
          description: |
            **На текущий момент заголовок не используется!**

            Заголовок зарезервирован на будущее, чтобы иметь возможность загружать файл в разных
            форматах, а не только в PDF.
          required: false
          schema:
            type: string
            example: 'application/pdf'

      responses:
        '200':
          description: |
            Файл презентации. На текущий момент всегда в формате PDF.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/projects:
    get:
      operationId: saleServiceListProjects
      summary: Поиск проектов
      tags: [ sale ]
      description: |
        Возвращает список проектов с учётом фильтров.
      parameters:
        - $ref: '#/components/parameters/saleServiceCategoryFilter'
        - $ref: '#/components/parameters/completedProjectFilter'
        - name: has_plans
          in: query
          description: Вернуть только проекты, у которых есть интерактивные планы.
          schema:
            type: boolean
          example: false
        - $ref: '#/components/parameters/priceMinFilter'
        - $ref: '#/components/parameters/priceMaxFilter'
        - $ref: '#/components/parameters/paymentMinFilter'
        - $ref: '#/components/parameters/paymentMaxFilter'
        - $ref: '#/components/parameters/roomsCountFilter'
        - $ref: '#/components/parameters/releaseFilter'
        - $ref: '#/components/parameters/areaMinFilter'
        - $ref: '#/components/parameters/areaMaxFilter'
        - $ref: '#/components/parameters/placeFilter'
        - $ref: '#/components/parameters/projectsFilter'
        - $ref: '#/components/parameters/buildingsCodeFilter'
        - $ref: '#/components/parameters/isBookedFilter'
        - $ref: '#/components/parameters/isFreeFilter'
        - $ref: '#/components/parameters/floorMinFilter'
        - $ref: '#/components/parameters/floorMaxFilter'
        - $ref: '#/components/parameters/levelMinFilter'
        - $ref: '#/components/parameters/levelMaxFilter'
        - $ref: '#/components/parameters/isDiscountFilter'
        - $ref: '#/components/parameters/isFamilyFilter'
        - $ref: '#/components/parameters/housingFilter'
        - $ref: '#/components/parameters/decorationFilter'
        - $ref: '#/components/parameters/isAssignmentFilter'
        - $ref: '#/components/parameters/installmentsFilter'
        - $ref: '#/components/parameters/privateFilter'
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670711
      responses:
        '200':
          description: |
            Список проектов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleServiceProjectList'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/projects/private:
    get:
      operationId: listPrivateProjects
      tags: [ sale ]
      description: Получение проектов MR Private
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285084776
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateList'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/projects/{code}:
    get:
      operationId: getProject
      tags: [ sale ]
      description: |
        Возвращает сведения о проекте по его коду.
      parameters:
        - name: code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
      externalDocs:
        url: https://confluence.mr-group.ru/pages/viewpage.action?pageId=73894345
      responses:
        '200':
          description: |
            Сведения о проекте.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleServiceProject'
        '404':
          description: Not found
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/products:
    get:
      operationId: listRealtyObjects
      tags: [ sale ]
      description: |
        Получение списка ОН с учётом фильтров.
      parameters:
        - $ref: '#/components/parameters/productsIdsFilter'
        - $ref: '#/components/parameters/saleServiceCategoryFilter'
        - $ref: '#/components/parameters/paginationPage'
        - $ref: '#/components/parameters/paginationLimit'
        - $ref: '#/components/parameters/catalogSort'
        - $ref: '#/components/parameters/priceMinFilter'
        - $ref: '#/components/parameters/priceMaxFilter'
        - $ref: '#/components/parameters/paymentMinFilter'
        - $ref: '#/components/parameters/paymentMaxFilter'
        - $ref: '#/components/parameters/roomsCountFilter'
        - $ref: '#/components/parameters/releaseFilter'
        - $ref: '#/components/parameters/areaMinFilter'
        - $ref: '#/components/parameters/areaMaxFilter'
        - $ref: '#/components/parameters/placeFilter'
        - $ref: '#/components/parameters/projectsFilter'
        - $ref: '#/components/parameters/buildingsCodeFilter'
        - $ref: '#/components/parameters/isBookedFilter'
        - $ref: '#/components/parameters/isFreeFilter'
        - $ref: '#/components/parameters/floorMinFilter'
        - $ref: '#/components/parameters/floorMaxFilter'
        - $ref: '#/components/parameters/levelMinFilter'
        - $ref: '#/components/parameters/levelMaxFilter'
        - $ref: '#/components/parameters/isDiscountFilter'
        - $ref: '#/components/parameters/isFamilyFilter'
        - $ref: '#/components/parameters/ventilationFilter'
        - $ref: '#/components/parameters/housingFilter'
        - $ref: '#/components/parameters/decorationFilter'
        - $ref: '#/components/parameters/hasKitchenFilter'
        - $ref: '#/components/parameters/isAssignmentFilter'
        - $ref: '#/components/parameters/installmentsFilter'
        - $ref: '#/components/parameters/privateFilter'

      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670715
      responses:
        '200':
          description: Список объектов недвижимости.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/product/{code}:
    get:
      operationId: getRealtyObject
      tags: [ sale ]
      description: |
        Получение данных ОН по коду ОН.
      parameters:
        - name: code
          in: path
          required: true
          description: Код ОН
          schema:
            type: string
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670718
      responses:
        '200':
          description: Сведения об объекте недвижимости.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
        '404':
          description: Not found
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/products/filters:
    get:
      operationId: getRealtyObjectsFilters
      tags: [ sale ]
      parameters:
        - $ref: '#/components/parameters/saleServiceCategoryFilter'
        - $ref: '#/components/parameters/projectCodeParam'
        - $ref: '#/components/parameters/priceMinFilter'
        - $ref: '#/components/parameters/priceMaxFilter'
        - $ref: '#/components/parameters/paymentMinFilter'
        - $ref: '#/components/parameters/paymentMaxFilter'
        - $ref: '#/components/parameters/roomsCountFilter'
        - $ref: '#/components/parameters/releaseFilter'
        - $ref: '#/components/parameters/areaMinFilter'
        - $ref: '#/components/parameters/areaMaxFilter'
        - $ref: '#/components/parameters/placeFilter'
        - $ref: '#/components/parameters/projectsFilter'
        - $ref: '#/components/parameters/buildingsCodeFilter'
        - $ref: '#/components/parameters/isBookedFilter'
        - $ref: '#/components/parameters/isFreeFilter'
        - $ref: '#/components/parameters/floorMinFilter'
        - $ref: '#/components/parameters/floorMaxFilter'
        - $ref: '#/components/parameters/levelMinFilter'
        - $ref: '#/components/parameters/levelMaxFilter'
        - $ref: '#/components/parameters/isDiscountFilter'
        - $ref: '#/components/parameters/isFamilyFilter'
        - $ref: '#/components/parameters/ventilationFilter'
        - $ref: '#/components/parameters/housingFilter'
        - $ref: '#/components/parameters/decorationFilter'
        - $ref: '#/components/parameters/hasKitchenFilter'
        - $ref: '#/components/parameters/isAssignmentFilter'
        - $ref: '#/components/parameters/installmentsFilter'
        - $ref: '#/components/parameters/privateFilter'
      description: |
        Фильтры поиска товаров в ES с учётом фильтров и строки поиска
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273652990
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponse'
        '400':
          description: Bad request
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/typicalobjects:
    get:
      operationId: listTypicalObjects
      tags: [ sale ]
      parameters:
        - $ref: '#/components/parameters/saleServiceCategoryFilter'
        - $ref: '#/components/parameters/paginationPage'
        - $ref: '#/components/parameters/paginationLimit'
        - $ref: '#/components/parameters/catalogSort'
        - $ref: '#/components/parameters/priceMinFilter'
        - $ref: '#/components/parameters/priceMaxFilter'
        - $ref: '#/components/parameters/paymentMinFilter'
        - $ref: '#/components/parameters/paymentMaxFilter'
        - $ref: '#/components/parameters/roomsCountFilter'
        - $ref: '#/components/parameters/releaseFilter'
        - $ref: '#/components/parameters/areaMinFilter'
        - $ref: '#/components/parameters/areaMaxFilter'
        - $ref: '#/components/parameters/placeFilter'
        - $ref: '#/components/parameters/projectsFilter'
        - $ref: '#/components/parameters/buildingsCodeFilter'
        - $ref: '#/components/parameters/isBookedFilter'
        - $ref: '#/components/parameters/isFreeFilter'
        - $ref: '#/components/parameters/floorMinFilter'
        - $ref: '#/components/parameters/floorMaxFilter'
        - $ref: '#/components/parameters/levelMinFilter'
        - $ref: '#/components/parameters/levelMaxFilter'
        - $ref: '#/components/parameters/isDiscountFilter'
        - $ref: '#/components/parameters/isFamilyFilter'
        - $ref: '#/components/parameters/housingFilter'
        - $ref: '#/components/parameters/decorationFilter'
        - $ref: '#/components/parameters/isAssignmentFilter'
        - $ref: '#/components/parameters/installmentsFilter'
      description: Получение списка планировок
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273673064
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypicalObjectsList'
        '400':
          description: Bad request
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/typicalobjects/{id}/products:
    get:
      operationId: listTypicalObjectProducts
      tags: [ sale ]
      description: Получение объекта планировки
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273673091
      parameters:
        - name: id
          in: path
          description: ID планировки
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/catalogSort'
        - $ref: '#/components/parameters/priceMinFilter'
        - $ref: '#/components/parameters/priceMaxFilter'
        - $ref: '#/components/parameters/paymentMinFilter'
        - $ref: '#/components/parameters/paymentMaxFilter'
        - $ref: '#/components/parameters/roomsCountFilter'
        - $ref: '#/components/parameters/releaseFilter'
        - $ref: '#/components/parameters/areaMinFilter'
        - $ref: '#/components/parameters/areaMaxFilter'
        - $ref: '#/components/parameters/placeFilter'
        - $ref: '#/components/parameters/projectsFilter'
        - $ref: '#/components/parameters/buildingsCodeFilter'
        - $ref: '#/components/parameters/isBookedFilter'
        - $ref: '#/components/parameters/isFreeFilter'
        - $ref: '#/components/parameters/floorMinFilter'
        - $ref: '#/components/parameters/floorMaxFilter'
        - $ref: '#/components/parameters/levelMinFilter'
        - $ref: '#/components/parameters/levelMaxFilter'
        - $ref: '#/components/parameters/isDiscountFilter'
        - $ref: '#/components/parameters/isFamilyFilter'
        - $ref: '#/components/parameters/housingFilter'
        - $ref: '#/components/parameters/decorationFilter'
        - $ref: '#/components/parameters/isAssignmentFilter'
        - $ref: '#/components/parameters/installmentsFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypicalObjectDetail'
        '400':
          description: Bad request
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/plan/buildings:
    get:
      operationId: listBuildingPlans
      tags: [ sale ]
      summary: Получение сведений о корпусах и плане, который следует открыть
      description: |
        Метод возвращает информацию о корпусах и план, который следует открыть
      parameters:
        - $ref: '#/components/parameters/saleServiceCategoryFilter'
        - $ref: '#/components/parameters/projectFilter'
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668014
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBuildingsList'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/plan/sections:
    get:
      operationId: listSectionPlans
      tags: [ sale ]
      summary: Получение сведений о секциях и плане, который следует открыть
      description: |
        Метод возвращает информацию о секциях и план, который следует открыть
      parameters:
        - $ref: '#/components/parameters/saleServiceCategoryFilter'
        - name: building
          in: query
          required: true
          schema:
            type: string
          description: Код корпуса
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668019
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSectionsList'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/plan/floors:
    get:
      operationId: listFloorPlans
      tags: [ sale ]
      summary: Получение сведений об этажах и плане, который следует открыть
      description: |
        Метод возвращает информацию об этажах и план, который следует открыть
      parameters:
        - $ref: '#/components/parameters/saleServiceCategoryFilter'
        - name: building
          description: Код корпуса
          in: query
          schema:
            type: string
        - name: section
          description: ID секции
          in: query
          schema:
            type: integer
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668027
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanFloorsList'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/plan/floor/objects:
    get:
      operationId: listObjectsOnFloorPlans
      tags: [ sale ]
      summary: Список ОН на этаже
      description: |
        Метод возвращает список ОН на этаже.
      parameters:
        - name: category
          description: Код корпуса
          in: query
          required: true
          schema:
            type: string
            enum:
            - 'boxrooms'
            - 'commercials'
            - 'flats'
            - 'offices'
            - 'parkings'
        - name: building
          description: Код корпуса
          in: query
          schema:
            type: string
        - name: section
          description: ID секции
          in: query
          schema:
            type: integer
        - name: floor
          description: Номер этажа
          in: query
          required: true
          schema:
            type: integer
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668385
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectsOnFloorPlan'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/plan/subtype_objects:
    get:
      operationId: listSubtypeObjects
      tags: [ sale ]
      summary: Список ID CRM ОН в разрезе подтипов (категорий)
      description: Метод возвращает список ID CRM ОН в разрезе подтипов (категорий)
      parameters:
        - name: category
          in: query
          description: Код типа ОН
          required: true
          schema:
            type: string
        - name: building
          in: query
          description: Код корпуса
          required: true
          schema:
            type: string
        - name: floor
          in: query
          description: Номер этажа
          required: true
          schema:
            type: integer
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273665394
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTypeList'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/plan/objects/{crm-id}:
    get:
      operationId: getObjectPlan
      tags: [ sale ]
      summary: Сведения об ОН по ID CRM
      description: Метод возвращает информацию об ОН по ID CRM
      parameters:
        - name: crm-id
          in: path
          required: true
          description: ID объекта в CRM
          schema:
            type: string
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273665440
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /sale/search:
    get:
      operationId: searchForRealtyObjects
      summary: Поиск объектов
      tags: [ sale ]
      description: |
        Метод поиска объектов (пока только проектов).
      parameters:
        - description: |
            Поисковый запрос.
          name: query
          in: query
          required: true
          schema:
            type: string
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273660869
      responses:
        '200':
          description: |
            Результаты поиска.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleServiceSearchResults'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /site/config:
    get:
      operationId: getSiteConfig
      tags: [ site ]
      summary: Параметры конфигурации
      description: |
        Параметры конфигурации.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671298
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfig'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /site/company:
    get:
      operationId: getCompanyInfo
      tags: [ site ]
      summary: Информация о компании
      description: |
        Информация о компании.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671301
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteCompanyDetails'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /site/template:
    get:
      operationId: getTemplates
      tags: [ site ]
      summary: Данные для «шапки» и «подвала» сайта
      description: |
        Возвращает данные для «шапки» и «подвала» сайта.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671307
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteTemplateDetails'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /content/purchase/steps:
    get:
      operationId: getPurchaseSteps
      tags: [ content ]
      summary: Шаги покупки для страницы «Процесс покупки»
      description: |
        Получение данных для шагов процесса покупки страницы «Процесс покупки».
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670622
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPurchase'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /content/agreement:
    get:
      operationId: getAgreement
      tags: [ content ]
      summary: Политика обработки ПДн.
      description: |
        Получение данных для контентной политики обработки ПДн.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273678296
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentAgreement'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /content/sitemap:
    get:
      operationId: getSitemap
      tags: [ content ]
      description: |
        Получение данных для контентной страницы "Карта сайта"
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273678289
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSitemap'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /content/template/{code}:
    get:
      operationId: getTemplate
      tags: [ content ]
      description: Метод получения данных для универсальных блоков контентных страниц
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285082774
      parameters:
        - name: code
          in: path
          description: Символьный код шаблона
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTemplate'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /content/steps/{code}:
    get:
      operationId: getSteps
      tags: [ content ]
      description: Метод получения данных для контента для блоков с шагами
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670630
      parameters:
        - name: code
          in: path
          description: Символьный код группы шагов
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentStepsList'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /content/banners/{code}:
    get:
      operationId: getBanners
      tags: [ content ]
      description: Метод получения контента для Универсального блока баннеров
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085007
      parameters:
        - name: code
          in: path
          description: Символьный код раздела для блока
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentBannersList'
        '404':
          description: Not found
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /content/facts/{code}:
    get:
      operationId: getFacts
      tags: [ content ]
      description: Метод получения контента для блоков Ключевые факты
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285084492
      parameters:
        - name: code
          in: path
          description: Символьный код раздела ключевых фактов
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentFactsList'
        '404':
          description: Not found
        '500':
          description: Internal Server Error


  /content/history:
    get:
      operationId: getHistory
      tags: [ content ]
      description: Метод получения контента для блока История
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285084522
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentHistoryList'
        '404':
          description: Not found
        '500':
          description: Internal Server Error



  /content/awards:
    get:
      operationId: getAwards
      tags: [ content ]
      description: Метод получения контента для блока Награды
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285084536
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentAwardsList'
        '404':
          description: Not found
        '500':
          description: Internal Server Error


  /content/partners:
    get:
      operationId: getPartners
      tags: [ content ]
      description: Метод получения данных объектов сущности Партнер
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085423
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPartnersSectionsList'
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /content/team:
    get:
      operationId: getTeam
      tags: [ content ]
      description: Метод получения данных объектов сущности Участник команды
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085395
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTeamMembersList'
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /content/media_articles:
    get:
      operationId: getMediaArticles
      tags: [ content ]
      description: Метод получения данных объектов сущности Статья СМИ
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085704
      parameters:
        - $ref: '#/components/parameters/paginationPage'
        - $ref: '#/components/parameters/paginationLimit'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentMediaArticlesList'
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /offices/company:
    get:
      operationId: listCompanyOffices
      tags: [ content ]
      description: |
        Получение основных контактов офиса компании MR
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273678329
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentOfficesCompanyList'
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /offices/projects:
    get:
      operationId: listProjectsOffices
      tags: [ content ]
      description: |
        Получение основных контактов офиса компании MR
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273678331
      parameters:
        - $ref: '#/components/parameters/projectFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentOfficesProjectsList'
        '500':
          description: Internal Server Error

  /contacts/support:
    get:
      operationId: getSupportContacts
      tags: [ content ]
      description: |
        Получение контактов ЦКП (центра клиентской поддержки)
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273674951
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsSupportList'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error

  /services:
    get:
      operationId: listServices
      tags: [ content ]
      description: |
        Метод возвращает карточки сервисов
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273658285
      parameters:
        - $ref: '#/components/parameters/projectFilter'
        - $ref: '#/components/parameters/applicationFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesList'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error


  # ################################

  /faq/category:
    get:
      operationId: listFaqCategories
      tags: [ faq ]
      description: |
        Получение всех категорий FAQ
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670599
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaqCategoryList'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error


  /faq/category/{category-code}/questions:
    get:
      operationId: listFaqQuestions
      tags: [ faq ]
      description: |
        Получение списка вопросов для категории
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670602
      parameters:
        - name: category-code
          in: path
          required: true
          description: Категория FAQ
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaqQuestionsList'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Internal Server Error


  /faq/search:
    get:
      operationId: searchFaq
      tags: [ faq ]
      description: |
        Получение списка вопросов для категории
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670614
      parameters:
        - name: query
          in: query
          required: true
          description: Поисковый запрос
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaqSearchResultList'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
  # ################################

  /promo:
    get:
      operationId: listPromos
      tags: [ promo ]
      description: Получение списка акций
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273672541
      parameters:
        - name: projectCode
          in: query
          required: false
          description: Код проекта
          schema:
            type: string
        - name: tags[]
          in: query
          description: |
            Вернуть только те акции, у которых есть **хотя бы одна** из перечисленных меток.
          example: [ 'offices' ]
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoList'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /promo/{promo-code}:
    get:
      operationId: getPromo
      tags: [ promo ]
      description: Получение акций
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273672541
      parameters:
        - name: promo-code
          in: path
          required: true
          description: Код акции
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoContent'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  # ################################


  /mortgage/program:
    get:
      operationId: listMortgagePrograms
      tags: [ mortgage ]
      description: |
        Получение списка ипотечных программ
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671695
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MortgageProgramList'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error

  /mortgage/calc/bank:
    get:
      operationId: listMortgageBanks
      tags: [ mortgage ]
      description: |
        Получение списка банков для ипотечного калькулятора
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273669724
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MortgageCalcBanksList'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error

  /mortgage/calc/category:
    get:
      operationId: listMortgageCategories
      tags: [ mortgage ]
      description: |
        Получение списка подтипов ОН для ипотечного калькулятора
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671672
      parameters:
        - name: project-code
          in: query
          description: Код проекта
          schema:
            type: string
            example: "mod"
        - name: product-code
          in: query
          description: Код ОН
          schema:
            type: string
            example: "kvartira-21"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MortgageCalcCategoryList'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error

  /mortgage/calc/offer:
    get:
      operationId: listMortgageOffers
      tags: [ mortgage ]
      description: |
        Получение списка банковских предложений по ипотеке
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668976
      parameters:
        - name: project-code
          in: query
          required: true
          description: Код проекта
          schema:
            type: string
            example: "mod"
        - name: price
          in: query
          required: true
          description: Стоимость ОН
          schema:
            type: number
        - name: initial-payment
          in: query
          required: true
          description: Сумма первоначального взноса
          schema:
            type: number
        - name: period
          in: query
          required: true
          description: Срок кредита в годах
          schema:
            type: number
        - name: banks
          in: query
          description: Массив кодов банков, выбранных в фильтре по банкам (параметр "Код" сущности Банк)
          schema:
            type: array
            items:
              type: string
        - name: subtype-code
          in: query
          description: Символьный код подтипа ОН
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MortgageCalcResultList'
        '400':
          description: Bad request
        '500':
          description: Internal Server Error


  /mortgage/calc/projects:
    get:
      operationId: listMortgageProjects
      tags: [ mortgage ]
      description: |
        Получение списка проектов для калькулятора
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273675189
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MortgageCalcProjectList'
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /mortgage/application:
    get:
      operationId: listMortgageApplications
      tags: [ mortgage ]
      description: |
        Возвращает список заявок на ипотеку и заявок в банк клиента.
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093632
      responses:
        '200':
          description: |
            Список заявок на ипотеку.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MortgageApplicationList'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

    post:
      operationId: createMortgageApplication
      tags: [ mortgage ]
      description: |
        Метод создает заявку на ипотеку в ДВИЖ и возвращает ссылку на форму.\
        Если доступа к пользователю ДВИЖ нет, возвращает 422.\
        В этом случае требуется повторно вызвать метод с параметром code
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091060
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MortgageRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - form_url
                  - number
                properties:
                  number:
                    type: string
                    description: Номер заявки ДВИЖ
                    example: "ИП456789"
                    minLength: 1
                  form_url:
                    type: string
                    format: url
                    description: Ссылка на форму заявки в ДВИЖ
                    minLength: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          description: |
            Неизвестная ошибка \
            * `sms_authentication_required` - Пользователю отправлено смс, \
            * `sms_code_invalid` - Неправильный код,
            Необходимо вызвать метод повторно с параметром code

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /mortgage/offer/{offer-id}:
    get:
      operationId: getMortgageOffer
      tags: [ mortgage ]
      description: Получить детали заявки в банк
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093634
      parameters:
        - name: offer-id
          in: path
          description: Внутренний ID заявки в банк
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MortgageOfferDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

    post:
      operationId: selectMortgageOfferAsMain
      tags: [ mortgage ]
      description: |
        Выбор заявки в банк в качестве основной
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093626
      parameters:
        - name: offer-id
          in: path
          description: Внутренний ID заявки в банк
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'


  # ################################

  /tradein/offers:
    get:
      operationId: listTradeinOffers
      tags: [ tradein ]
      description: |
        Получение списка предложений Trade in
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285082257
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeinOffersList'
        '500':
          description: Internal Server Error


  /tradein/form:
    post:
      operationId: sendTradeOnRequest
      tags: [ tradein ]
      description: |
        Отправка заявки на оценку квартиры для trade in\
        Метод можно вызвать как для авторизованного пользователя, так и для неавторизованного\
        От этого зависят проверки входных данных
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285088635
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradeinFormRequest'
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  # ################################

  /user:
    delete:
      operationId: deleteUser
      tags:
        - user
      description: |
        Метод удаляет личный кабинет и пользователя в SuperApp со всеми связанными сущностями\
        Работает только для авторизованных пользователей\
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/x/rgpdEQ
      responses:
        '204':
          description: Successful operation
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      operationId: getUserDetails
      tags:
        - user
      description: |
        Метод основных данных по пользователю
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668012
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /user/bookings:
    get:
      operationId: listUserBookings
      tags:
        - user
      description: |
        Метод получения списка бесплатных бронирований пользователя (в т.ч. исторических) с полным набором данных о бронируемых ОН
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668102
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBookingList'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /user/bookings/active:
    get:
      operationId: listUserActiveBookings
      tags:
        - user
      description: |
        Метод получения списка действующих бесплатных бронирований пользователя
      security:
        - JWT: [ ]
        - FUSER_ID: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291315638
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActiveBookingList'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error

  /user/booking/product/{code}:
    post:
      operationId: bookProduct
      tags: [ user ]
      description: |
        Бесплатное бронирование объектов недвижимости.
        Метод можно использовать как для аутентифицированного пользователя, так и для не
        аутентифицированного. От этого зависят проверки входных данных.
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273657900
      parameters:
        - name: code
          description: |
            Символьный код объекта недвижимости.
          in: path
          required: true
          schema:
            type: string
            example: 'sb-5-5-k-1-2-1-50201'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: '#/components/schemas/Consents'
                        source:
                          $ref: '#/components/schemas/RequestSource'
                - $ref: '#/components/schemas/ProductBookingRequest'
      responses:
        '200':
          description: |
            Заявка успешно отправлена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBookingResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBookingResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingError'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingError'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingError'

  /user/devices:
    get:
      operationId: listUserDevices
      tags:
        - user
      description: |
        Метод получения списка устройств пользователя
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=302779707
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDevicesList'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error

  /user/devices/{id}/logout:
    post:
      operationId: logoutAtUserDevice
      tags: [ user ]
      description: |
        Метод для сброса сессии на конкретном устройстве
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=302780521
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор устройства в системе
          schema:
            type: integer
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /user/favourites:
    get:
      operationId: favouriteProductListRequest
      summary: Получение списка избранных ОН
      tags:
        - user
      description: |
        Метод получения списка избранного пользователя
      security:
        - JWT: [ ]
        - FUSER_ID: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091119
      parameters:
        - $ref: '#/components/parameters/categoryFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFavouritesList'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error


  /user/favourites/{code}:
    post:
      operationId: additionFavouriteProductRequest
      summary: Добавление ОН в избранное
      tags: [ user ]
      description: |
        Добавление в избранное ОН\
        Метод можно вызвать как для авторизованного пользователя, так и для неавторизованного\
        От этого зависят проверки входных данных
      security:
        - JWT: [ ]
        - FUSER_ID: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091115
      parameters:
        - name: code
          in: path
          required: true
          description: Код ОН
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags: [ user ]
      operationId: deleteFavouriteProductRequest
      summary: Удаление избранного ОН
      description: |
        Удаление избранного ОН\
        Метод можно вызвать как для авторизованного пользователя, так и для неавторизованного\
        От этого зависят проверки входных данных
      security:
        - JWT: [ ]
        - FUSER_ID: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091117
      parameters:
        - name: code
          in: path
          required: true
          description: Код ОН
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /user/subscription/marketing:
    post:
      operationId: subscriptionMarketingRequest
      summary: Подписка на маркетинговые рассылки
      tags: [ user ]
      description: |
        Оформляет подписку пользователя на маркетинговую рассылку. Метод можно использовать как для
        аутентифицированного пользователя, так и для неаутентифицированного.
      security:
        - { }
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668410
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: '#/components/schemas/Consents'
                - $ref: '#/components/schemas/NewSubscriptionMarketing'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewSubscriptionResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /user/subscription/product-status:
    post:
      operationId: subscriptionProductRequest
      summary: Подписка на забронированный ОН
      tags: [ user ]
      description: |
        Метод оформления подписки на смену статуса ОН. Метод можно использовать как для
        аутентифицированного пользователя, так и для не аутентифицированного.
      security:
        - { }
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273665381
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: '#/components/schemas/Consents'
                - $ref: '#/components/schemas/NewSubscriptionProductStatus'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewSubscriptionResult'
        '400':
          description: |
            Синтаксическая ошибка в запросе.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: |
                      Общее сообщение об ошибке.
                    type: string
                    nullable: true
                    example: 'Не все обязательные поля указаны.'
                  errors:
                    description: |
                      Подробные описания ошибок.
                    type: array
                    items:
                      type: string
                      example: 'Подробное описание ошибки.'
        '422':
          description: |
            Невозможно этот запрос.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: |
                      Общее сообщение об ошибке.
                    type: string
                    nullable: true
                    example: 'Не все обязательные поля указаны.'
                  errors:
                    description: |
                      Подробные описания ошибок.
                    type: array
                    items:
                      type: string
                      example: 'Подробное описание ошибки.'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /user/consultation:
    post:
      operationId: consultationRequest
      summary: Запрос консультации для пользователя
      tags: [ user ]
      description: |
        Запрос консультации для пользователя. Метод можно использовать как для
        аутентифицированного пользователя, так и для не аутентифицированного.
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093271
      parameters:
        - $ref: '#/components/parameters/captchaToken'
        - $ref: '#/components/parameters/deviceToken'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CommonRequestPayload'
                - properties:
                    meta:
                      properties:
                        consents:
                          $ref: '#/components/schemas/Consents'
                - $ref: '#/components/schemas/UserConsultationRequest'
      responses:
        '200':
          description: |
            Заявка успешно отправлена.
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    description: |
                      Идентификатор созданной заявки.
                    type: string
                    format: uuid
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /user/callback:
    post:
      operationId: callbackRequest
      summary: Запрос обратного звонка
      tags: [ user ]
      description: |
        Метод запроса обратного звонка. Метод можно использовать как для
        аутентифицированного пользователя, так и для не аутентифицированного.
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=321193076
      parameters:
        - $ref: '#/components/parameters/captchaToken'
        - $ref: '#/components/parameters/deviceToken'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: '#/components/schemas/Consents'
                - $ref: '#/components/schemas/UserCallbackRequest'
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'


  /user/password/change:
    post:
      operationId: passwordChangeRequest
      summary: Запрос смены пароля
      tags: [ user ]
      description: |
        Запрос на смену пароля для пользователя
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093271
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordChangeRequest'
      responses:
        '204':
          description: Successful operation
        '500':
          $ref: '#/components/responses/InternalServerError'

  /purchases:
    get:
      operationId: purchaseListRequest
      summary: Получение списка сделок
      tags:
        - purchase
      description: |
        Метод получения списка сделок пользователя
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289570862
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasesList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /purchases:refresh:
    post:
      summary: Обновить состояние сделок
      tags:
        - purchase
      operationId: refreshCustomerDeals
      description: |
        Метод запускает обновление состояния сделок клиента. Обновление выполняется асинхронно, в
        фоне.

        Метод позволяет пользователям приложения и сайта принудительно обновить данные сделок, на
        случай если оно ранее не было выполнено автоматически. Например, из-за каких-то ошибок.

        Имеется ограничение на то, как часто клиент может запрашивать обновление. Это ограничение
        может меняться, поэтому точное значение здесь не приводится.
      security:
        - JWT: [ ]
      externalDocs:
        url: https://confluence.mr-group.ru/pages/viewpage.action?pageId=74075197
      responses:
        '200':
          description: |
            Обновление сделок успешно инициировано.
          content:
            application/json:
              schema:
                type: object
                required:
                  - blocking_period
                  - retry_after
                properties:
                  blocking_period:
                    $ref: '#/components/schemas/BlockingPeriod'
                  retry_after:
                    $ref: '#/components/schemas/RetryAfter'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          description: |
            От клиента поступило слишком много запросов в течение определённого отрезка времени.

            Возможные коды ошибок:

            - `too_many_requests`
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - blocking_period
                      - retry_after
                    properties:
                      blocking_period:
                        $ref: '#/components/schemas/BlockingPeriod'
                      retry_after:
                        $ref: '#/components/schemas/RetryAfter'
                  - $ref: '#/components/schemas/Errors'
          headers:
            retry-after:
              $ref: '#/components/headers/RetryAfter'
        '500':
          description: |
            При обработке запроса на сервере произошла внутренняя ошибка.

            Возможные коды ошибок:
            - `customer_ids_mismatch` — не совпадают идентификаторы клиента в разных системах.
            - `customer_not_found` — клиент не найден во внешней системе.
            - `internal_error` — внутренняя ошибка приложения.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Errors'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /purchase/{purchase-id}:
    get:
      operationId: purchaseRequest
      summary: Получение данных по сделке
      tags: [ purchase ]
      description: |
        Метод, который позволяет получить данные по сделке в текущем состоянии
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289571678
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /purchase/{purchase-id}/documents:
    get:
      operationId: purchaseDocumentsListRequest
      summary: Получение списка документов по сделке
      tags: [ purchase ]
      description: |
        Метод, который позволяет получить список документов по сделке
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289572300
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseDocumentsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /purchase/{purchase-id}/documents/{document-id}:
    get:
      operationId: purchaseDocumentRequest
      summary: Получение документа по сделке
      tags: [ purchase ]
      description: |
        Метод, который позволяет получить реквизиты документа в сделке
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289572442
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
        - name: document-id
          in: path
          required: true
          description: ID документа
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseDocumentDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'


  /purchase/{purchase-id}/bills:
    get:
      operationId: purchaseBillsListRequest
      summary: Получение счетов по сделке
      tags: [ purchase ]
      description: |
        Метод, который позволяет получить список счетов по сделке
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289572436
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'


  /purchase/{purchase-id}/documents/{document-id}/acceptance:
    post:
      operationId: purchaseDocumentAcceptanceRequest
      summary: Ознакомление с договором приобретения ОН
      tags: [ purchase ]
      description: |
        Метод, который позволяет отправить подтверждение ознакомления с договором в процессе сделки
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291310349
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
        - name: document-id
          in: path
          required: true
          description: ID документа
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /purchase/{purchase-id}/payments:
    get:
      operationId: purchasePaymentsListRequest
      summary: Получение графика платежей
      tags: [ purchase ]
      description: |
        Метод, который позволяет получить данные платежей по рассрочке в рамках сделки
      security:
        - JWT: [ ]
      externalDocs:
        url: https://confluence.mr-group.ru/pages/viewpage.action?pageId=74067546
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchasePaymentsList'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /purchase/{purchase-id}/schedule/{product-id}:
    get:
      operationId: inspectionScheduleRequest
      summary: Получение слотов для записи на осмотр
      tags: [ purchase ]
      description: |
        Метод, который позволяет получить список слотов для записи на осмотр ОН
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307073763
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: Внутренний идентификатор сделки
          schema:
            type: string
        - name: product-id
          in: path
          required: true
          description: Внутренний идентификатор ОН
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'


  /purchase/{purchase-id}/inspections/registration:
    post:
      operationId: inspectionRegistrationRequest
      summary: Запись на осмотр ОН
      tags: [ purchase ]
      description: |
        Метод создания записи на осмотр
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307072814
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: Внутренний идентификатор сделки
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InspectionRegistrationRequest'
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'


  /purchase/{purchase-id}/inspections/{inspection-id}/cancel:
    post:
      operationId: inspectionCancelRequest
      summary: Отмена записи на осмотр ОН
      tags: [ purchase ]
      description: |
        Метод отмены записи на осмотр.
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307073066
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: Внутренний идентификатор сделки
          schema:
            type: string
        - name: inspection-id
          in: path
          required: true
          description: Внешний идентификатор осмотра
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /purchase/mrclub/offers:
    get:
      operationId: purchaseMrclubRequest
      summary: Предложения MR Club для сделок
      tags: [ purchase ]
      description: |
        Метод получения списка предложений MR Club для сделок
      security:
        - JWT: [ ]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307076095
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseMrclubOffersList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ################################

  /referral/participation/requests:
    post:
      operationId: referralParticipationRequest
      summary: Запрос на участие в реферальной программе
      tags: [ referral ]
      description: |
        Позволяет потенциальному клиенту, получившему реферальную ссылку, подать заявку на
        участие в реферальной программе в
        [центр клиентской поддержки](https://wiki.adv.ru/pages/viewpage.action?pageId=307075716).

        - [Аналитика](https://wiki.adv.ru/pages/viewpage.action?pageId=330567331)
      externalDocs:
        description: Отправка запроса на участие в реферальной программе.
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=330567331
      security: [ ]
      parameters:
        - $ref: '#/components/parameters/captchaToken'
        - $ref: '#/components/parameters/deviceToken'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: '#/components/schemas/Consents'
                        source:
                          $ref: '#/components/schemas/RequestSource'
                    data:
                      $ref: '#/components/schemas/ReferralParticipationRequest'
      responses:
        '204':
          description: |
            Заявка успешно отправлена.
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /project/{project-code}/features:
    get:
      operationId: projectFeaturesReques
      tags: [ catalog ]
      description: Метод получения списка особенностей проекта
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085285
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код Проекта
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesList'
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

  /project/{project-code}/features/{id}:
    get:
      operationId: projectFeatureReques
      tags: [ catalog ]
      description: Метод получения списка особенностей проекта
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085289
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: ID особенности
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureContent'
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

  /project/{project-code}/gallery:
    get:
      operationId: projectGalleryReques
      tags: [ catalog ]
      description: Метод получения галереи для проекта
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273656410
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGalleryList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /decoration:
    get:
      operationId: decorationListReques
      tags: [ catalog ]
      description: |
        Получение информации по отделкам
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093883
      parameters:
        - $ref: '#/components/parameters/projectCodeParam'
        - $ref: '#/components/parameters/productCodeFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecorationList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /decoration/kitchen/options:
    get:
      operationId: decorationKitchenOptionsListReques
      tags: [ catalog ]
      description: |
        Получение информации о доступных вариантах кухонь по идентификатору типа планировки кухни
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307069149
      parameters:
        - $ref: '#/components/parameters/kitchenLayoutTypeIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KitchenOptionsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /project/{project-code}/infrastructure:
    get:
      operationId: projectInfrastructureReques
      tags: [ catalog ]
      description: Метод возвращает объекты инфраструктуры, категории инфраструктуры и данные проекта для карты
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285089266
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /construction-progress/projects:
    get:
      operationId: constructionProgressProjectsListReques
      tags: [ catalog ]
      description: Метод получения списка проектов с ходом строительства
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285089566
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstructionProgressProjectsList'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /project/{project-code}/construction-progress:
    get:
      operationId: constructionProgressRequest
      tags: [ catalog ]
      description: Возвращает общую информацию для блока Ход строительства
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273677634
      parameters:
        - name: project-code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstructionProgress'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /project/{project-code}/construction-progress/photo:
    get:
      operationId: constructionProgressPhotoRequest
      tags: [ catalog ]
      description: Возвращает фотографии за определенный месяц для блока Ход строительства
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273677635
      parameters:
        - name: project-code
          in: path
          required: true
          schema:
            type: string
        - name: month
          in: query
          required: true
          schema:
            type: integer
        - name: year
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstructionProgressPhoto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /mrclub/offers/category:
    get:
      operationId: mrclubOffersCategoryListRequest
      tags: [ mrclub ]
      description: |
        Получение всех категорий предложений MR Club
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285095021
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MrclubCategoryList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /mrclub/offers/category/{category-code}:
    get:
      operationId: mrclubOffersCategoryRequest
      tags: [ mrclub ]
      description: |
        Получение списка предложений MR Club для категории
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285095023
      parameters:
        - name: category-code
          in: path
          required: true
          description: Категория предложения MR Club
          schema:
            type: string
        - $ref: '#/components/parameters/paginationPage'
        - $ref: '#/components/parameters/paginationLimit'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MrclubOffersList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /mrclub/offers/{offer-code}:
    get:
      operationId: mrclubOfferRequest
      tags: [ mrclub ]
      description: |
        Получение информации по конкретному предложению MR Club
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285095026
      parameters:
        - name: offer-code
          in: path
          required: true
          description: Код предложения
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MrclubOfferContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'



  # ################################

  /products-collection:
    get:
      operationId: productsCollectionListRequest
      tags: [ hold ]
      description: |
        Метод возвращает список всех карточек подборок для главной страницы
      externalDocs:
        url: https://wiki.adv.ru/x/ew1dEQ
      parameters:
        - $ref: '#/components/parameters/paginationPage'
        - $ref: '#/components/parameters/paginationLimit'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsCollectionList'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /products-collection/{code}:
    get:
      operationId: productsCollectionRequest
      tags: [ hold ]
      description: |
        Метод возвращает по коду список ОН конкретной подборки
      externalDocs:
        url: https://wiki.adv.ru/x/vxFdEQ
      parameters:
        - name: code
          in: path
          description: Внутренний код подборки
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/paginationPage'
        - $ref: '#/components/parameters/paginationLimit'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsCollectionGoodsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /project/{project-code}/booklets:
    get:
      operationId: bookletsRequest
      tags: [ catalog ]
      description: |
        Метод возвращает материалы по проекту
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291315558
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
            example: "mod"
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookletsResponse'


  /private-file/{file-id}:
    get:
      operationId: privateFileRequest
      tags: [ files ]
      description: |
        Метод возвращает файл из приватного хранилища, предваритально проверяя наличие доступа к файлу
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291322206
      parameters:
        - name: file-id
          in: path
          required: true
          description: ID приватного файла
          schema:
            type: integer
            example: 2225511
      responses:
        '200':
          description: Succesfull opeartion
          content:
            application/octet-stream: { }
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  # ################################

  /hotline/form:
    post:
      operationId: hotlineFormRequest
      tags: [ hotline ]
      description: |
        Метод отправки обращения на линию доверия
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291318867
      parameters:
        - $ref: '#/components/parameters/captchaToken'
        - $ref: '#/components/parameters/deviceToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotlineFormRequest'
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /yandex/realty/feeds/sale-new:
    get:
      operationId: yandexRealtySaleNewFeed
      summary: Фид новостроек
      tags: [ 'yandex/realty' ]
      description: |
        Возвращает
        [фид для новостроек](https://yandex.ru/support/realty/requirements/requirements-sale-new.html).

        URL этого метода предназначен для передачи Яндексу.
      security: [ ]
      responses:
        '200':
          description: |
            Содержимое фида.
          content:
            application/xml:
              schema:
                type: string
              example: |
                <?xml version="1.0" encoding="UTF-8"?>
                <realty-feed xmlns="http://webmaster.yandex.ru/schemas/feed/realty/2010-06">
                <generation-date>2025-04-11T12:00:00+04:00</generation-date>
                <offer>
                ...
                </offer>
                ...
                </realty-feed>
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

# ################################
#
# Модели данных
#
# ################################


components:

  headers:

    CacheControl:
      description: |
        Инструкции по кэшированию ответа.

        - [Cache-Control](https://www.ietf.org/rfc/rfc9111.html#name-cache-control) (RFC 9111)
        - [Cache-Control](https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Cache-Control) (MDN)
      schema:
        type: string
        example: 'private'

    LastModified:
      description: |
        Дата и время последнего изменения запрошенного ресурса.
        Для коллекций — время последнего изменения ресурсов в коллекции.

        - [Last-Modified](https://www.ietf.org/rfc/rfc7232.html#section-2.2) (RFC 7232)
        - [Last-Modified](https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Last-Modified) (MDN)
      schema:
        type: string
        example: 'Wed, 21 Oct 2015 07:28:00 GMT'

    RetryAfter:
      description: |
        Время, начиная с которого можно повторить попытку.
      schema:
        type: string
        example: 'Tue, 29 Oct 2024 16:56:32 GMT'

  responses:

    #######################################
    ## Типовые ответы.
    ## Располагайте в алфавитном порядке!
    #######################################

    BadRequest:
      description: |
        Синтаксическая ошибка в запросе: неверный JSON, нет обязательного поля, недопустимый тип
        значения и т.п.

        Возможные коды ошибок:

        - `invalid_value` — полученное значение не соответствует заданным ограничениям;
        - `syntax_error` — синтаксическая ошибка в запросе.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'

    ConsentDocument:
      description: |
        [Документ согласия](https://wiki.adv.ru/pages/viewpage.action?pageId=307093060).
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/components/schemas/ConsentDocument'
      headers:
        cache-control:
          $ref: '#/components/headers/CacheControl'
        last-modified:
          $ref: '#/components/headers/LastModified'

    Forbidden:
      description: |
        Доступ запрещен.

        Возможные коды ошибок:
        - `access_denied` — доступ запрещён.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'

    FormConfig:
      description: |
        [Конфигурация формы](https://wiki.adv.ru/pages/viewpage.action?pageId=307092923).
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/components/schemas/FormConfig'
      headers:
        cache-control:
          $ref: '#/components/headers/CacheControl'

    FormConfigCollection:
      description: |
        Коллекция конфигураций форм.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/FormConfig'
      headers:
        cache-control:
          $ref: '#/components/headers/CacheControl'

    InternalServerError:
      description: |
        При обработке запроса на сервере произошла внутренняя ошибка.

        Возможные коды ошибок:
        - `internal_error` — внутренняя ошибка приложения.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'

    NotFound:
      description: |
        Запрошенный URL не существует.

        Возможные коды ошибок:

        - `not_found` — запрошенный ресурс не найден.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'

    ServiceUnavailable:
      description: |
        Сервер не готов обработать запрос.

        Возможные коды ошибок:

        - `service_unavailable` — приложение временно недоступно.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'

    TooManyRequests:
      description: |
        От клиента поступило слишком много запросов в течение определённого отрезка времени.

        Возможные коды ошибок:

        - `too_many_requests`
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
      headers:
        retry-after:
          $ref: '#/components/headers/RetryAfter'

    Unauthorized:
      description: |
        Требуется аутентификация.

        Возможные коды ошибок:

        - `authentication_required` — не предоставлены аутентификационные данные.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'

    UnprocessableEntity:
      description: |
        Данные запроса не могут быть обработаны.

        Возможные коды ошибок:

        - `unprocessable_entity` — логическая ошибка, из-за которой невозможно произвести операцию над ресурсом.
        - `not_available_time` — запрашиваемое время недоступно
        - `already_created` — запрашиваемая на создание сущность уже создана
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'

  schemas:

    ################################################################
    ## Располагайте схемы в алфавитном порядке для удобства поиска
    ## и снижения риска конфликтов при слиянии.
    ################################################################

    AttrAdvertisementLabel:
      description: |
        Текст рекламной метки.
      type: string
      nullable: true
      minLength: 1
      example: 'Реклама. АО "МР ГРУПП". erid: b3XmBtzt1r8P'

    AttrQueues:
      description: |
        Перечень очередей и сроков сдачи в ней.
      type: object
      nullable: true
      additionalProperties:
        description: В качестве ключа указывается номер очереди, например "1".
        type: array
        items:
          $ref: '#/components/schemas/AttrDate'

    AttrBuildingDeadline:
      description: |
        Срок сдачи корпуса.
      type: string
      format: datetime
      example: '2012-04-23T18:25:43.511Z'

    AttrBuildingId:
      description: |
        Идентификатор корпуса.
      type: integer
      example: 9214

    AttrBuildingCode:
      description: |
        Символьный код корпуса.
      type: string
      minLength: 1
      example: 'mann'

    AttrBuildingName:
      description: |
        Маркетинговое название корпуса.
      type: string
      minLength: 1
      example: 'Ocean 3'

    AttrCategoryCode:
      description: |
        Категория ОН (тип ОН).
      type: string
      enum:
        - 'boxrooms'
        - 'commercials'
        - 'flats'
        - 'offices'
        - 'parkings'

    AttrCategoryName:
      description: |
        Название типа ОН.
      type: string
      minLength: 1
      example: 'Квартиры'

    AttrMapCoordinate:
      description: |
        Параметр координаты точки для отображения на карте, используется для:

        - `latitude` — широта
        - `longitude` — долгота
      type: number
      example: 37.089521

    AttrCompassAngle:
      description: |
        Угол поворота компаса в градусах, указывающий на стороны света.
      type: number
      nullable: true
      minimum: -359
      maximum: 359
      example: 56

    AttrDate:
      description: |
        Дата.
      type: string
      format: date
      example: '2022-03-15'

    AttrDatetime:
      description: |
        Дата и время.
      type: string
      format: datetime
      example: '2012-04-23T18:25:43.511Z'

    AttrEmail:
      description: |
        Адрес электронной почты.
      type: string
      example: 'user@example.com'

    AttrImageLink:
      description: |
        URL изображения относительно корня сайта.
      type: string
      minLength: 1
      example: '/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png'

    AttrMaxDiscount:
      description: |
        Максимальная скидка в процентах.
      type: number
      nullable: true
      example: 25

    AttrMetroDistance:
      description: |
        Расстояние до метро.
      type: integer
      nullable: true
      example: 14

    AttrMetroColor:
      type: string
      nullable: true
      description: Цвет станции метро
      example: "#356547"

    AttrMetroLine:
      type: string
      nullable: true
      description: Номер линии метро
      example: '8A'

    AttrMetroName:
      type: string
      description: Название станции метро
      example: "Имя станции"

    AttrMinPrice:
      type: number
      description: Минимальная цена в рублях
      example: 10052807

    AttrMinPriceNullable:
      type: number
      description: Минимальная цена в рублях
      example: 10052807
      nullable: true

    AttrMortgageInitialPayment:
      type: number
      description: Сумма первоначального взноса в рублях
      example: 2000000
      nullable: true

    AttrMortgageRate:
      type: number
      description: Процентная ставка по ипотеке
      example: 5.2
      nullable: true

    AttrMortgageMonthlyPayment:
      type: number
      description: Ежемесячный платёж по ипотеке в рублях
      example: 58121

    AttrMrclubCardNumber:
      description: Номер карты программы лояльности MR Club
      type: string
      example: "4444568915658964"

    AttrPaymentLink:
      type: string
      format: url
      description: Ссылка на оплату
      example: "https://securepayments.sberbank.ru/payment/docsite/payform-1.html?token=f5eb7yao31iyf1p2of12ues531"

    AttrPointCoordinate:
      description: |
        Параметр координаты точки (пина) для отображения на картинке.
        Точка используется для двух координат — x и y. Сообщает сдвиг по оси в %
      type: number
      example: 14.5

    AttrProductArea:
      type: number
      description: Общая площадь ОН в квадратных метрах
      nullable: true
      example: 65.8

    AttrProductArticle:
      type: string
      description: Артикул ОН
      example: "Метрополия-Amsterdam-1-19-1-1"
      nullable: true

    AttrProductBookingType:
      type: string
      description: |
        Тип бронирования ОН.

        - `free` — устное бронирование
        - `not_available` — бронирование недоступно
        - `paid` — платное бронирование
      nullable: true
      enum:
        - 'free'
        - 'not_available'
        - 'paid'

    AttrProductCellingHeught:
      type: number
      description: Высота потолков в метрах
      example: 2.9
      nullable: true

    AttrProductCode:
      description: |
        Код объекта недвижимости.
      type: string
      minLength: 1
      example: 'kvartira-21'

    AttrProductFloor:
      type: integer
      description: Этаж
      nullable: true
      example: 3

    AttrObjectId:
      description: |
        Идентификатор объекта недвижимости
      type: integer
      example: 9214

    AttrProductMeterPrice:
      type: number
      description: Стоимость одного метра в рублях
      example: 215812

    AttrProductMonthlyPayment:
      type: number
      description: Ежемесячный платеж в рублях
      example: 21581
      nullable: true

    AttrProductName:
      type: string
      description: Название ОН
      example: "СТН-1-2-К-1-2-3-3"
      minLength: 1

    AttrProductNumber:
      type: string
      description: Номер ОН
      nullable: true
      example: "148А"

    AttrProductNumberOnFloor:
      type: integer
      description: Номер ОН на этаже
      example: 23

    AttrProductRoomsNumber:
      type: integer
      description: Количество комнат
      nullable: true
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4

    AttrProductStopSales:
      type: boolean
      description: Признак "Стоп-продажи" для ОН

    AttrProductTechnicalLayout:
      type: string
      description: План ОН (техническая планировка)
      nullable: true
      example: "/upload/iblock/c13/9zarozg1dm2s58i7j30by3gn42r97puj.webp"

    AttrProductFunctionalLayout:
      type: string
      description: Функциональная планировка
      nullable: true
      example: "/upload/iblock/c13/9zarozg1dm2s58i7j30by3gn42r97puj.webp"

    AttrProductApartmentOnFloor:
      type: string
      description: План ОН на этаже
      nullable: true
      example: "/upload/iblock/027/dgo7asfu4yc9n1yu25iu20j3putp25yg.webp"

    AttrProductLayout3d:
      type: string
      description: Ссылка на 3D-план
      example: "https://mrsuperapp.adv.ru/"
      nullable: true

    AttrProductTotalPrice:
      type: number
      description: Базовая цена ОН в рублях
      example: 14027818
      nullable: true

    AttrProductMortgagePrice:
      type: number
      description: Цена ОН в рублях для ипотеки
      example: 14027818

    AttrProductDiscountPrice:
      description: Цена ОН со скидкой в рублях
      type: number
      example: 14027818

    AttrProductDiscountType:
      description: |
        Вариант расчета скидки.

        - `absolute` — абсолютное значение в рублях
        - `percent` — в процентах от суммы
      type: string
      enum:
        - 'absolute'
        - 'percent'
      minLength: 1

    AttrProductDiscountPercent:
      description: Размер скидки в процентах.
      type: number
      example: 20.5

    AttrProductDiscountAbsolute:
      type: number
      description: Размер скидки в рублях
      example: 285000.14

    AttrProductDiscountDescription:
      type: string
      description: |
        Описание скидки
        В текущей реализации передается статичный текст
      example: "Срок действия условий ограничен. Точную цену уточняйте у менеджера."
      nullable: true
      minLength: 1

    AttrProductVentilation:
      type: boolean
      description: Признак наличия у ОН технологической вентиляции

    AttrProjectId:
      type: integer
      description: Идентификатор проекта
      example: 9214

    AttrProjectExternal:
      description: |
        Признак [внешнего проекта](https://wiki.adv.ru/pages/viewpage.action?pageId=307092650).

        Для таких проектов могут быть недоступны некоторые функции (например, покупка).
      type: boolean

    AttrProjectPrivate:
      description: |
        Признак проекта Private.
      type: boolean

    AttrProjectPresentation:
      description: |
        Признак доступности презентаций для ОН Проекта.
      type: boolean

    AttrProjectBusinessUnit:
      description: |
        Признак однозначно определяющий бизнес-юнит проекта (https://wiki.adv.ru/pages/viewpage.action?pageId=330568355)
      type: string
      enum:
        - 'commercials'
        - 'flats'
        - 'offices'

    AttrProjectImage:
      type: string
      nullable: true
      description: Изображение проекта
      example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"

    AttrProjectMain3d:
      type: string
      description: Ссылка на 3D-тур проекта
      nullable: true
      example: 'https://example.com/3d_plan'

    AttrProjectAir3d:
      type: string
      description: Ссылка на Аэросъемку
      nullable: true
      example: 'https://example.com/aero_plan'

    AttrProjectName:
      type: string
      description: Название проекта
      example: "MOD"
      minLength: 1

    AttrProjectTitle:
      type: string
      nullable: true
      description: Заголовок проекта
      example: "Премиальный жилой комплекс в 10 минутах от Цветного бульвара"

    AttrPurchaseStep:
      type: string
      description: Код состояния сделки
      enum:
        - 'AttrPurchaseStep'
        - 'booking_canceled'
        - 'booking_expired'
        - 'booking_paid'
        - 'booking_payment'
        - 'building'
        - 'contract_acceptance_ddu'
        - 'contract_acceptance_dkp'
        - 'contract_acceptance_main'
        - 'contract_acceptance_pddu'
        - 'contract_acceptance_pdkp'
        - 'contract_acceptance_uddu'
        - 'contract_accepted'
        - 'contract_approval'
        - 'contract_preparing_eds'
        - 'contract_registration'
        - 'contract_signing'
        - 'contract_signing_eds'
        - 'escrow_opening'
        - 'inspection_canceling'
        - 'inspection_completed'
        - 'inspection_confirmation'
        - 'inspection_registration'
        - 'inspection_starting'
        - 'inspection_waiting'
        - 'letter_of_credit_opening'
        - 'notifying'
        - 'purchase_completed'
        - 'registration_preparing'
        - 'unilateral_act_sent'

    AttrCount:
      type: integer
      description: Количество найденных элементов (с учётом фильтров) согласно запросу

    AttrPaginationLimit:
      type: integer
      description: Количество элементов на странице

    AttrPaginationPage:
      type: integer
      description: Текущая страница

    AttrPaginationPageCount:
      type: integer
      description: Общее количество страниц для соответствующего limit

    BannerProject:
      description: |
        Проект для баннера.
      nullable: true
      required:
        - code
        - logo
        - metro
        - metro_distance
        - min_price
        - movement_way
        - price_from
      properties:
        code:
          $ref: '#/components/schemas/ProjectCode'
        logo:
          $ref: '#/components/schemas/ProjectLogo'
        price_from:
          description: |
            **Поле запланировано к удалению!**

            Минимальная цена ОН в проекте.
          type: number
          nullable: true
          example: 23
        min_price:
          description: Минимальная цена ОН в проекте.
          type: number
          nullable: true
          example: 23
        metro:
          $ref: '#/components/schemas/Metro'
        metro_distance:
          $ref: '#/components/schemas/AttrMetroDistance'
        movement_way:
          $ref: '#/components/schemas/MetroMovementWay'

    BlockingPeriod:
      description: |
        Срок блокировки в минутах.
      type: integer
      example: 60

    BookingError:
      description: Сообщение об ошибки для метода бесплатного бронирования
      type: object
      properties:
        result:
          type: string
          description: Текст ошибки
        description:
          type: string
          description: Описание ошибки

    BrokersPartnershipRequest:
      description: |
        Тело заявки на партнёрство.
      type: object
      required:
        - email
        - name
        - phone
      properties:
        email:
          $ref: '#/components/schemas/Email'
        name:
          $ref: '#/components/schemas/PersonFreeFormName'
        phone:
          $ref: '#/components/schemas/PhoneNumber'

    CommercialsBannerListResponse:
      type: object
      description: |
        Список баннеров для разводящей торговой недвижимости.
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MainBanner'

    CommonRequestPayload:
      description: |
        Общая часть тела для всех запросов.
      type: object
      properties:
        meta:
          description: |
            Метаданные запроса.
          type: object
          properties:
            source:
              $ref: '#/components/schemas/RequestSource'

    ConsentDocument:
      description: |
        Документ, выражающий согласие, которое должен/может дать пользователь.
      type: object
      required:
        - brief
        - id
        - text
        - title
        - url_name
      properties:
        id:
          $ref: '#/components/schemas/ConsentDocumentId'
        url_name:
          $ref: '#/components/schemas/ConsentDocumentUrlName'
        title:
          description: |
            Название документа для показа пользователям.
          type: string
          example: 'Согласие на обработку персональных данных в целях маркетинговых рассылок'
        brief:
          description: |
            Краткое (обычно один-два абзаца) описание документа. Точное назначение неизвестно, но
            вероятно должно показываться при отображении документа между заголовком и полным
            текстом. Как правило носит справочный характер и не является юридически значимым.

            *Может содержать разметку HTML!*
          type: string
          example: '<p>Даю согласие на получение всякой фигни на электронную почту.</p>'
        text:
          description: |
            Юридически значимый текст.

            *Может содержать разметку HTML!*
          type: string
          example: "<ol>\n<li>…</li>\n<li>…</li>\n</ol>"

    ConsentDocumentId:
      description: |
        Идентификатор документа согласия.
      type: string
      example: '123456'

    ConsentDocumentRef:
      description: |
        Ссылка на документ, выражающий согласие, которое должен/может дать пользователь.
      type: object
      required:
        - id
        - url_name
      properties:
        id:
          $ref: '#/components/schemas/ConsentDocumentId'
        url_name:
          $ref: '#/components/schemas/ConsentDocumentUrlName'

    ConsentDocumentUrlName:
      description: |
        **Под вопросом!**

        Предположительно в этом атрибуте будет возвращаться код документа для использования в URL
        страницы документа на сайте.
      type: string
      example: 'politika-obrabotki-personalnykh-dannykh'

    ConsentRequest:
      description: |
        [Запрос согласия](https://wiki.adv.ru/pages/viewpage.action?pageId=307093033) — связующее
        звено между конфигурацией формы и документом согласия. Задаёт необходимость/возможность
        получения определённого согласия в определённой форме. Упрощённо говоря задаёт «галочку»,
        которую отобразить в форме ввода и определяет, является ли её установка обязательной для
        отправки формы.
      type: object
      required:
        - caption
        - consent_document
        - display_condition
        - required
      properties:
        caption:
          description: |
            Надпись для показа в форме возле «галочки».

            По требованиям нужна возможность поставить ссылку на связанный документ согласия с
            произвольной части подписи. При этом сама ссылка может быть разной на разных фронтах
            (в т. ч. вообще быть не ссылкой, а триггером какого-либо действия). Исходя из этого было
            принято решение отмечать нужный участок надписи метками  [URL]…[/URL] и оставить фронтам
            решение о том как именно делать ссылку с этого участка.
          type: string
          minLength: 14
          maxLength: 100
          example: 'Я ознакомлен с [URL]политикой обработки персональных данных[/URL] и даю согласие на обработку.'
        consent_document:
          $ref: '#/components/schemas/ConsentDocumentRef'
        display_condition:
          description: |
            Условие показа. Некоторые согласия могут требоваться (быть доступны) только при
            определённых условиях.

            - `always` — показывать всегда
            - `anonymous` — только анонимным пользователям
          type: string
          enum:
            - 'always'
            - 'anonymous'
        required:
          description: |
            Если флаг установлен, это означает что нельзя отправлять форму, пока пользователь не
            предоставит это согласие. При этом `displayCondition` имеет приоритет — если условие
            показа не выполняется, то обязательность неприменима.
          type: boolean

    Consents:
      description: |
        Согласия, предоставленные пользователем.
      type: object
      required:
        - consent_documents
      properties:
        consent_documents:
          description: |
            Перечень документов, с которыми выразил согласие пользователь.
          type: array
          items:
            $ref: '#/components/schemas/ConsentDocumentId'
        phone:
          allOf:
            - $ref: '#/components/schemas/PhoneNumber'
            - description: |
                Номер телефона пользователя для его идентификации как лица, предоставившего
                согласие.
                Можно не указывать, если запрос содержит заголовок `authentication` или указан
                адрес электронной почты в соседнем поле `email`.
        email:
          allOf:
            - $ref: '#/components/schemas/Email'
            - description: |
                Адрес электронной почты пользователя для его идентификации как лица, предоставившего
                согласие.
                Можно не указывать, если запрос содержит заголовок `authentication` или указан
                номер телефона в соседнем поле `phone`.

    Discount:
      type: object
      nullable: true
      description: |
        Полная информация о скидке и цене со скидкой
      required:
        - absolute_discount
        - description
        - meter_price
        - percentage_discount
        - price
        - type
      properties:
        price:
          $ref: '#/components/schemas/AttrProductDiscountPrice'
        meter_price:
          $ref: '#/components/schemas/AttrProductMeterPrice'
        type:
          $ref: '#/components/schemas/AttrProductDiscountType'
        percentage_discount:
          $ref: '#/components/schemas/AttrProductDiscountPercent'
        absolute_discount:
          $ref: '#/components/schemas/AttrProductDiscountAbsolute'
        description:
          $ref: '#/components/schemas/AttrProductDiscountDescription'

    DiscountedPrice:
      description: |
        Цена со скидкой.
      type: object
      nullable: true
      required:
        - percentage_discount
        - price
        - type
      properties:
        percentage_discount:
          $ref: '#/components/schemas/AttrProductDiscountPercent'
        price:
          $ref: '#/components/schemas/AttrProductDiscountPrice'
        type:
          $ref: '#/components/schemas/AttrProductDiscountType'

    Email:
      description: |
        Адрес электронной почты.
      type: string
      example: 'user@example.com'

    Error:
      description: |
        Сообщение об ошибке.
      type: object
      required:
        - code
        - detail
      properties:
        code:
          description: |
            Код ошибки. Предназначен для машинной обработки.
            Список возможных кодов см. в описаниях ответа и/или метода API.
          type: string
          example: 'some_error_code'
        title:
          description: |
            Краткое описание ошибки, пригодное для показа пользователю. Описание одинаково для всех
            ошибок с одним кодом (`code`).
          type: string
          example: 'Описание кода ошибки.'
        detail:
          description: |
            Подробное описание ошибки, пригодное для показа пользователю.
          type: string
          example: 'Подробное описание ошибки.'
        source:
          oneOf:
            - description: |
                Указание на поле с ошибкой.
              type: object
              required:
                - pointer
              properties:
                pointer:
                  description: |
                    Указатель ([RFC6901](https://tools.ietf.org/html/rfc6901)) на проблемный
                    атрибут запроса.
                  type: string
                  example: '/data/0/id'
            - description: |
                Указание на ошибочный параметр.
              type: object
              required:
                - parameter
              properties:
                parameter:
                  description: |
                    Строка, указывающая, какой параметр в URI вызвал ошибку.
                  type: string
                  example: 'sort'
            - description: |
                Указание заголовок HTTP, вызывавший ошибку.
              type: object
              required:
                - header
              properties:
                header:
                  description: |
                    Строка, указывающая имя единственного заголовка запроса, который вызвал ошибку.
                  type: string
                  example: 'content-type'

    Errors:
      description: |
        Список ошибок.
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        message:
          description: |
            Описание ошибки для совместимости со старым форматом.

            **Использовать не рекомендуется**. Используйте поле `errors`.
          type: string
          example: 'Подробное описание ошибки (для совместимости со старым форматом).'

    FormConfig:
      description: |
        [Конфигурация формы ввода](https://wiki.adv.ru/pages/viewpage.action?pageId=307092923).
      type: object
      required:
        - consents
        - id
      properties:
        id:
          $ref: '#/components/schemas/FormConfigId'
        consents:
          description: |
            Согласия, которые должен или может дать пользователь перед отправкой формы. Проще говоря
            «галочки», которые должен (может) проставить пользователь перед отправкой формы.
          type: array
          items:
            $ref: '#/components/schemas/ConsentRequest'

    FormConfigId:
      description: |
        Идентификатор (код) конфигурации формы.
      type: string
      enum:
        - 'booking'
        - 'callback'
        - 'consultation'
        - 'consultation_boxrooms_parking'
        - 'consultation_decoration'
        - 'consultation_mortgage_calc'
        - 'consultation_mortgage_manager'
        - 'phone_input'
        - 'registration'
        - 'subscription'
        - 'subscription_marketing'
        - 'subscription_news'

    MainBanner:
      description: |
        Баннер для главной страницы.
      type: object
      required:
        - active_btn_link
        - active_btn_text
        - active_color
        - active_title
        - ad_label
        - desktop_big_picture
        - desktop_normal_picture
        - discount_amount
        - id
        - mobile_picture
        - preview_picture
        - preview_title
        - project
        - tablet_picture
        - title
        - type
      properties:
        id:
          description: Идентификатор баннера.
          type: integer
          example: 55
        title:
          description: Заголовок баннера.
          type: string
          example: "Метрополия"
        type:
          description: Тип баннера (проект, скидка).
          type: string
          enum:
            - 'discount'
            - 'project'
        discount_amount:
          description: Сумма скидки (для типа баннера = "Скидка").
          type: string
          nullable: true
          example: "-5%"
        preview_title:
          description: Заголовок баннера для режима предварительного просмотра.
          type: string
          example: "Метрополия"
        preview_picture:
          description: Изображение для баннера для режима предварительного просмотра.
          type: string
          example: "/upload/iblock/686/fk8o5qawseokv1frdcpbma45f0jkpcvp.png"
        desktop_normal_picture:
          description: Изображение баннера для desktop viewport.
          type: string
          nullable: true
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        project:
          $ref: '#/components/schemas/BannerProject'
        active_color:
          type: string
          description: Цвет фона баннера для активного режима.
          example: "#6B6A72"
        active_title:
          description: Заголовок баннера для активного режима.
          type: string
          example: "Метрополия"
        active_btn_text:
          description: Текст кнопки баннера для активного режима.
          type: string
          nullable: true
          example: "Подробнее о проекте"
        active_btn_link:
          description: Ссылка кнопки баннера для активного режима.
          type: string
          nullable: true
          example: "site.com"
        mobile_picture:
          description: Изображение для мобильного viewport.
          type: string
          nullable: true
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        tablet_picture:
          description: Изображение для планшетного viewport.
          type: string
          nullable: true
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        desktop_big_picture:
          description: Изображение для viewport под большой desktop.
          type: string
          nullable: true
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        ad_label:
          $ref: '#/components/schemas/AttrAdvertisementLabel'

    MainBannersCollection:
      description: |
        Коллекция баннеров для главной страницы сайта.
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MainBanner'

    MortgageRequest:
      type: object
      description: Объект для запроса создания новой заявки на ипотеку
      required:
        - project
      properties:
        project:
          $ref: '#/components/schemas/ProjectCode'
        code:
          description: Код из смс для подтверждения доступа к пользователю в ДВИЖ
          type: string
          example: "412351"
        rate:
          $ref: '#/components/schemas/AttrMortgageRate'
        payment:
          $ref: '#/components/schemas/AttrMortgageMonthlyPayment'
        period_max:
          description: Максимальный период ипотечного предложения
          type: number
          example: 30
        initial_payment:
          description: Первоначальный взнос в рублях
          type: number
          example: 4500999
        price:
          $ref: '#/components/schemas/AttrProductMortgagePrice'
        purchase_id:
          description: Идентификатор сделки, из которой создается заявка
          type: number

    MortgageApplicationList:
      description: |
        Список заявок на ипотеку.
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MortgageApplicationDetail'

    MortgageApplicationDetail:
      description: |
        Заявка на ипотеку.
      type: object
      required:
        - create_date
        - id
        - lead_id
        - link
        - number
        - offers
        - payment
        - period
        - project
        - rate
        - status
      properties:
        id:
          description: Внутренний ID заявки.
          type: integer
          minimum: 1
        lead_id:
          type: string
          description: Идентификатор клиентского интереса (идентификатор лида в CRM)
          minLength: 1
          nullable: true
        number:
          description: Номер заявки.
          type: string
          minLength: 1
          example: 'ИП456789'
        status:
          $ref: '#/components/schemas/MortgageApplicationStatus'
        project:
          description: |
            Проект, в контексте которого была отправлена заявка
          type: object
          required:
            - code
            - id
            - name
          properties:
            id:
              $ref: '#/components/schemas/AttrProjectId'
            code:
              $ref: '#/components/schemas/ProjectCode'
            name:
              $ref: '#/components/schemas/AttrProjectName'
        rate:
          $ref: '#/components/schemas/AttrMortgageRate'
        payment:
          type: number
          description: Платеж по ипотеке в рублях
          example: 25665
          nullable: true
        period:
          type: integer
          description: Срок кредита в годах
          example: 30
          nullable: true
        create_date:
          type: string
          format: date
          description: Дата создания заявки
          example: "2022-03-15"
        link:
          type: string
          format: url
          description: Ссылка на форму
          example: "https://make.dvizh.online/sms/4VKX"
          minLength: 1
        offers:
          type: array
          description: Список заявок в банк
          items:
            $ref: '#/components/schemas/MortgageOffer'

    MortgageApplication:
      type: object
      description: Заявка на ипотеку
      required:
        - create_date
        - id
        - manager
        - number
        - project
        - status
      properties:
        id:
          type: integer
          description: Внутренний ID заявки
        number:
          type: string
          description: Номер заявки
          example: "ИП874525"
          minLength: 1
        project:
          type: object
          description: Проект
          required:
            - code
            - id
            - name
          properties:
            id:
              $ref: '#/components/schemas/AttrProjectId'
            code:
              $ref: '#/components/schemas/ProjectCode'
            name:
              $ref: '#/components/schemas/AttrProjectName'
        create_date:
          type: string
          format: date
          description: Дата создания заявки
          example: "2022-03-15"
        status:
          $ref: '#/components/schemas/MortgageApplicationStatus'
        manager:
          type: object
          description: Ипотечный менеджер
          required:
            - email
            - name
            - phone
          nullable: true
          properties:
            name:
              type: string
              description: ФИО менеджера
              example: "Фролов Андрей Викторович"
              nullable: true
              minLength: 1
            email:
              type: string
              description: email менеджера
              example: "user@domain.com"
              nullable: true
              minLength: 1
            phone:
              type: string
              description: телефон менеджера
              example: "+79996665555"
              nullable: true
              minLength: 1

    MortgageOffer:
      type: object
      description: Заявка в банк
      required:
        - amount
        - available
        - bank
        - id
        - payment
        - period
        - program
        - rate
        - status
      properties:
        id:
          type: integer
          description: Внутренний id заявки в банк
        program:
          type: string
          description: Название ипотечной программы
          example: "Семейная"
          minLength: 1
        bank:
          $ref: '#/components/schemas/MortgageCalcBank'
        rate:
          $ref: '#/components/schemas/AttrMortgageRate'
        payment:
          type: number
          description: Платеж по ипотеке
          example: 25665
          nullable: true
        amount:
          type: number
          description: Сумма кредита
          example: 10000000
          nullable: true
        period:
          type: integer
          description: Срок кредита в годах
          example: 30
          nullable: true
        available:
          type: boolean
          description: Предложение доступно для выбора
        status:
          $ref: '#/components/schemas/MortgageApplicationStatus'

    MortgageOfferDetail:
      description: Детальная карточка заявки в банк.
      type: object
      required:
        - amount
        - application
        - available
        - bank
        - create_date
        - id
        - initial_payment
        - payment
        - period
        - persons
        - program
        - rate
        - reject_reason
        - status
      properties:
        id:
          description: Внутренний ID заявки в банк.
          type: integer
          minimum: 1
        create_date:
          description: Дата создания заявки.
          type: string
          format: date
          example: '2022-08-15'
        program:
          description: Название ипотечной программы.
          type: string
          minLength: 1
          example: 'IT'
        bank:
          $ref: '#/components/schemas/MortgageCalcBank'
        rate:
          $ref: '#/components/schemas/AttrMortgageRate'
        payment:
          description: Платеж по ипотеке `TODO `В рублях? В копейках?`.
          type: number
          nullable: true
          minimum: 0
          example: 25565
        amount:
          description: Сумма кредита `TODO В рублях? В копейках?`.
          type: number
          nullable: true
          minimum: 0
          example: 12000000
        period:
          description: Срок кредита в годах.
          type: integer
          nullable: true
          example: 30
          minimum: 1
        initial_payment:
          $ref: '#/components/schemas/AttrMortgageInitialPayment'
        status:
          $ref: '#/components/schemas/MortgageApplicationStatus'
        persons:
          type: array
          items:
            $ref: '#/components/schemas/MortgagePerson'
        reject_reason:
          type: string
          description: Текст причины отказа
          example: "Низкий кредитный рейтинг"
          minLength: 1
          nullable: true
        available:
          type: boolean
          description: Предложение доступно для выбора
        application:
          $ref: '#/components/schemas/MortgageApplication'

    MortgageApplicationStatus:
      description: |
        Статус заявки на ипотеку.
      type: object
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091037
      required:
        - code
        - name
      properties:
        code:
          description: Код статуса заявки.
          type: string
          enum:
            - 'approved'
            - 'awaiting_approval'
            - 'chosen'
            - 'completed'
            - 'new'
            - 'rejected'
        name:
          description: Название статуса, пригодное для показа пользователю.
          type: string

    MortgagePerson:
      type: object
      description: Участник заявки
      required:
        - email
        - id
        - name
        - patronymic
        - phone
        - role
        - surname
      properties:
        id:
          type: integer
          description: Внутренний ID участника
          example: 25
        surname:
          type: string
          description: Фамилия участника
          example: "Федоров"
          minLength: 1
        name:
          type: string
          description: Имя участника
          example: "Иван"
          minLength: 1
        patronymic:
          type: string
          description: Отчество участника
          example: "Петрович"
          nullable: true
        phone:
          type: string
          description: Телефон участника
          example: "+7999888777"
          nullable: true
        email:
          type: string
          description: email участника
          example: "user@domain.com"
          nullable: true
        role:
          type: string
          description: Название роли участника
          example: "Заемщик"
          minLength: 1

    OfficesBanner:
      description: Баннер для страницы офисной недвижимости.
      type: object
      required:
        - active_btn_link
        - active_btn_text
        - active_color
        - active_title
        - ad_label
        - desktop_big_picture
        - desktop_normal_picture
        - discount_amount
        - id
        - mobile_picture
        - preview_picture
        - preview_title
        - project
        - tablet_picture
        - title
        - type
      properties:
        id:
          type: integer
          description: Идентификатор баннера.
          example: 55
        title:
          type: string
          description: Заголовок баннера.
          example: "Метрополия"
        type:
          type: string
          description: Тип баннера (проект, скидка).
          enum:
            - 'discount'
            - 'project'
        discount_amount:
          description: Сумма скидки (для типа баннера = "Скидка").
          type: string
          nullable: true
          example: "-5%"
        preview_title:
          type: string
          description: Заголовок баннера для режима превью.
          example: "Метрополия"
        preview_picture:
          type: string
          description: Изображение для баннера для режима превью.
          example: "/upload/iblock/686/fk8o5qawseokv1frdcpbma45f0jkpcvp.png"
        desktop_normal_picture:
          type: string
          nullable: true
          description: Изображение баннера для desktop viewport.
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        project:
          $ref: '#/components/schemas/OfficesBannerProject'
        active_color:
          type: string
          description: Цвет фона баннера для активного режима.
          example: "#6B6A72"
        active_title:
          type: string
          description: Заголовок баннера для активного режима.
          example: "Метрополия"
        active_btn_text:
          type: string
          nullable: true
          description: Текст кнопки баннера для активного режима.
          example: "Подробнее о проекте"
        active_btn_link:
          type: string
          nullable: true
          description: Ссылка кнопки баннера для активного режима.
          example: "site.com"
        mobile_picture:
          type: string
          nullable: true
          description: Изображение для мобильного viewport.
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        tablet_picture:
          type: string
          nullable: true
          description: Изображение для планшетного viewport.
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        desktop_big_picture:
          type: string
          nullable: true
          description: Изображение для viewport под большой desktop.
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        ad_label:
          $ref: '#/components/schemas/AttrAdvertisementLabel'

    OfficesBannerListResponse:
      type: object
      description: |
        Список баннеров для разводящей офисной недвижимости.
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OfficesBanner'

    OfficesBannerProject:
      description: Проект для баннера офисной недвижимости.
      nullable: true
      required:
        - metro
        - metro_distance
        - min_meter_price
        - movement_way
      properties:
        metro:
          $ref: '#/components/schemas/Metro'
        metro_distance:
          $ref: '#/components/schemas/AttrMetroDistance'
        min_meter_price:
          description: Минимальная цена ОН за м² в проекте.
          type: number
          nullable: true
          example: 23
        movement_way:
          $ref: '#/components/schemas/MetroMovementWay'

    PersonFreeFormName:
      description: |
        Имя в свободной форме.
      type: string
      minLength: 1
      example: 'Владимир'

    PhoneNumber:
      description: |
        Номер телефона в формате E.164.
      type: string
      pattern: '^\+7[0-9]{10}$'
      example: '+70001234567'

    PrivateBanner:
      description: |
        Баннер для страницы MR Private.
      type: object
      required:
        - active_btn_link
        - active_btn_text
        - active_color
        - active_title
        - ad_label
        - content_type
        - discount_amount
        - id
        - image
        - preview_picture
        - preview_title
        - project
        - title
        - type
        - video
      properties:
        id:
          description: |
            Идентификатор баннера.
          type: integer
          example: 55
        title:
          description: |
            Заголовок баннера.
          type: string
          example: 'Метрополия'
        type:
          description: |
            Тип баннера (проект, скидка).
          type: string
          enum:
            - 'discount'
            - 'project'
        discount_amount:
          description: |
            Сумма скидки, если `type` — `discount`.
          type: string
          nullable: true
          example: '-5 %'
        preview_title:
          description: |
            Заголовок баннера для режима превью.
          type: string
          example: 'Метрополия'
        preview_picture:
          description: |
            Относительный URI изображения баннера для режима превью.
          type: string
          example: '/upload/iblock/686/fk8o5qawseokv1frdcpbma45f0jkpcvp.png'
        project:
          $ref: '#/components/schemas/BannerProject'
        active_color:
          description: |
            Цвет фона баннера в формате #RGB для активного режима.
          type: string
          example: '#6B6A72'
        active_title:
          description: |
            Заголовок баннера для активного режима.
          type: string
          example: 'Метрополия'
        active_btn_text:
          description: |
            Текст кнопки баннера для активного режима.
          type: string
          nullable: true
          example: 'Подробнее о проекте'
        active_btn_link:
          description: |
            URI для кнопки баннера для активного режима.
          type: string
          nullable: true
          example: '/shkoly-i-detskye-sady/'
        ad_label:
          $ref: '#/components/schemas/AttrAdvertisementLabel'
        content_type:
          description: |
            Тип баннера содержимого баннера.
          type: string
          enum:
            - 'image'
            - 'video'
        image:
          description: |
            Картинка баннера. Только если `content_type` — `image`.
          type: object
          nullable: true
          required:
            - desktop_big_picture
            - desktop_normal_picture
            - mobile_picture
            - tablet_picture
          properties:
            desktop_normal_picture:
              description: |
                URI изображения баннера для desktop viewport.
              type: string
              nullable: true
              example: '/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png'
            mobile_picture:
              description: |
                URI изображения баннера для мобильного viewport.
              type: string
              nullable: true
              example: '/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png'
            tablet_picture:
              description: |
                URI изображения баннера для планшетного viewport.
              type: string
              nullable: true
              example: '/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png'
            desktop_big_picture:
              description: |
                URI изображения баннера для viewport под большой desktop.
              type: string
              nullable: true
              example: '/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png'
        video:
          description: |
            Видео для баннера. Только если `content_type` — `video`.
          type: object
          nullable: true
          required:
            - image_preview_desktop
            - image_preview_mobile
            - video_desktop
            - video_mobile
          properties:
            video_desktop:
              description: |
                URI видео (desktop).
              type: string
              minLength: 5
              example: '/upload/iblock/26c/video1_desk.mp4'
            image_preview_desktop:
              description: |
                URI изображения для отображения до запуска видео (desktop).
              type: string
              minLength: 5
              example: '/upload/iblock/26c/desk1.png'
            video_mobile:
              description: |
                URI  видео (mobile).
              type: string
              minLength: 5
              example: '/upload/iblock/26c/video1_mob.mp4'
            image_preview_mobile:
              description: |
                URI изображения для отображения до запуска видео (mobile).
              type: string
              minLength: 5
              example: '/upload/iblock/26c/mob1.png'

    PrivateBannerListResponse:
      description: |
        Список баннеров для разводящей страницы MR Private.
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PrivateBanner'

    ProductsCollectionGoodsList:
      description: Возвращает список ОН внутри конкретной подборки
      required:
        - code
        - count
        - description
        - items
        - limit
        - page
        - page_count
        - title
      properties:
        code:
          type: string
          minLength: 1
          description: Код подборки
          example: "Kvartiri_bez_okon_klass"
        title:
          type: string
          minLength: 1
          description: Заголовок подборки
          example: "Квартиры без окон, класс"
        description:
          type: string
          minLength: 1
          description: Описание подборки
          example: "Посмотрите классные квартиры без окон"
        items:
          type: array
          description: Список ОН
          items:
            $ref: '#/components/schemas/Product'
        count:
          $ref: '#/components/schemas/AttrCount'
        limit:
          $ref: '#/components/schemas/AttrPaginationLimit'
        page:
          $ref: '#/components/schemas/AttrPaginationPage'
        page_count:
          $ref: '#/components/schemas/AttrPaginationPageCount'

    ProductsCollectionList:
      description: Возвращает список всех подборок ОН для главной страницы
      required:
        - count
        - items
        - limit
        - page
        - page_count
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductsCollection'
        count:
          $ref: '#/components/schemas/AttrCount'
        limit:
          $ref: '#/components/schemas/AttrPaginationLimit'
        page:
          $ref: '#/components/schemas/AttrPaginationPage'
        page_count:
          $ref: '#/components/schemas/AttrPaginationPageCount'

    ProductsCollection:
      description: Подборка ОН для главной страницы
      required:
        - background_color
        - background_image
        - code
        - description
        - icon
        - title
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: Код подборки
          example: "Kvartiri_bez_okon_klass"
        title:
          type: string
          minLength: 1
          description: Заголовок подборки
          example: "Квартиры без окон, класс"
        description:
          type: string
          minLength: 1
          description: Описание подборки
          example: "Посмотрите классные квартиры без окон"
        background_image:
          type: string
          minLength: 1
          description: Фоновое изображение
          example: "/upload/iblock/f0a/krkifi3pym5qvtoal3pjmgu59ni8ac47.png"
        background_color:
          type: string
          minLength: 1
          description: Фоновый цвет
          example: "#BEBBC9"
        icon:
          type: string
          minLength: 1
          description: Иконка
          example: "/upload/uf/f23/gmo2t696s6py2xk8ywmsryz6zzrfom2d.png"

    RealtyObjectProjectDetails:
      description: |
        Краткая информация о проекте для ОН.
      type: object
      required:
        - code
        - description
        - id
        - is_private
        - marketing_image
        - name
        - publish_presentation
        - title
      properties:
        code:
          $ref: '#/components/schemas/ProjectCode'
        description:
          description: |
            Описание к проекту.
          type: string
          nullable: true
        id:
          $ref: '#/components/schemas/AttrProjectId'
        is_private:
          $ref: '#/components/schemas/AttrProjectPrivate'
        marketing_image:
          description: |
            Первое маркетинговое изображение.
          type: string
          nullable: true
        name:
          $ref: '#/components/schemas/AttrProjectName'
        publish_presentation:
          $ref: '#/components/schemas/AttrProjectPresentation'
        title:
          description: |
            Заголовок проекта.
          type: string
          nullable: true

    RealtyObjectPurchaseType:
      description: |
        Способ покупки, доступный для объекта недвижмиости.
      type: object
      required:
        - app_link
        - code
        - description
        - discount
        - image
        - name
        - title
        - web_link
      properties:
        app_link:
          description: |
            Экран приложения, соответствующий способу покупки.
          type: string
          nullable: true
          example: 'mortgage'
        code:
          description: |
            Код.
          type: string
          minLength: 1
          example: 'mortgage'
        description:
          description: |
            Описание способа покупки.
          type: string
          nullable: true
          example: |
            Это кредит, который банк выдает на приобретение недвижимости. Условия зависят от банка
            и конкретной ипотечной программы.
        discount:
          $ref: '#/components/schemas/Discount'
        image:
          description: |
            URL (относительно корня сайта) пиктограммы способа покупки.
          type: string
          nullable: true
          example: '/upload/iblock/8d0/sghev3wfnq5gjycw0d1p691ievt7kkfh.png'
        name:
          description: |
            Название.
          type: string
          example: 'Ипотека'
          minLength: 1
        title:
          description: |
            Заголовок способа покупки.
          type: string
          nullable: true
          example: 'Ипотека'
        web_link:
          description: |
            Ссылка на страницу способа покупки на сайте.
          type: string
          nullable: true
          example: '/mortgage'

    RetryAfter:
      description: |
        Время, начиная с которого можно повторить попытку.
      type: string
      format: date-time


    ConstructionProgressProjectsList:
      type: array
      description: Список проектов с ходом строительства
      items:
        $ref: '#/components/schemas/ConstructionProgressProject'


    ConstructionProgressProject:
      type: object
      required:
        - code
        - id
        - image
        - metro
        - metro_distance
        - movement_way
        - name
      properties:
        id:
          type: integer
          description: ID проекта
        name:
          $ref: '#/components/schemas/AttrProjectName'
        code:
          $ref: '#/components/schemas/ProjectCode'
        image:
          type: string
          description: Актуальное изображение стройки проекта или маркетинговое изображение
        metro:
          $ref: '#/components/schemas/Metro'
        metro_distance:
          $ref: '#/components/schemas/AttrMetroDistance'
        movement_way:
          $ref: '#/components/schemas/MetroMovementWay'


    ObjectsOnFloorPlan:
      description: |
        Информация об ОН.
      type: object
      required:
        - area
        - booking_type
        - category
        - code
        - discount
        - floor
        - id
        - monthly_payment
        - number
        - number_on_floor
        - price
        - project
        - purchase_type
        - rooms_number
        - status
      properties:
        code:
          $ref: '#/components/schemas/AttrProductCode'
        id:
          $ref: '#/components/schemas/AttrObjectId'
        discount:
          $ref: '#/components/schemas/Discount'
        price:
          $ref: '#/components/schemas/AttrProductTotalPrice'
        purchase_type:
          type: string
          description: Код основного способа покупки
          example: "mortgage"
          minLength: 1
        monthly_payment:
          $ref: '#/components/schemas/AttrProductMonthlyPayment'
        project:
          $ref: '#/components/schemas/ProductProject'
        category:
          $ref: '#/components/schemas/ProductCategory'
        area:
          $ref: '#/components/schemas/AttrProductArea'
        floor:
          $ref: '#/components/schemas/AttrProductFloor'
        rooms_number:
          $ref: '#/components/schemas/AttrProductRoomsNumber'
        number:
          $ref: '#/components/schemas/AttrProductNumber'
        number_on_floor:
          $ref: '#/components/schemas/AttrProductNumberOnFloor'
        status:
          $ref: '#/components/schemas/ProductStatus'
        booking_type:
          $ref: '#/components/schemas/AttrProductBookingType'

    SaleServiceProjectList:
      # Схема для sale-service. Будет удалена в https://jira.mr-group.ru/browse/MRSUPERAPP-3396
      description: |
        Список проектов.
      type: object
      required:
        - category
        - items
      properties:
        category:
          $ref: '#/components/schemas/AttrCategoryCode'
        items:
          type: array
          items:
            $ref: '#/components/schemas/SaleServiceProjectBrief'

    SaleServiceProjectBrief:
      # Схема для sale-service. Будет удалена в https://jira.mr-group.ru/browse/MRSUPERAPP-3396
      description: |
        Краткие сведения о [проекте](https://wiki.adv.ru/pages/viewpage.action?pageId=307083606).
      type: object
      required:
        - air_3d
        - business_unit
        - code
        - completion_date
        - external
        - id
        - image
        - is_completed
        - is_private
        - key_project
        - latitude
        - logo
        - longitude
        - main_3d
        - max_discount
        - metro
        - metro_distance
        - min_price
        - movement_way
        - name
        - partners
        - price_table
        - project_usp
        - queues
        - title
      properties:
        id:
          $ref: '#/components/schemas/AttrProjectId'
        code:
          $ref: '#/components/schemas/ProjectCode'
        name:
          $ref: '#/components/schemas/AttrProjectName'
        logo:
          $ref: '#/components/schemas/ProjectLogo'
        image:
          $ref: '#/components/schemas/AttrProjectImage'
        min_price:
          $ref: '#/components/schemas/AttrMinPriceNullable'
        max_discount:
          $ref: '#/components/schemas/AttrMaxDiscount'
        is_completed:
          type: boolean
          description: Признак завершения проекта
        completion_date:
          description: Дата завершения проекта
          type: string
          nullable: true
          format: date
          example: "2023-05-22"
        title:
          $ref: '#/components/schemas/AttrProjectTitle'
        key_project:
          type: boolean
          description: Признак ключевого проекта [пока не реализовано]
        external:
          $ref: '#/components/schemas/AttrProjectExternal'
        business_unit:
          $ref: '#/components/schemas/AttrProjectBusinessUnit'
        latitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        longitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        metro:
          $ref: '#/components/schemas/Metro'
        metro_distance:
          $ref: '#/components/schemas/AttrMetroDistance'
        movement_way:
          $ref: '#/components/schemas/MetroMovementWay'
        partners:
          type: array
          items:
            $ref: '#/components/schemas/ProjectPartner'
        project_usp:
          type: array
          items:
            $ref: '#/components/schemas/ProjectUSP'
        price_table:
          $ref: '#/components/schemas/PriceTable'
        main_3d:
          $ref: '#/components/schemas/AttrProjectMain3d'
        air_3d:
          $ref: '#/components/schemas/AttrProjectAir3d'
        queues:
          $ref: '#/components/schemas/AttrQueues'
        is_private:
          $ref: '#/components/schemas/AttrProjectPrivate'

    SaleServiceProject:
      # Схема для sale-service. Будет удалена в https://jira.mr-group.ru/browse/MRSUPERAPP-3396
      description: |
        Полные сведения о [проекте](https://confluence.mr-group.ru/pages/viewpage.action?pageId=73893804).
      type: object
      required:
        - air_3d
        - alternative_plan
        - apartments_count
        - business_unit
        - categories
        - code
        - description
        - documentation
        - external
        - id
        - is_private
        - latitude
        - logo
        - longitude
        - main_3d
        - main_plan
        - marketing_images
        - metro
        - metro_distance
        - min_price
        - mobile_marketing_images
        - movement_way
        - name
        - object_types
        - queues
        - related_project
        - title
        - view_from_above_plan
      properties:
        id:
          $ref: '#/components/schemas/AttrProjectId'
        code:
          $ref: '#/components/schemas/ProjectCode'
        categories:
          type: array
          description: |
            Список Типов ОН, физически существующих в проекте (https://wiki.adv.ru/pages/viewpage.action?pageId=307084461). <br>
            Тип возвращается, если в проекте есть хотя бы 1 ОН такого типа.
          items:
            $ref: '#/components/schemas/ObjectType'
        logo:
          $ref: '#/components/schemas/ProjectLogo'
        name:
          $ref: '#/components/schemas/AttrProjectName'
        title:
          $ref: '#/components/schemas/AttrProjectTitle'
        description:
          type: string
          nullable: true
          description: Описание проекта
          example: "MOD — город городов. Коллекция лучших решений из самых прогрессивных мегаполисов планеты."
        business_unit:
          $ref: '#/components/schemas/AttrProjectBusinessUnit'
        related_project:
          $ref: '#/components/schemas/RelatedProject'
        min_price:
          $ref: '#/components/schemas/AttrMinPriceNullable'
        metro:
          $ref: '#/components/schemas/Metro'
        metro_distance:
          $ref: '#/components/schemas/AttrMetroDistance'
        movement_way:
          $ref: '#/components/schemas/MetroMovementWay'
        marketing_images:
          type: array
          description: Маркетинговые изображения
          items:
            type: string
            example: "/upload/iblock/d0f/y5w6toh1vrvm292v4tcaq26ez777kf7a.jpg"
        mobile_marketing_images:
          type: array
          description: Маркетинговые изображения (Мобильные)
          items:
            type: string
            example: "/upload/iblock/d0f/y5w6toh1vrvm292v4tcaq26ez777kf7a.jpg"
        apartments_count:
          type: integer
          description: Всего квартир
          example: 10
          nullable: true
        queues:
          $ref: '#/components/schemas/AttrQueues'
        object_types:
          type: array
          description: Доступные типы ОН
          items:
            $ref: '#/components/schemas/ObjectTypeOld'
        main_plan:
          $ref: '#/components/schemas/InteractivePlan'
        alternative_plan:
          $ref: '#/components/schemas/InteractivePlan'
        view_from_above_plan:
          $ref: '#/components/schemas/InteractivePlan'
        main_3d:
          $ref: '#/components/schemas/AttrProjectMain3d'
        air_3d:
          $ref: '#/components/schemas/AttrProjectAir3d'
        latitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        longitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        documentation:
          type: string
          nullable: true
          format: html
          description: "Документация к материалам проекта (Свойство 'Описание к материалам')"
        external:
          $ref: '#/components/schemas/AttrProjectExternal'
        is_private:
          $ref: '#/components/schemas/AttrProjectPrivate'

    ProjectCode:
      description: |
        Символьный код проекта.
      type: string
      minLength: 1
      example: 'MOD'

    ProjectLogo:
      description: |
        URL логотипа баннера относительно корня сайта.

        Логотип может быть в формате SVG.
      type: string
      nullable: true
      example: '/upload/iblock/686/fk8o5qawseokv1frdcpbma45f0jkpcvp.svg'

    PrivateList:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PrivateProject'

    PrivateProject:
      type: object
      description: Сниппет проекта MR Private
      required:
        - code
        - id
        - link
        - marketing_image
        - name
        - phone
        - title
        - video
      properties:
        id:
          $ref: '#/components/schemas/AttrProjectId'
        code:
          $ref: '#/components/schemas/ProjectCode'
        name:
          $ref: '#/components/schemas/AttrProjectName'
        title:
          type: string
          description: Заголовок проекта
          minLength: 1
        marketing_image:
          type: string
          description: Первое маркетинговое изображение проекта
          minLength: 1
        phone:
          type: string
          description: Телефон офиса продаж проекта
          minLength: 1
        link:
          type: string
          description: Ссылка на внешний сайт
          example: "https://privateproject.site"
          minLength: 1
          nullable: true
        video:
          type: string
          description: Ссылка на файл видео
          example: "/upload/iblock/26c/video_full.mp4"
          minLength: 1
          nullable: true

    ObjectType:
      type: object
      description: Доступные типы ОН в проекте.
      required:
        - background_color
        - code
        - description
        - image
        - min_discounted_price
        - min_meter_price
        - min_price
        - name
        - object_count
        - show_in
      properties:
        code:
          $ref: '#/components/schemas/AttrCategoryCode'
        name:
          $ref: '#/components/schemas/AttrCategoryName'
        image:
          description: Изображение.
          type: string
          nullable: true
          example: '/upload/iblock/f0a/krkifi3pym5qvtoal3pjmgu59ni8ac47.png'
        background_color:
          description: Фоновый цвет
          nullable: true
          type: string
          example: '#BEBBC9'
        description:
          description: Описание для типа ОН.
          nullable: true
          type: string
          example: 'Прекрасные квартиры MR Group!'
        min_meter_price:
          description: |
            Минимальная цена ОН данного типа за м² в проекте в рублях.
          type: number
          nullable: true
          example: 230000.50
        min_price:
          description: |
            Минимальная базовая цена ОН данного типа в проекте в рублях.
          type: number
          example: 14027818.56
          nullable: true
        min_discounted_price:
          $ref: '#/components/schemas/DiscountedPrice'
        object_count:
          description: |
            Количество ОН данного типа в проекте, доступных в каталоге.
          type: integer
          example: 10
          nullable: true
        show_in:
          type: object
          required:
            - catalog
          description: |
            Условия доступности типов ОН для различных контекстов.
          properties:
            catalog:
              type: boolean
              description: |
                Флаг доступности Типа ОН в каталоге. <br>
                Тип ОН доступен, если в проекте есть хотя бы 1 ОН данного типа, доступный в каталоге. <br>
                Доступность ОН в каталоге определяется в соответствии с документом https://wiki.adv.ru/pages/viewpage.action?pageId=330564917.

    ObjectTypeOld:
      type: object
      description: Доступные типы ОН для карточки проекта. Эта схема устарела, планируется прейти полностью на ObjectType
      required:
        - background_color
        - code
        - description
        - discounted_price
        - image
        - name
        - price
      properties:
        code:
          $ref: '#/components/schemas/AttrCategoryCode'
        name:
          $ref: '#/components/schemas/AttrCategoryName'
        image:
          description: Изображение.
          type: string
          nullable: true
          example: '/upload/iblock/f0a/krkifi3pym5qvtoal3pjmgu59ni8ac47.png'
        background_color:
          description: Фоновый цвет
          nullable: true
          type: string
          example: '#BEBBC9'
        description:
          description: Описание для типа ОН.
          nullable: true
          type: string
          example: 'Прекрасные квартиры MR Group!'
        price:
          $ref: '#/components/schemas/AttrProductTotalPrice'
        discounted_price:
          $ref: '#/components/schemas/DiscountedPrice'

    ProjectUSP:
      type: object
      description: УТП проекта
      required:
        - icon
        - name
      properties:
        icon:
          type: string
          description: Иконка УТП
          example: "/upload/uf/f23/gmo2t696s6py2xk8ywmsryz6zzrfom2d.png"
        name:
          type: string
          description: Название УТП
          example: "2 минуты до реки"

    ProjectPartner:
      type: object
      description: Партнер проекта
      required:
        - logo
        - name
      properties:
        logo:
          type: string
          description: Логотип партнера
          example: "/upload/uf/9ab/3ereodo6u1ystmv6ofco6z0w48yu76yf.png"
        name:
          type: string
          description: Название партнера
          example: "Сбер"

    ProductList:
      type: object
      required:
        - category
        - items
        - limit
        - page
        - page_count
        - sort
      description: Объект списка ОН
      properties:
        category:
          type: string
          description: Примененная категория
          nullable: true
        items:
          type: array
          description: Список ОН
          items:
            $ref: '#/components/schemas/Product'
        limit:
          $ref: '#/components/schemas/AttrPaginationLimit'
        page:
          $ref: '#/components/schemas/AttrPaginationPage'
        page_count:
          $ref: '#/components/schemas/AttrPaginationPageCount'
        sort:
          $ref: '#/components/schemas/Sort'

    Product:
      type: object
      description: |
        Сведения об объекте недвижимости.
      required:
        - apartment_on_floor
        - area
        - booking_type
        - building
        - category
        - code
        - crm_id
        - decoration
        - discount
        - family
        - floor
        - functional_layout
        - id
        - kitchen
        - meter_price
        - monthly_payment
        - name
        - number
        - plan
        - price
        - project
        - purchase_type
        - purchase_types
        - rooms_number
        - status
        - stop_sales
        - subtype
        - technical_layout
      properties:
        apartment_on_floor:
          $ref: '#/components/schemas/AttrProductApartmentOnFloor'
        area:
          $ref: '#/components/schemas/AttrProductArea'
        booking_type:
          $ref: '#/components/schemas/AttrProductBookingType'
        building:
          $ref: '#/components/schemas/Building'
        category:
          $ref: '#/components/schemas/ProductCategory'
        code:
          $ref: '#/components/schemas/AttrProductCode'
        crm_id:
          description: |
            ID ОН в CRM.
          type: string
          minLength: 1
          example: "85718282-f6f6-48e6-bacc-517460b3ad48"
        decoration:
          $ref: '#/components/schemas/ProductDecoration'
        discount:
          $ref: '#/components/schemas/Discount'
        family:
          description: |
            Признак семейного места.
          type: boolean
        floor:
          $ref: '#/components/schemas/AttrProductFloor'
        functional_layout:
          $ref: '#/components/schemas/AttrProductFunctionalLayout'
        id:
          $ref: '#/components/schemas/AttrObjectId'
        kitchen:
          $ref: '#/components/schemas/ProductKitchen'
        meter_price:
          $ref: '#/components/schemas/AttrProductMeterPrice'
        monthly_payment:
          $ref: '#/components/schemas/AttrProductMonthlyPayment'
        name:
          $ref: '#/components/schemas/AttrProductName'
        number:
          $ref: '#/components/schemas/AttrProductNumber'
        plan:
          $ref: '#/components/schemas/ShortInteractivePlan'
        price:
          $ref: '#/components/schemas/AttrProductTotalPrice'
        project:
          $ref: '#/components/schemas/ProductProject'
        purchase_type:
          description: |
            Основной способ покупки.
          type: string
          minLength: 1
          example: 'mortgage'
        purchase_types:
          description: |
            Доступные способы покупки.
          type: array
          items:
            $ref: '#/components/schemas/ProductPurchaseType'
        rooms_number:
          $ref: '#/components/schemas/AttrProductRoomsNumber'
        status:
          $ref: '#/components/schemas/ProductStatus'
        stop_sales:
          $ref: '#/components/schemas/AttrProductStopSales'
        subtype:
          $ref: '#/components/schemas/ProductSubType'
        technical_layout:
          $ref: '#/components/schemas/AttrProductTechnicalLayout'

    ProductDetail:
      type: object
      description: Полная информация по ОН.
      required:
        - apartment_on_floor
        - area
        - article
        - booking_type
        - building
        - category
        - ceiling_height
        - code
        - decoration
        - environment
        - floor
        - functional_layout
        - id
        - kitchen
        - layout_3d
        - meter_price
        - metro
        - metro_distance
        - monthly_payment
        - movement_way
        - name
        - number
        - object_types
        - price
        - project
        - purchase_type
        - purchase_types
        - room_type
        - rooms_number
        - status
        - stop_sales
        - technical_layout
        - ventilation
        - view_from_window
      properties:
        id:
          $ref: '#/components/schemas/AttrObjectId'
        code:
          $ref: '#/components/schemas/AttrProductCode'
        name:
          $ref: '#/components/schemas/AttrProductName'
        price:
          $ref: '#/components/schemas/AttrProductTotalPrice'
        meter_price:
          $ref: '#/components/schemas/AttrProductMeterPrice'
        monthly_payment:
          $ref: '#/components/schemas/AttrProductMonthlyPayment'
        area:
          $ref: '#/components/schemas/AttrProductArea'
        number:
          $ref: '#/components/schemas/AttrProductNumber'
        ceiling_height:
          $ref: '#/components/schemas/AttrProductCellingHeught'
        rooms_number:
          $ref: '#/components/schemas/AttrProductRoomsNumber'
        floor:
          $ref: '#/components/schemas/AttrProductFloor'
        room_type:
          type: string
          description: Тип помещения ОН
          example: "Жилая"
          nullable: true
        functional_layout:
          $ref: '#/components/schemas/AttrProductFunctionalLayout'
        technical_layout:
          $ref: '#/components/schemas/AttrProductTechnicalLayout'
        apartment_on_floor:
          $ref: '#/components/schemas/AttrProductApartmentOnFloor'
        layout_3d:
          $ref: '#/components/schemas/AttrProductLayout3d'
        metro:
          $ref: '#/components/schemas/Metro'
        metro_distance:
          $ref: '#/components/schemas/AttrMetroDistance'
        movement_way:
          $ref: '#/components/schemas/MetroMovementWay'
        building:
          $ref: '#/components/schemas/BuildingDetail'
        status:
          $ref: '#/components/schemas/ProductStatus'
        stop_sales:
          $ref: '#/components/schemas/AttrProductStopSales'
        project:
          $ref: '#/components/schemas/RealtyObjectProjectDetails'
        environment:
          $ref: '#/components/schemas/ProductEnvironment'
        view_from_window:
          $ref: '#/components/schemas/ProductWindowView'
        category:
          $ref: '#/components/schemas/ProductCategory'
        decoration:
          $ref: '#/components/schemas/ProductDecoration'
        purchase_type:
          description: |
            Основной способ покупки.
          type: string
          example: 'mortgage'
        purchase_types:
          description: |
            Доступные способы покупки.
          type: array
          items:
            $ref: '#/components/schemas/RealtyObjectPurchaseType'
        booking_type:
          $ref: '#/components/schemas/AttrProductBookingType'
        object_types:
          type: array
          description: Доступные типы ОН.
          items:
            $ref: '#/components/schemas/ObjectTypeOld'
        kitchen:
          $ref: '#/components/schemas/ProductKitchen'
        article:
          $ref: '#/components/schemas/AttrProductArticle'
        ventilation:
          $ref: '#/components/schemas/AttrProductVentilation'

    RelatedProject:
      type: object
      description: Информация по связанному маркетинговому проекту для наполнения баннера (https://wiki.adv.ru/pages/viewpage.action?pageId=330572567)
      nullable: true
      required:
        - code
        - marketing_images
        - name
      properties:
        code:
          $ref: '#/components/schemas/ProjectCode'
        name:
          $ref: '#/components/schemas/AttrProjectName'
        marketing_images:
          type: array
          description: Маркетинговые изображения
          items:
            type: string
            example: "/upload/iblock/d0f/y5w6toh1vrvm292v4tcaq26ez777kf7a.jpg"

    Building:
      type: object
      description: Информация по корпусу
      nullable: true
      required:
        - code
        - compass_angle
        - deadline
        - floors_number
        - id
        - name
        - readiness
        - scheme
      properties:
        id:
          $ref: '#/components/schemas/AttrBuildingId'
        code:
          $ref: '#/components/schemas/AttrBuildingCode'
        name:
          $ref: '#/components/schemas/AttrBuildingName'
        floors_number:
          type: integer
          description: Количество этажей в корпусе
          nullable: true
          example: 24
        deadline:
          $ref: '#/components/schemas/AttrBuildingDeadline'
        readiness:
          type: integer
          description: Готовность в %
          nullable: true
          example: 30
        scheme:
          type: string
          description: Изображение для корпуса
          example: "/upload/iblock/8d0/sghev3wfnq5gjycw0d1p691ievt7kkfh.png"
          nullable: true
        compass_angle:
          $ref: '#/components/schemas/AttrCompassAngle'

    BuildingDetail:
      allOf:
        - $ref: '#/components/schemas/Building'
        - type: object
          properties:
            shadow_map:
              type: object
              properties:
                sunrise_angle:
                  type: integer
                  minimum: 0
                  maximum: 359
                  example: 30
                  description: Угол восхода солнца
                  nullable: true
                sunset_angle:
                  type: integer
                  minimum: 0
                  maximum: 359
                  example: 30
                  description: Угол восхода солнца
                  nullable: true
                direction:
                  type: string
                  enum:
                  - 'clockwise'
                  - 'counterclockwise'
                  nullable: true
                  description: Направление движения солнца. По часовой/Против часовой стрелки

    ProductStatus:
      type: object
      description: Статус ОН
      required:
        - code
        - name
      properties:
        code:
          type: string
          description: Код статуса
          enum:
            - 'booked'
            - 'free'
            - 'purchased'
        name:
          type: string
          description: Название статуса
          example: "Доступен"
          minLength: 1

    ProductProject:
      type: object
      description: Краткая информация о проекте для ОН
      required:
        - code
        - description
        - id
        - is_private
        - marketing_image
        - name
        - title
      properties:
        id:
          $ref: '#/components/schemas/AttrProjectId'
        code:
          $ref: '#/components/schemas/ProjectCode'
        name:
          $ref: '#/components/schemas/AttrProjectName'
        marketing_image:
          type: string
          nullable: true
          description: Первое маркетинговое изображение
        title:
          type: string
          nullable: true
          description: Заголовок проекта
        description:
          type: string
          nullable: true
          description: Описание к проекту
        is_private:
          $ref: '#/components/schemas/AttrProjectPrivate'

    ProductEnvironment:
      type: object
      required:
        - left_side
        - lower_side
        - right_side
        - upper_side
      description: Ориентиры вокруг квартиры для плана ОН
      nullable: true
      properties:
        upper_side:
          type: string
          description: Ориентир сверху
          example: "Парк"
          nullable: true
          minLength: 1
        right_side:
          type: string
          description: Ориентир справа
          example: "Лес"
          nullable: true
          minLength: 1
        lower_side:
          type: string
          description: Ориентир снизу
          example: "Шоссе"
          nullable: true
          minLength: 1
        left_side:
          type: string
          description: Ориентир слева
          example: "Метро"
          nullable: true
          minLength: 1

    ProductWindowView:
      type: object
      description: Вид из окна
      nullable: true
      required:
        - angle
        - back_segment
        - front_segment
        - image
        - left_segment
        - right_segment
        - size
        - x
        - y
      properties:
        image:
          type: string
          description: Изображение для вида из окна
          example: "/upload/iblock/a20/4kqhk9l1d12fh4bfss4tjb5ldv24ox64.gif"
        x:
          $ref: '#/components/schemas/AttrPointCoordinate'
        y:
          $ref: '#/components/schemas/AttrPointCoordinate'
        angle:
          $ref: '#/components/schemas/AttrCompassAngle'
        size:
          type: string
          description: Размер поинта
          enum:
            - 'large'
            - 'medium'
            - 'small'
        front_segment:
          type: boolean
          description: Флаг активности верхнего сегмента SVG
        left_segment:
          type: boolean
          description: Флаг активности левого сегмента SVG
        right_segment:
          type: boolean
          description: Флаг активности правого сегмента SVG
        back_segment:
          type: boolean
          description: Флаг активности нижнего сегмента SVG

    ProductCategory:
      type: object
      description: Категория ОН (тип ОН)
      required:
        - code
        - id
        - name
      properties:
        id:
          type: integer
          description: Идентификатор
          example: 5
        code:
          $ref: '#/components/schemas/AttrCategoryCode'
        name:
          $ref: '#/components/schemas/AttrCategoryName'

    ProductDecoration:
      type: object
      description: Отделка ОН
      required:
        - code
        - name
      nullable: true
      properties:
        code:
          description: Код отделки
          type: string
          example: "ready"
          minLength: 1
        name:
          description: Наименование отделки
          type: string
          example: "MR Ready"
          minLength: 1

    ProductPurchaseType:
      type: object
      description: Способы покупки, доступные для продукта
      required:
        - code
        - discount
        - name
      properties:
        code:
          type: string
          description: Код
          example: "mortgage"
          minLength: 1
        name:
          type: string
          description: Название
          example: "Ипотека"
          minLength: 1
        discount:
          $ref: '#/components/schemas/Discount'

    ProductBookingRequest:
      description: |
        Запрос бесплатного бронирования.
      type: object
      required:
        - purchase_type
      properties:
        purchase_type:
          $ref: '#/components/schemas/PurchaseTypeCode'
        phone:
          allOf:
            - $ref: '#/components/schemas/PhoneNumber'
            - description: |
                Номер телефона (для неаутентифицированного пользователя).
        name:
          description: /
            Имя (для неаутентифицированного пользователя).
          type: string
          example: 'Иван'
        sms_code:
          description: |
            Код, введенный в форму ввода кода неаутентифицированным пользователем.
          type: integer
          example: 1234

    ProductBookingResponse:
      description: |
        Результат запроса бесплатного бронирования.
        Возможные коды результата работы метода:

        - `success` — успешно забронировано;
        - `request_received` — запрос принят в обработку.
      type: object
      required:
        - code
        - detail
      properties:
        id:
          description: |
            Идентификатор бронирования (передается, если бронирование было создано)
          type: integer
          example: 1234
        code:
          description: |
            Код результата работы метода.
          type: string
          enum:
            - 'request_received'
            - 'success'
        detail:
          description: |
            Текстовый комментарий к результату.
          type: string
          example: 'Успешно забронировано.'

    PurchaseTypeCode:
      description: |
        Код способа покупки.

        - `cash` — 100 % оплата
        - `mortgage` — Ипотека
        - `installments` — Рассрочка
      type: string
      enum:
        - 'cash'
        - 'installments'
        - 'mortgage'
      minLength: 1

    RequestSource:
      description: |
        Сведения об источнике запроса.
      type: object
      required:
        - platform
      properties:
        platform:
          description: |
            Платформа-источник.

            - `app` — мобильное приложение
            - `web` — сайт
          type: string
          enum:
            - 'app'
            - 'web'
        context:
          description: |
            Контекст-источник — экран, страница, форма и т. п.
          type: string
          example: 'mortgage_application'

    SaleServiceSearchResults:
      description: |
        Список результатов поиска объектов.
      type: object
      required:
        - count
        - items
      properties:
        items:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SaleServiceProjectBrief'
        count:
          $ref: '#/components/schemas/AttrCount'

    DecorationList:
      type: object
      description: Список отделок
      required:
        - count
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DecorationType'
        count:
          $ref: '#/components/schemas/AttrCount'

    DecorationType:
      type: object
      description: Тип отделки
      required:
        - id
        - name
        - options
      properties:
        id:
          type: integer
          description: Идентификатор отделки
        name:
          type: string
          description: Название типа отделки
          example: "MR Ready"
          minLength: 1
        description:
          type: string
          nullable: true
          description: Опциональное общее описание типа отделки
        options:
          type: array
          items:
            $ref: '#/components/schemas/DecorationOption'

    DecorationOption:
      type: object
      description: Вариант отделки
      required:
        - 3d
        - booklet
        - description
        - id
        - image
        - image_pins
        - name
      properties:
        id:
          type: integer
          description: Идентификатор отделки
        name:
          type: string
          description: Название варианта отделки
          example: "Harmony Soft"
          minLength: 1
        description:
          type: string
          nullable: true
          description: Опциональное описание варианта отделки
        image:
          $ref: '#/components/schemas/AttrImageLink'
        booklet:
          type: string
          nullable: true
          description: Ссылка на буклет по отделке
          example: '/decoration/mr_ready_symphony.pdf'
        3d:
          type: string
          nullable: true
          description: Ссылка на 3D-тур по отделке
          example: 'https://example.com/3d_plan'
        image_pins:
          type: array
          items:
            $ref: '#/components/schemas/DecorationOptionImagePin'

    DecorationOptionImagePin:
      type: object
      description: Вариант отделки
      required:
        - label
        - x
        - y
      properties:
        x:
          $ref: '#/components/schemas/AttrPointCoordinate'
        y:
          $ref: '#/components/schemas/AttrPointCoordinate'
        label:
          type: string
          description: Текстовое описание для пина
          example: "Качественная входная дверь"
          minLength: 1

    PrivateProjectBannerListResponse:
      type: object
      description: Список баннеров для карточки проекта MR Private
      required:
        - count
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PrivateProjectBanner'
        count:
          $ref: '#/components/schemas/AttrCount'

    PrivateProjectBanner:
      type: object
      description: Баннер проекта MR Private
      required:
        - id
        - image
        - name
        - type
        - video
      properties:
        id:
          type: integer
          description: Идентификатор баннера
          example: 55
        name:
          type: string
          description: Название баннера (человекочитаемое название для понимания какой баннер передан)
          minLength: 1
        type:
          type: string
          description: Тип баннера
          enum:
            - 'image'
            - 'video'
        image:
          type: object
          description: Объект с параметрами изображения
          nullable: true
          required:
            - image_desktop
            - image_desktop_big
            - image_mobile
            - image_tablet
          properties:
            image_desktop_big:
              type: string
              description: Ссылка на изображение (desktop большой)
              example: "/upload/iblock/26c/ft7gtydoi5.png"
              minLength: 1
              nullable: true
            image_desktop:
              type: string
              description: Ссылка на изображение (desktop)
              example: "/upload/iblock/26c/ft7gtydoi5.png"
              minLength: 1
            image_tablet:
              type: string
              description: Ссылка на изображение (планшет)
              example: "/upload/iblock/26c/ft7gtydoi5.png"
              minLength: 1
              nullable: true
            image_mobile:
              type: string
              description: Ссылка на изображение (mobile)
              example: "/upload/iblock/26c/ft7gtydoi5.png"
              minLength: 1
        video:
          type: object
          description: Объект с параметрами видео
          nullable: true
          required:
            - image_preview_desktop
            - image_preview_mobile
            - video_desktop
            - video_mobile
          properties:
            video_desktop:
              type: string
              description: Ссылка на видео (desktop)
              example: "/upload/iblock/26c/video1_desk.mp4"
              minLength: 1
            image_preview_desktop:
              type: string
              description: Ссылка на изображение для видео (desktop)
              example: "/upload/iblock/26c/desk1.png"
              minLength: 1
            video_mobile:
              type: string
              description: Ссылка на видео (mobile)
              example: "/upload/iblock/26c/video1_mob.mp4"
              minLength: 1
            image_preview_mobile:
              type: string
              description: Ссылка на изображение для видео (mobile)
              example: "/upload/iblock/26c/mob1.png"
              minLength: 1

    SiteMenuPagesList:
      type: object
      description: Объект со ссылками
      required:
        - id
      properties:
        id:
          type: integer
          description: Идентификатор ссылки
          example: 55
        href:
          type: string
          description: Значение ссылки
          example: "site.com"
        name:
          type: string
          description: Текст для ссылки для отображения в интерфейсе
          example: "Купить онлайн"
        depthLevel:
          type: integer
          description: Уровень ссылки
          example: 1
        sort:
          type: integer
          description: Сортировки
          example: 100
        columnNumber:
          type: integer
          description: Номер колонки (актуально для slug = sitemap, значения от 1 до 4)
          example: 1
        slug:
          type: string
          description: Тип меню
          example: "desktop_menu"
        children:
          type: array
          description: Массив дочерних объектов (с аналогичной атрибутикой)
          items:
            $ref: '#/components/schemas/SiteMenuPagesList'


    SiteConfig:
      type: object
      description: Объект с параметрами конфигурации
      properties:
        phone_support:
          type: string
          description: Телефон центра клиентской поддержки
          example: "+7 (495) 021-19-15"
        email_support:
          type: string
          description: Email центра клиентской поддержки
          example: "otvet@mr-group.ru"
        address:
          type: string
          description: Адрес офиса MR
          example: "123112, Москва, 1-й Красногвардейский проезд, д. 22, стр. 1 (Бизнес-центр Neva Towers, башня Т1)"
        reg_text:
          type: string
          description: Нормативный текст
          example: "Любая информация, представленная на данном сайте, носит исключительно информационный характер и ни при каких условиях не является публичной офертой, определяемой положениями статьи 437 ГК РФ."
        footer_copyright:
          type: string
          description: Копирайт
          example: "© MR Group 2023"

    SiteCompanyDetails:
      type: object
      description: Объект с информацией для блока "О компании" главной страницы сайта
      properties:
        block_main:
          $ref: '#/components/schemas/SiteCompanyDetailsMainBlock'
        block1:
          $ref: '#/components/schemas/SiteCompanyDetailsTextBlock'
        block2:
          $ref: '#/components/schemas/SiteCompanyDetailsTextBlock'
        block3:
          $ref: '#/components/schemas/SiteCompanyDetailsTextBlock'
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'

    SiteCompanyDetailsMainBlock:
      type: object
      description: Основная информация о компании для главной страницы
      properties:
        title:
          type: string
          description: Заголовок
          example: "MR Group — ваш надежный партнер в мире недвижимости"
        text:
          type: string
          description: Текст (с поддержкой HTML-форматирования)
          example: "<p>\r\n              Мы работаем в Москве и Московской области — на хорошо известных нам территориях, в экономически, социально и экологически\r\n              благополучных местах. Уважение к людям лежит в основе всех решений команды MR Group.\r\n            </p>"
        button_link:
          type: string
          description: Ссылка для кнопки
          example: "#more"
        button_text:
          type: string
          description: Текст для кнопки
          example: "О компании"

    SiteCompanyDetailsTextBlock:
      type: object
      description: Специальный текст для отображения блока о компании
      properties:
        accent_text:
          type: string
          description: Акцентный текст
          example: "44"
        additional_text:
          type: string
          description: Дополнительный текст
          example: "Объекта в портфолио компании"

    SiteTemplateDetails:
      type: object
      description: Информация для header и footer сайта
      properties:
        app_links:
          type: array
          items:
            $ref: '#/components/schemas/LinkWithIcon'
        socnet_links:
          type: array
          items:
            $ref: '#/components/schemas/LinkWithIcon'
        reg_links:
          type: array
          items:
            $ref: '#/components/schemas/LinkWithIcon'
        footer_links:
          type: array
          items:
            $ref: '#/components/schemas/LinkWithIcon'
        advert:
          $ref: '#/components/schemas/SiteTemplateMenuAdvert'

    SiteTemplateMenuAdvert:
      type: object
      description: Информация для рекламного баннера в меню сайта
      properties:
        title:
          type: string
          description: Текстовое описание ссылки для интерфейса
          example: "Рассрочка 0%"
        link:
          type: string
          description: Ссылка для перехода по клику на баннер
          example: "https://www.site.com/url"
        description:
          type: string
          description: Описание предложения
          example: "Покупайте квартиры без переплат<br/> в ряде наших ЖК"
        accent_text:
          type: string
          description: Акцентный текст
          example: "0%"

    LinkWithIcon:
      type: object
      description: Ссылка с опциональной иконкой
      required:
        - button
        - icon
        - link
        - name
      properties:
        name:
          type: string
          description: Текстовое описание ссылки для интерфейса
          example: "Личный кабинет"
          minLength: 1
          nullable: true
        link:
          type: string
          description: Сама ссылка
          example: "site.com/"
          minLength: 1
        icon:
          $ref: '#/components/schemas/Image'
        button:
          type: string
          description: Ссылка на изображение-кнопку
          minLength: 1
          nullable: true

    ContentPurchase:
      required:
        - steps
      description: Информация для отображения контентной страницы по способу покупки
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ContentPurchaseSteps'
        faq_linked_category:
          type: array
          description: Связанные категории FAQ
          items:
            type: string

    ContentPurchaseSteps:
      required:
        - description
        - image
        - title
      description: Список шагов для описания процесса покупки
      type: object
      properties:
        image:
          $ref: '#/components/schemas/Image'
        step:
          type: string
          description: Номер шага процесса покупки
        title:
          type: string
          description: Заголовок шага процесса покупки
        description:
          type: string
          description: Описание шага процесса покупки (с поддержкой HTML-форматирования)
        button:
          $ref: '#/components/schemas/Button'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ContentPurchaseStepTags'

    ContentPurchaseStepTags:
      required:
        - action_type
        - description
        - title
      description: Список тегов для шага из описания процесса покупки
      type: object
      properties:
        title:
          type: string
          description: Название тега
        action_type:
          type: string
          description: Тип действия по тегу
          example: "tooltip"
        description:
          type: string
          description: Описание по тегу (с поддержкой HTML-форматирования)

    ContentAgreement:
      required:
        - name
      description: Информация для отображения страницы политики обработки ПД
      type: object
      properties:
        name:
          type: string
          description: Название документа
        title:
          type: string
          description: Полное название документа для заголовков
        note:
          type: string
          description: Краткое описание - текст с поддержкой HTML-форматирования
        description:
          type: string
          description: Текст документа - текст с поддержкой HTML-форматирования

    ContentSitemap:
      required:
        - sections
      description: Информация для отображения карты сайта
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/ContentSitemapSection'

    ContentSitemapSection:
      description: Раздел карты сайта
      required:
        - links
        - name
      type: object
      properties:
        name:
          type: string
          description: Название раздела карты сайта
          example: "Информация о компании"
        links:
          type: array
          items:
            $ref: '#/components/schemas/ContentSitemapSectionLink'

    ContentSitemapSectionLink:
      description: Ссылки для карты сайта
      required:
        - link
        - text
      type: object
      properties:
        text:
          type: string
          description: Описание ссылки
          example: "О компании"
        link:
          type: string
          description: Ссылка
          example: "https://www.mr-group.ru/company/about/"

    ContentStepsList:
      description: Контакты компании
      required:
        - steps
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ContentStep'

    ContentStep:
      description: Контакты офисов по проектам
      type: object
      properties:
        number:
          type: string
          description: Номер шага
          example: "1"
        title:
          type: string
          description: Название шага
          example: "Оценка вашей квартиры"
        description:
          type: string
          description: Описание шага
          example: "Оценка диапазона стоимости вашей квартиры зачёту за 1 минуту"

    ContentBannersList:
      description: массив баннеров для переданного кода раздела
      required:
        - items
        - main_title
      type: object
      properties:
        main_title:
          type: string
          description: Название всего блока
          example: "Социальная ответственность"
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentBanner'

    ContentBanner:
      description: Контент для одного баннера в блоке
      type: object
      properties:
        title:
          $ref: '#/components/schemas/ContentTitle'
        description:
          type: string
          description: Название всего блока
          example: "Социальная ответственность"
          nullable: true
        font_color:
          type: string
          description: Цвет шрифта на всем баннере
          example: "#FFFFFF"
          nullable: true
        background_color:
          type: string
          description: Цвет фона
          example: "#000000"
          nullable: true
        image:
          type: string
          description: Фоновое изображение
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
          nullable: true
        icon:
          type: string
          description: Пиктограмма для баннера
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
          nullable: true

    ContentTitle:
      description: Данные для заголовка
      type: object
      properties:
        text:
          type: string
          description: Текст заголовка
          example: "Инфраструктура для маленьких детей"
          nullable: true
        font_size:
          type: integer
          description: Название всего блока
          example: 32
          nullable: true



    ContentFactsList:
      description: массив Ключевых фактов для страницы
      required:
        - facts
      type: object
      properties:
        facts:
          type: array
          items:
            $ref: '#/components/schemas/ContentFact'

    ContentFact:
      description: объект сущности Ключевые факты
      required:
        - title
      type: object
      properties:
        title:
          type: string
          description: Заголовок
          example: "16 000"
          minLength: 1
        description:
          type: string
          description: Описание
          example: "Семей выбрали дома MR Group"

    ContentHistoryList:
      description: Массив элементов для блока История
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentHistory'

    ContentHistory:
      description: Объект сущности История
      required:
        - year
      type: object
      properties:
        year:
          type: integer
          description: Год
          example: 2021
        title:
          type: string
          description: Заголовок
          example: "MR Group получила независимую оценку управления рейтингованияна базе Мосгосэкспертизы."
          minLength: 1
        description:
          type: string
          description: Описание событий за год
          example: "MR Group получила независимую оценку управления рейтингования на базе Мосгосэкспертизы."
          minLength: 1
        image:
          type: string
          description: Изображение для элемента
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
          minLength: 1


    ContentAwardsList:
      description: Массив годов
      required:
        - items
      type: object
      properties:
        awards_qty:
          type: integer
          description: количество наград
          example: 21
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentAwardsHistoryList'

    ContentAwardsHistoryList:
      description: Год получения наград
      required:
        - awards
        - year
      type: object
      properties:
        year:
          type: integer
          description: Год получения наград
          example: 2021
        awards:
          type: array
          items:
            $ref: '#/components/schemas/ContentAward'


    ContentAward:
      description: Объект сущности Награды, относящийся к году
      required:
        - title
      type: object
      properties:
        title:
          type: string
          description: Заголовок
          example: "ЖК MOD - «Лучший строящийся жилой комплекс премиум-класса»"
        description:
          type: string
          description: Описание - название награды
          example: "Urban Awards 2021 «Девелопер года»"


    ContentPartnersSectionsList:
      description: Массив разделов партнеров
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentPartnersList'

    ContentPartnersList:
      description: Данные раздела
      required:
        - name
        - partners
      type: object
      properties:
        name:
          type: string
          description: Название раздела
          example: "Архитектура"
        partners:
          type: array
          description: Массив партнеров
          items:
            $ref: '#/components/schemas/ContentPartner'

    ContentPartner:
      description: Объект сущности Партнер, относящийся к разделу
      type: object
      properties:
        image:
          type: string
          description: Изображение для элемента
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
        web_link:
          type: string
          nullable: true
          description: Ссылка на сайт партнера
          example: "https://digitaldeveloper.ru"


    ContentTeamMembersList:
      description: Массив участников команды
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentTeamMember'

    ContentTeamMember:
      description: объект сущности Участник команды
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: Имя
          example: "Иван"
        surname:
          type: string
          nullable: true
          description: Фамилия
          example: "Иванов"
        job_title:
          type: string
          nullable: true
          description: Должность
          example: "Руководитель направления"
        image:
          type: string
          nullable: true
          description: Фото участника
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"

    ContentMediaArticlesList:
      description: Массив статей с упоминанием в СМИ
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentMediaArticle'
        count:
          $ref: '#/components/schemas/AttrCount'
        page:
          $ref: '#/components/schemas/AttrPaginationPage'
        page_count:
          $ref: '#/components/schemas/AttrPaginationPageCount'

    ContentMediaArticle:
      description: Данные объекта сущности Статья СМИ
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: Заголовок
          example: "Как машинное обучение помогает индексировать цены на недвижимость"
        descriptions:
          type: string
          nullable: true
          description: Описание
          example: "На формирование стоимости квартиры влияет множество факторов: от расположения и инфраструктуры района до макроэкономических показателей. Девелопер MR Group внедрил аналитическую систему динамического ценообразования от интегратора «Иннодата», чтобы в моменте индексации учитывать максимальное количество параметров. Рассказываем, как это работает."
        date:
          $ref: '#/components/schemas/AttrDatetime'
        logo:
          type: string
          nullable: true
          description: Логотип
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
        web_link:
          type: string
          nullable: true
          description: Ссылка
          example: "https://digitaldeveloper.ru"

    ContentOfficesCompanyList:
      description: Контакты компании
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentOfficesCompany'

    ContentOfficesCompany:
      description: Информация об офисах компании MR
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Наименование типа офиса
          example: "Центральный офис продаж"
          minLength: 1
        address:
          type: string
          description: Адрес офиса
          example: "Москва, Волгоградский проспект, д. 32/3, корпус 4"
          minLength: 1
          nullable: true
        latitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        longitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        schedule:
          type: string
          description: Время работы офиса
          example: "Пн. — Вс. с 09:00 до 21:00"
          minLength: 1
          nullable: true
        phone:
          type: string
          description: Телефон офиса
          example: "+7 (495) 514-15-14"
          minLength: 1
          nullable: true
        email:
          type: string
          description: Email офиса
          example: "mr@mr-group.ru"
          minLength: 1
          nullable: true

    ContentOfficesProjectsList:
      description: Контакты офисов по проектам
      required:
        - projects
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ContentOfficesProject'

    ContentOfficesProject:
      description: Информация о проекте для офисов
      required:
        - code
        - id
        - image
        - offices
      type: object
      properties:
        id:
          type: integer
          description: ID Проекта
          example: 9252
        code:
          $ref: '#/components/schemas/ProjectCode'
        name:
          $ref: '#/components/schemas/AttrProjectName'
        image:
          $ref: '#/components/schemas/AttrProjectImage'
        latitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        longitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        address:
          type: string
          description: Адрес проекта
          example: "1-й Сетуньский проезд, вл. 6-10"
          minLength: 1
          nullable: true
        offices:
          type: array
          items:
            $ref: '#/components/schemas/ContentOfficesProjectContact'

    ContentOfficesProjectContact:
      description: Контакт офиса по проекту
      nullable: true
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Наименование типа офиса
          example: "Отдел продаж"
          minLength: 1
        address:
          type: string
          description: Адрес офиса
          example: "Москва, Волгоградский проспект, д. 32/3, корпус 4"
          minLength: 1
          nullable: true
        schedule:
          type: string
          description: Время работы офиса
          example: "Пн. — Вс. с 09:00 до 21:00"
          minLength: 1
          nullable: true
        phone:
          type: string
          description: Телефон офиса
          example: "+7 (495) 514-15-14"
          minLength: 1
          nullable: true
        email:
          type: string
          description: Email офиса
          example: "mr@mr-group.ru"
          minLength: 1
          nullable: true
        latitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        longitude:
          $ref: '#/components/schemas/AttrMapCoordinate'

    FaqCategoryList:
      required:
        - categories
      description: Список базовой информации для FAQ
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/FaqCategory'

    FaqCategory:
      description: Категория FAQ
      required:
        - code
        - name
      type: object
      properties:
        name:
          type: string
          description: Название категории для отображения в UI
        code:
          type: string
          description: Системное имя категории
        image:
          type: string
          description: Изображение для категории
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/FaqSubcategory'

    FaqSubcategory:
      description: Подкатегории FAQ
      required:
        - code
        - name
      type: object
      properties:
        name:
          type: string
          description: Название подкатегории для отображения в UI
        code:
          type: string
          description: Системное имя подкатегории
        image:
          type: string
          description: Пиктограмма категории
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"

    FaqQuestionsList:
      description: Список вопросов по FAQ
      properties:
        name:
          type: string
          description: Наименование раздела
        questions:
          type: array
          items:
            $ref: '#/components/schemas/FaqQuestion'
        count:
          $ref: '#/components/schemas/AttrCount'

    FaqQuestion:
      description: Вопрос по FAQ
      required:
        - answer
        - id
        - question
      type: object
      properties:
        id:
          type: number
          description: Идентификатор вопроса
        question:
          type: string
          description: Текст вопроса в формате HTML (сложного форматирования тут не предполагается, тем не менее тут HTML)
          minLength: 1
        answer:
          type: string
          description: Текст ответа (с поддержкой HTML-форматирования)
          minLength: 1

    FaqSearchResultList:
      description: Результат поисковых запросов по FAQ
      required:
        - count
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FaqSearchResult'
        count:
          $ref: '#/components/schemas/AttrCount'

    FaqSearchResult:
      description: Результат поискового запроса по FAQ
      required:
        - category_code
        - question
      type: object
      properties:
        question_id:
          type: string
          description: Идентификатор найденного вопроса
        question:
          type: string
          description: Текст найденного вопроса в HTML (сложного форматирования тут не предполагается, тем не менее тут HTML)
          minLength: 1
        answer:
          type: string
          description: Текст ответа (с поддержкой HTML-форматирования)
        category_code:
          type: string
          description: Системное имя категории вопроса, сооответствующего подсказке
          minLength: 1
        category_name:
          type: string
          description: Наименование категории вопроса, сооответствующего подсказке
        subcategory_code:
          type: string
          description: Системное имя категории вопроса, сооответствующего подсказке
        subcategory_name:
          type: string
          description: Наименование категории вопроса, сооответствующего подсказке

    ContactsSupportList:
      required:
        - items
      description: Список контактов
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Contact'

    Contact:
      required:
        - name
        - type
        - value
      type: object
      properties:
        type:
          type: string
          description: Код типа контакта
          enum:
            - 'msg_t'
            - 'msg_viber'
            - 'msg_wa'
        name:
          type: string
          description: Имя типа контакта
          example: "WhatsApp"
          minLength: 1
        value:
          type: string
          description: Значение контакта
          example: "https://t.me/MRGroupChatBot"
          minLength: 1
        icon:
          type: string
          description: Ссылка на пиктограмму
          minLength: 1

    ServicesList:
      required:
        - count
        - items
      description: Список контактов
      type: object
      properties:
        count:
          $ref: '#/components/schemas/AttrCount'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Service'

    Service:
      required:
        - background_color
        - background_image
        - description
        - gradient
        - header
        - icon
        - id
        - screen_mp
        - url
        - white_text
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор карточки-сервиса
          example: 9318
        header:
          type: string
          description: Заголовок карточки-сервиса
          example: "Умный дом"
          minLength: 1
        description:
          type: string
          description: Описание карточки-сервиса
          example: "Система управления всей электроникой в доме"
          minLength: 1
          nullable: true
        white_text:
          type: boolean
          description: Флаг отображения светлого текста на стороне frontend
        gradient:
          type: boolean
          description: Флаг использования градиентной подложки для шрифта
        url:
          type: string
          format: url
          description: URL для перехода по клику на карточку-сервис
          minLength: 1
          nullable: true
        screen_mp:
          type: string
          description: Имя экрана в МП для перехода по тапу на карточку-сервис
          minLength: 1
          nullable: true
        background_image:
          type: string
          description: Адрес для фонового изображения
          minLength: 1
          nullable: true
        background_color:
          type: string
          description: Цвет фоновой заливки
          minLength: 1
          nullable: true
        icon:
          type: string
          description: Адрес для пиктограммы для отображения на карточке-сервисе
          minLength: 1
          nullable: true


    NewsCollection:
      description: |
        Список новостей.
      required:
        - count
        - items
        - page
        - page_count
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/News'
        count:
          $ref: '#/components/schemas/AttrCount'
        page:
          $ref: '#/components/schemas/AttrPaginationPage'
        page_count:
          $ref: '#/components/schemas/AttrPaginationPageCount'

    News:
      description: Краткая информация по новости
      required:
        - code
        - date
        - image
        - project
        - teaser
        - title
      type: object
      properties:
        date:
          $ref: '#/components/schemas/AttrDate'
        code:
          type: string
          description: Символьный код
          minLength: 1
        image:
          type: string
          description: Изображение для сниппета (ссылка)
        title:
          type: string
          description: Заголовок новости
          minLength: 1
        teaser:
          type: string
          description: Тизер новости
        project:
          type: array
          description: Связанные проекты
          items:
            type: object
            description: Объект связанного проекта
            required:
              - code
              - id
              - name
            properties:
              id:
                $ref: '#/components/schemas/AttrProjectId'
              code:
                $ref: '#/components/schemas/ProjectCode'
              name:
                $ref: '#/components/schemas/AttrProjectName'

    NewsContent:
      description: |
        Представление новости.
      required:
        - ad_label
        - code
        - date
        - image
        - project
        - teaser
        - text
        - title
      type: object
      properties:
        date:
          $ref: '#/components/schemas/AttrDate'
        code:
          description: |
            Символьный код.
          type: string
          minLength: 1
        image:
          description: |
            URL детального изображения.
          type: string
          nullable: true
        title:
          description: |
            Заголовок новости.
          type: string
          minLength: 1
        teaser:
          description: |
            Тизер новости.
          type: string
        text:
          description: |
            Текст новости (с разметкой HTML).
          type: string
        project:
          description: |
            Связанные проекты.
          type: array
          items:
            description: |
              Сведения о проекте.
            type: object
            required:
              - code
              - id
              - name
            properties:
              id:
                $ref: '#/components/schemas/AttrProjectId'
              code:
                $ref: '#/components/schemas/ProjectCode'
              name:
                $ref: '#/components/schemas/AttrProjectName'
        ad_label:
          $ref: '#/components/schemas/AttrAdvertisementLabel'

    MortgageCalcBanksList:
      description: Список банков для ипотечного калькулятора
      required:
        - count
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MortgageCalcBank'
        count:
          $ref: '#/components/schemas/AttrCount'

    MortgageCalcBank:
      description: Банк для ипотечного калькулятора
      required:
        - code
        - logo
        - name
      type: object
      properties:
        logo:
          type: string
          description: Ссылка на логотип банка
          example: '/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.svg'
        name:
          type: string
          description: Название банка
        code:
          type: string
          description: Код банка

    MortgageCalcCategoryList:
      description: Список подтипов ОН для ипотечного калькулятора
      required:
        - count
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MortgageCalcCategory'
        count:
          $ref: '#/components/schemas/AttrCount'

    MortgageCalcCategory:
      description: Подтип ОН для ипотечного калькулятора
      required:
        - code
        - max_price
        - min_price
        - name
      type: object
      properties:
        code:
          type: string
          description: Внутренний код подтипа ОН
          minLength: 1
        name:
          type: string
          description: Название подтипа ОН
          minLength: 1
        min_price:
          $ref: '#/components/schemas/AttrMinPrice'
        max_price:
          type: number
          description: Максимальная стоимость ОН в проекте для данного подтипа

    MortgageProgramList:
      description: Список ипотечных программ для ипотечного калькулятора
      required:
        - count
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MortgageProgram'
        count:
          $ref: '#/components/schemas/AttrCount'

    MortgageProgram:
      description: Ипотечная программа для ипотечного калькулятора
      required:
        - amount
        - background_color
        - code
        - description
        - full_name
        - image
        - initial_payment
        - note
        - rate
        - short_name
        - term
      type: object
      properties:
        code:
          type: string
          description: Внутренний код ипотечной программы
          example: "it"
          minLength: 1
        short_name:
          type: string
          description: Название ипотечной программы
          example: "IT-ипотека"
          minLength: 1
        full_name:
          type: string
          description: Полное название ипотечной программы
          example: "Ипотека для IT-специалистов"
          minLength: 1
        rate:
          type: string
          description: Описание программы — ставка ипотечной программы
          example: "от 0.1 %"
          minLength: 1
        amount:
          type: string
          description: Описание программы — сумма кредита
          example: "до 30 млн ₽"
          minLength: 1
        initial_payment:
          type: string
          description: Описание программы — первоначальный взнос
          example: "15 %"
          minLength: 1
        term:
          type: string
          description: Описание программы — срок
          example: "До 30 лет"
          minLength: 1
        note:
          type: string
          description: Краткое описание программы (для баннера)
          example: "Ипотека для ИТ-специалистов аккредитованных компаний"
        description:
          type: string
          description: Полное описание программы, с поддержкой HTML-форматирования (для карточки)
        background_color:
          type: string
          description: Фоновый цвет (для баннера)
          example: "#356547"
        image:
          type: string
          description: Ссылка на изображение (для баннера)

    MortgageCalcResultList:
      description: Результат расчёта ипотечного калькулятора
      required:
        - mortgage_types
        - psk_description
      type: object
      properties:
        psk_description:
          type: string
          nullable: true
          description: |
            Текст описания для дисклеймера ПСК (полная стоимость кредита)

            Статичен, актуалььный текст см. в документации метода.
          example: 'Информация по кредитам не является публичной офертой, размещена исключительно для ознакомления. Полные условия выдачи кредита можно получить в кредитных организациях.'
        mortgage_types:
          type: array
          items:
            $ref: '#/components/schemas/MortgageCalcResultTypeList'

    MortgageCalcResultTypeList:
      description: Результат расчёта ипотечного калькулятора в разрезе типов программ
      required:
        - code
        - name
        - offers_qty
        - rates
      type: object
      properties:
        code:
          type: string
          description: Код типа ипотечной программы
          minLength: 1
        name:
          type: string
          description: Наименование типа ипотечной программы
          minLength: 1
        offers_qty:
          type: integer
          description: Общее количество предложений для данного типа ипотечной программы
        rates:
          type: array
          items:
            $ref: '#/components/schemas/MortgageCalcResultRatesList'

    MortgageCalcResultRatesList:
      description: Ставки для данного подтипа ОН и данной ипотечной программы
      required:
        - amount
        - code
        - initial_payment
        - initial_payment_percent
        - name
        - offers
        - offers_qty
        - payment
        - period_max
        - period_min
      type: object
      properties:
        code:
          type: string
          description: Код группировки по ставке
        name:
          type: string
          description: Наименование диапазона ставки
        offers_qty:
          type: integer
          description: Общее количество предложений для данного диапазона ставки
        payment:
          type: integer
          description: Мин. ежемесячный платеж в группировке
        period_max:
          type: integer
          description: Мин. срок ипотеки в годах в группировке
        period_min:
          type: integer
          description: Макс. срок ипотеки в годах в группировке
        amount:
          type: integer
          description: Мин. сумма кредита в группировке
        initial_payment_percent:
          type: number
          description: Минимальный первоначальный взнос %
        initial_payment:
          type: number
          description: Минимальный первоначальный взнос в руб
        offers:
          type: array
          items:
            $ref: '#/components/schemas/MortgageCalcResultOfferList'

    MortgageCalcResultOfferList:
      description: Банковское предложение ипотечного калькулятора
      required:
        - bank
        - description
        - economy
        - payment
        - period_max
        - period_min
        - psk_max
        - psk_min
        - rate
        - subsidized_flag
        - subsidized_months
        - subsidized_payment
        - subsidized_rate
      type: object
      properties:
        rate:
          $ref: '#/components/schemas/AttrMortgageRate'
        payment:
          $ref: '#/components/schemas/AttrMortgageMonthlyPayment'
        subsidized_flag:
          type: boolean
          description: Флаг наличия субсидии от застройщика
        subsidized_payment:
          type: number
          description: Ежемесячный платёж по субсидии
          nullable: true
        subsidized_rate:
          type: number
          description: Ставка по субсидии
          nullable: true
        subsidized_months:
          type: integer
          description: Длительность субсидированного периода
          nullable: true
        economy:
          type: number
          description: Экономия по субсидированной ставке
          nullable: true
        description:
          type: number
          description: Описание экономии по субсидированной ставке
          nullable: true
        bank:
          $ref: '#/components/schemas/MortgageCalcBank'
        period_max:
          type: integer
          description: Максимальный период ипотечного предложения в годах
          nullable: true
        period_min:
          type: integer
          description: Минимальный период ипотечного предложения в годах
          nullable: true
        psk_min:
          type: number
          description: Нижняя граница Полной стоимости кредита, %
          nullable: true
        psk_max:
          type: number
          description: Верхняя граница Полной стоимости кредита, %
          nullable: true

    MortgageCalcProjectList:
      description: Список проектов для калькулятора
      required:
        - projects
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/MortgageCalcProject'

    MortgageCalcProject:
      description: Проект для ипотечного калькулятора
      required:
        - code
        - id
        - image
        - metro
        - metro_distance
        - min_price
        - name
      type: object
      properties:
        id:
          type: integer
          description: ID проекта
        code:
          $ref: '#/components/schemas/ProjectCode'
        name:
          $ref: '#/components/schemas/AttrProjectName'
        min_price:
          $ref: '#/components/schemas/AttrMinPrice'
        image:
          $ref: '#/components/schemas/AttrProjectImage'
        metro:
          $ref: '#/components/schemas/Metro'
        metro_distance:
          $ref: '#/components/schemas/AttrMetroDistance'


    TradeinOffersList:
      required:
        - offers
      description: Информация для отображения контентной страницы по trade in
      type: object
      properties:
        offers:
          type: array
          items:
            $ref: '#/components/schemas/TradeinOffer'

    TradeinOffer:
      required:
        - background_color
        - description
        - font_color
        - image
        - note
        - title
      description: Список офферов по trade in
      type: object
      properties:
        title:
          type: string
          description: Название предложения
          minLength: 1
        description:
          type: string
          description: Описание предложения (с поддержкой HTML-форматирования)
        note:
          type: string
          description: Примечание (с поддержкой HTML-форматирования)
        background_color:
          type: string
          description: Цвет заднего фона в формате hex
        font_color:
          type: string
          description: Цвет шрифта в формате hex
        image:
          type: string
          nullable: true
          description: URL изображения

    TradeinFormRequest:
      description: Информация для отправки анкеты на оценку недвижимости для trade in
      type: object
      required:
        - name
        - phone
        - project_code
      properties:
        phone:
          type: string
          description: Номер телефона
          minLength: 1
        name:
          type: string
          description: Имя
          example: "Иван"
          minLength: 1
        project_code:
          type: string
          nullable: true
          description: Код интересующего проекта
        comment:
          type: string
          nullable: true
          description: Комментарий клиента по заявке на trade in
        realty:
          $ref: '#/components/schemas/TradeinRealtyDetails'

    TradeinRealtyDetails:
      description: Информация об объекте недвижимости клиента для trade in
      type: object
      nullable: true
      properties:
        address:
          type: string
          nullable: true
          description: Адрес
        floor:
          $ref: '#/components/schemas/AttrProductFloor'
        area:
          $ref: '#/components/schemas/AttrProductArea'
        rooms_number:
          $ref: '#/components/schemas/AttrProductRoomsNumber'
        price:
          $ref: '#/components/schemas/AttrProductTotalPrice'

    NewSubscriptionMarketing:
      description: |
        Объект для передачи данных о новой подписке на маркетинговую рассылку пользователя.
      required:
        - email
        - form
      type: object
      properties:
        email:
          $ref: '#/components/schemas/AttrEmail'
        form:
          $ref: '#/components/schemas/FormConfigId'

    NewSubscriptionProductStatus:
      description: Объект для передачи данных о новой подписке на статус ОН
      required:
        - email
      type: object
      properties:
        email:
          $ref: '#/components/schemas/AttrEmail'
        product_code:
          type: string
          description: Код ОН

    NewSubscriptionResult:
      description: Объект для результатов оформления новой подписки
      required:
        - message
        - success
      type: object
      properties:
        success:
          type: boolean
          description: Результат запроса на оформление подписки
        message:
          type: string
          description: Текстовый комментарий к результату запроса на оформление подписки
          example: "Подписка оформлена"

    HotlineFormRequest:
      description: Информация для отправки обращения на линию доверия
      type: object
      required:
        - comment
        - email
        - name
        - phone
      properties:
        phone:
          type: string
          description: Номер телефона
          minLength: 1
        name:
          type: string
          description: Имя
          example: "Иван"
          minLength: 1
        email:
          $ref: '#/components/schemas/AttrEmail'
        comment:
          type: string
          description: Комментарий обращения
          minLength: 1

    UserDetails:
      description: Объект основных данных пользователя
      required:
        - booking_count
        - client_id
        - email
        - favourite_count
        - id
        - lastName
        - name
        - phone
        - purchase_count
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор пользователя
        client_id:
          type: string
          description: Идентификатор клиента (идентификатор клиента в CRM)
          minLength: 1
          nullable: true
        phone:
          type: string
          description: Номер телефона пользователя
        name:
          type: string
          description: Имя пользователя
        lastName:
          type: string
          description: Фамилия пользователя
        email:
          $ref: '#/components/schemas/AttrEmail'
        booking_count:
          $ref: '#/components/schemas/AttrCount'
        loyalty_card:
          $ref: '#/components/schemas/AttrMrclubCardNumber'
        favourite_count:
          $ref: '#/components/schemas/AttrCount'
        purchase_count:
          $ref: '#/components/schemas/AttrCount'
        mortgage_count:
          $ref: '#/components/schemas/AttrCount'

    UserBookingList:
      description: Список бесплатных бронирований пользователя
      required:
        - bookings
        - bookings_hist
        - bookings_history_qty
        - bookings_qty
        - id
      properties:
        id:
          type: integer
          description: Идентификатор пользователя
        bookings_qty:
          type: integer
          description: Количество бесплатных бронирований пользователя
        bookings_history_qty:
          type: integer
          description: Количество бесплатных бронирований пользователя в истории
        bookings:
          type: array
          items:
            $ref: '#/components/schemas/UserBooking'
        bookings_hist:
          type: array
          items:
            $ref: '#/components/schemas/UserBooking'

    UserBooking:
      description: Информация о бесплатном бронировании
      required:
        - finish_dt
        - id
        - product
        - product_code
        - purchase_type
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор бронирования
        product_code:
          type: string
          description: Код забронированного ОН
          minLength: 1
        finish_dt:
          $ref: '#/components/schemas/AttrDatetime'
        purchase_type:
          $ref: '#/components/schemas/PurchaseType'
        product:
          $ref: '#/components/schemas/Product'

    UserActiveBookingList:
      description: Список ОН активных бронирований пользователя
      required:
        - count
        - product_ids
      properties:
        product_ids:
          type: array
          items:
            $ref: '#/components/schemas/AttrObjectId'
        count:
          $ref: '#/components/schemas/AttrCount'

    UserDevicesList:
      description: Список устройств пользователя
      required:
        - count
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserDevice'
        count:
          $ref: '#/components/schemas/AttrCount'

    UserDevice:
      type: object
      description: Устройство пользователя
      required:
        - application
        - city
        - country
        - device
        - icon_app
        - icon_web
        - id
        - ip
        - last_activity
      properties:
        id:
          type: integer
          description: Идентификатор устройства
        device:
          type: string
          description: Название устройства
          example: "Google Pixel 4 XL"
          minLength: 1
          nullable: true
        application:
          type: string
          description: Приложение
          example: "Android 10"
          minLength: 1
          nullable: true
        ip:
          type: string
          description: IP адрес
          minLength: 1
          example: "109.252.108.91"
        country:
          type: string
          description: Страна
          example: "Россия"
          minLength: 1
          nullable: true
        city:
          type: string
          description: Город
          example: "Москва"
          minLength: 1
          nullable: true
        last_activity:
          type: string
          format: datetime
          description: Последняя активность
          example: "2023-04-17T15:57:40+03:00"
        icon_app:
          type: string
          description: Пиктограмма устройства для приложения
          example: "/upload/uf/80e/gacge20aisrrbbzizicoxk0tgecgfl9p.png"
          minLength: 1
        icon_web:
          type: string
          description: Пиктограмма устройства для сайта
          example: "/upload/uf/80e/gacge20aisrrbbzizicoxk0tgecgfl9p.png"
          minLength: 1

    UserFavouritesList:
      description: Список избранного пользователя
      required:
        - categories
        - count
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/FavoriteCategory'
        count:
          type: integer
          description: Общее количество избранного

    FavoriteCategory:
      type: object
      required:
        - category
        - product_ids
      properties:
        category:
          $ref: '#/components/schemas/ProductCategory'
        product_ids:
          type: array
          description: Идентификаторы избранных ОН
          items:
            type: integer

    UserConsultationRequest:
      description: |
        Запрос консультации.
      type: object
      required:
        - form
      properties:
        phone:
          type: string
          description: Номер телефона (для неавторизованного пользователя)
        name:
          type: string
          description: Имя (для неавторизованного пользователя)
          example: "Иван"
        form:
          $ref: '#/components/schemas/FormConfigId'
        description:
          type: string
          description: Комментарий, который может заполняться при запросе консультации
        project_code:
          $ref: '#/components/schemas/ProjectCode'
        product_code:
          $ref: '#/components/schemas/AttrProductCode'

    UserCallbackRequest:
      type: object
      description: Запрос обратного звонка
      required:
        - screen_code
      properties:
        phone:
          type: string
          description: Номер телефона (для неавторизованного пользователя)
        screen_code:
          type: string
          description: Машиночитаемый код экрана/формы/элемента, с которого запрашивается обратный звонок
        project_code:
          $ref: '#/components/schemas/ProjectCode'
        product_code:
          $ref: '#/components/schemas/AttrProductCode'

    UserPasswordChangeRequest:
      type: object
      description: Запрос смены пароля
      required:
        - new_password
      properties:
        new_password:
          type: string
          description: Новый пароль
          minLength: 1

    PurchaseType:
      description: Способ покупки
      required:
        - code
        - title
      type: object
      properties:
        code:
          $ref: '#/components/schemas/PurchaseTypeCode'
        title:
          type: string
          description: Название способа покупки
          enum:
            - '100% оплата'
            - 'Ипотека'
            - 'Рассрочка'
          minLength: 1


    PurchasesList:
      type: object
      description: Список сделок
      required:
        - active_purchases_qty
        - canceled_purchases_qty
        - completed_purchases_qty
        - items
      properties:
        active_purchases_qty:
          type: integer
          description: Количество активных сделок в массиве
        canceled_purchases_qty:
          type: integer
          description: Количество отмененных сделок в массиве
        completed_purchases_qty:
          type: integer
          description: Количество отмененных сделок в массиве
        items:
          type: array
          items:
            $ref: '#/components/schemas/Purchase'

    Purchase:
      type: object
      description: Данные сделки
      required:
        - cancel_dt
        - complete_dt
        - expiration_dt
        - free_booking_dt
        - id
        - phase
        - products
        - status
      properties:
        id:
          type: number
          description: ID сделки
        lead_id:
          type: string
          description: Идентификатор клиентского интереса (идентификатор лида в CRM)
          minLength: 1
          nullable: true
        phase:
          $ref: '#/components/schemas/Phase'
        status:
          $ref: '#/components/schemas/PurchaseStatus'
        products:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseProduct'
        expiration_dt:
          type: string
          format: date
          description: Срок бронирования
          nullable: true
          example: "2022-03-15"
        free_booking_dt:
          type: string
          format: datetime
          description: Срок бесплатного бронирования
          nullable: true
          example: "2023-04-17T15:57:40+03:00"
        cancel_dt:
          type: string
          format: date
          nullable: true
          description: Дата отмены
          example: "2022-03-15"
        complete_dt:
          type: string
          format: date
          nullable: true
          description: Дата завершения
          example: "2022-03-15"

    PurchaseProduct:
      type: object
      description: Объект недвижимости в сделке
      required:
        - area
        - building
        - category
        - code
        - floor
        - id
        - name
        - number
        - project
        - rooms_number
        - technical_layout
      properties:
        id:
          $ref: '#/components/schemas/AttrObjectId'
        code:
          $ref: '#/components/schemas/AttrProductCode'
        name:
          $ref: '#/components/schemas/AttrProductName'
        category:
          $ref: '#/components/schemas/ProductCategory'
        technical_layout:
          type: string
          description: План ОН (техническая планировка)
          nullable: true
          example: "/upload/iblock/c13/9zarozg1dm2s58i7j30by3gn42r97puj.webp"
        area:
          $ref: '#/components/schemas/AttrProductArea'
        rooms_number:
          $ref: '#/components/schemas/AttrProductRoomsNumber'
        floor:
          $ref: '#/components/schemas/AttrProductFloor'
        number:
          $ref: '#/components/schemas/AttrProductNumber'
        project:
          $ref: '#/components/schemas/ProductProject'
        building:
          $ref: '#/components/schemas/Building'
        contract_price:
          type: number
          description: Стоимость ОН по договору
          example: 9042000

    PurchaseDetail:
      type: object
      description: Детальные данные по сделке
      required:
        - bills_qty
        - booking_payment
        - contact
        - description
        - digital_signature
        - documents_qty
        - escrow
        - escrow_dt
        - expiration_dt
        - explanation
        - free_booking_dt
        - inspection
        - lead_id
        - letter_of_credit
        - letter_of_credit_dt
        - mortgage
        - notification
        - phase
        - phase_document
        - phase_title
        - products
        - purchase_type
        - status
        - step
        - title
        - unilateral_act_dt
      properties:
        lead_id:
          type: string
          description: Идентификатор клиентского интереса (идентификатор лида в CRM)
          minLength: 1
          nullable: true
        phase:
          $ref: '#/components/schemas/Phase'
        phase_title:
          type: string
          description: Заголовок страницы для сайта
          minLength: 1
          example: "Договор № СТН(К)-1/22/159-ДДУ/158893/23"
        step:
          $ref: '#/components/schemas/AttrPurchaseStep'
        status:
          $ref: '#/components/schemas/PurchaseStatus'
        title:
          type: string
          description: Заголовок шага сделки
          example: "Оплатите счета"
          minLength: 1
        description:
          type: string
          nullable: true
          description: Описание шага сделки (с поддержкой HTML-форматирования)
          example: "<p>Формируем проект договора на приобретение объекта недвижимости.</p><p>Как только он будет сформирован, вы перейдете на следующий этап</p>"
        explanation:
          type: string
          nullable: true
          description: Пояснение к шагу сделки (с поддержкой HTML-форматирования)
          example: "Цена в договоре не является конечной и зависит от способа покупки"
        notification:
          type: string
          nullable: true
          description: Предупреждение к шагу сделки (с поддержкой HTML-форматирования)
          example: "Пополнять эскроу-счет лично вам не требуется, это делается банком самостоятельно!"
        expiration_dt:
          type: string
          format: date
          nullable: true
          description: Срок бронирования
          example: "2022-03-15"
        free_booking_dt:
          type: string
          format: datetime
          description: Срок бесплатного бронирования
          nullable: true
          example: "2023-04-17T15:57:40+03:00"
        purchase_type:
          $ref: '#/components/schemas/PurchaseType'
        booking_payment:
          type: object
          nullable: true
          description: Данные по оплате бронирования
          required:
            - amount
            - debt
            - unpaid_bills
            - unpaid_bills_count
          properties:
            amount:
              type: number
              description: Сумма к оплате по договору бронирования
              example: 92000
            debt:
              type: number
              description: Сумма задолженности по договору бронирования
              example: 92000
            unpaid_bills_count:
              $ref: '#/components/schemas/AttrCount'
            unpaid_bills:
              type: array
              items:
                $ref: '#/components/schemas/BillUnpaid'
        products:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseProduct'
        phase_document:
          type: object
          nullable: true
          description: Документ, в рамках которого осуществляется этап
          required:
            - attributes
            - contract_type
            - debt_amount
            - explanation
            - file_id
            - id
            - name
            - status
            - type
          properties:
            id:
              type: number
              description: ID документа
            type:
              type: string
              description: Код типа документа
              enum:
                - 'escrow'
                - 'letter_of_credit'
                - 'mortgage_approval'
                - 'purchase_contract'
                - 'reservation_contract'
                - 'transfer_acceptance_act'
                - 'unilateral_act'
            name:
              type: string
              description: Название документа
              example: "Договор бронирования"
              minLength: 1
            status:
              $ref: '#/components/schemas/PurchaseDocumentStatus'
            debt_amount:
              type: number
              nullable: true
              description: Сумма задолженности по договору приобретения
              example: 15549975
            explanation:
              type: string
              nullable: true
              description: Пояснение к документу
              example: "Цена в договоре не является конечной и зависит от способа покупки"
            attributes:
              type: array
              items:
                $ref: '#/components/schemas/PurchaseDocumentAttribute'
            contract_type:
              $ref: '#/components/schemas/ContractType'
            file_id:
              description: |
                Идентификатор приватного файла, связанного с документом.
              type: string
              nullable: true
              example: '335123'
        mortgage:
          type: object
          nullable: true
          description: Данные ипотечной заявки в рамках сделки (только для способа покупки Ипотека)
          required:
            - approved_offers_qty
            - manager
            - mortgage_application
          properties:
            approved_offers_qty:
              type: integer
              description: Количество одобренных банковских предложений
              example: 9
            mortgage_application:
              $ref: '#/components/schemas/MortgageApplicationDetail'
            manager:
              type: object
              nullable: true
              description: Ипотечный менеджер
              required:
                - email
                - name
                - phone
              properties:
                name:
                  type: string
                  description: ФИО менеджера
                  example: "Фролов Андрей Викторович"
                  nullable: true
                  minLength: 1
                email:
                  type: string
                  description: email менеджера
                  example: "user@domain.com"
                  nullable: true
                  minLength: 1
                phone:
                  type: string
                  description: телефон менеджера
                  example: "+79996665555"
                  nullable: true
                  minLength: 1
        contact:
          type: object
          description: Способы связи
          required:
            - manager
            - support
            - type
          properties:
            type:
              type: string
              description: Тип способа связи для данного шага сделки
              enum:
                - 'manager'
                - 'occupancy'
                - 'support'
            manager:
              type: object
              nullable: true
              description: Контакты менеджера
              required:
                - name
                - phone
              properties:
                name:
                  type: string
                  description: ФИО менеджера
                  example: "Иванов Иван Иванович"
                  nullable: true
                  minLength: 1
                phone:
                  type: string
                  description: Контактный номер телефона менеджера
                  example: "+71234567890"
                  nullable: true
                  minLength: 1
            occupancy:
              $ref: '#/components/schemas/ContentOfficesProjectContact'
            support:
              type: object
              description: Контакты ЦКП
              required:
                - email
                - phone
              properties:
                email:
                  type: string
                  description: Электронная почта поддержки
                  example: "otvet@mr-group.ru"
                phone:
                  type: string
                  description: Контактный номер телефона
                  example: "+71234567890"
        digital_signature:
          type: object
          nullable: true
          description: Данные ЭЦП (только для типа подписания = элетронное)
          required:
            - description
            - explanation
            - extra_title
            - title
          properties:
            title:
              type: string
              description: Заголовок для баннера
              example: "Оформите ЭЦП"
              minLength: 1
            description:
              type: string
              description: Описание для баннера
              minLength: 1
              example: "Для подписания договора нужно оформить электронную подпись"
            extra_title:
              type: string
              description: Заголовок для шторки
              example: "Как оформить ЭЦП"
              minLength: 1
            explanation:
              type: string
              description: Пояснение к способу оформления ЭЦП (с поддержкой HTML-форматирования)
              example: "<p>Есть несколько сервисов, позволяющих быстро и удобно оформить ЭЦП:</p><ul><li>SignMe</li><li>Госключ</li></ul><p>Свяжитесь с вашим менеджером для отправки заявки на оформление ЭЦП или если она уже у вас есть</p>"
              minLength: 1
        escrow:
          type: object
          nullable: true
          description: Данные по заявке на открытие счета эскроу
          required:
            - approval_dt
            - logo
            - sending_dt
            - status
          properties:
            status:
              $ref: '#/components/schemas/EscrowStatus'
            sending_dt:
              type: string
              format: datetime
              description: Дата отправки на согласование
              nullable: true
              example: "2023-04-17T15:57:40+03:00"
            approval_dt:
              type: string
              format: datetime
              description: Дата согласования заявки
              nullable: true
              example: "2023-04-17T15:57:40+03:00"
            logo:
              type: string
              minLength: 1
              description: Ссылка на логотип банка
              example: '/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.svg'
        letter_of_credit:
          type: object
          nullable: true
          description: Данные по аккредитиву
          required:
            - amount
            - description
            - explanation
          properties:
            description:
              type: string
              description: Описание к сумме, которую нужно внести на аккредитив
              example: "Подготовьте платеж по рассрочке"
              minLength: 1
            amount:
              type: number
              description: Сумма, которую необходимо внести на аккредитив
              example: 92000
            explanation:
              type: string
              description: Пояснение к взносу на аккредитив
              nullable: true
              example: "Остальную часть внесет банк согласно условиям ипотечного договора"
        letter_of_credit_dt:
          type: string
          format: date
          nullable: true
          description: Дата открытия аккредитива
          example: "2022-03-15"
        escrow_dt:
          type: string
          format: date
          nullable: true
          description: Дата открытия эскроу счета
          example: "2022-03-15"
        bills_qty:
          type: integer
          description: Общее количество счетов в сделке
          example: 16
        documents_qty:
          type: integer
          description: Общее количество документов в сделке
          example: 16
        inspection:
          type: object
          nullable: true
          description: Данные приемки
          required:
            - registration
            - registration_state
          properties:
            registration_state:
              type: string
              description: |
                Состояние функциональности записи на осмотр для ОН сделки.

                - `available` — доступна
                - `unavailable` — недоступна
              enum:
                - 'available'
                - 'unavailable'
            registration:
              type: object
              nullable: true
              description: Данные записи на осмотр
              required:
                - id
                - status
                - visit_dt
              properties:
                id:
                  type: string
                  minLength: 1
                  description: Идентификатор осмотра
                status:
                  $ref: '#/components/schemas/InspectionStatus'
                visit_dt:
                  type: string
                  format: datetime
                  description: Дата начала осмотра
                  example: "2023-04-17T15:57:40+03:00"
        unilateral_act_dt:
          type: string
          format: date
          nullable: true
          description: Дата отправки одностороннего акта
          example: "2022-03-15"


    PurchaseStatus:
      type: object
      description: Статус сделки
      required:
        - code
        - name
      properties:
        code:
          type: string
          description: Код статуса
          enum:
            - 'active'
            - 'canceled'
            - 'completed'
        name:
          type: string
          description: Название статуса
          minLength: 1
          enum:
            - 'Активная'
            - 'Завершена'
            - 'Отменена'

    EscrowStatus:
      type: object
      description: Статус заявки на открытие эскроу
      required:
        - code
        - name
      properties:
        code:
          type: string
          description: Код статуса
          enum:
            - 'approved'
            - 'sent'
            - 'unsent'
        name:
          type: string
          description: Название статуса
          minLength: 1
          enum:
            - 'Не отправлена'
            - 'Отправлена'
            - 'Согласована'

    Phase:
      type: object
      description: Этап сделки
      required:
        - code
        - name
        - number
        - phases_qty
      properties:
        code:
          type: string
          description: Код этапа
          enum:
            - 'booking'
            - 'contracting'
            - 'inspection'
            - 'project_waiting'
        name:
          type: string
          description: Название текущего этапа
          example: "Оплата бронирования"
          minLength: 1
        number:
          type: number
          description: Номер текущего этапа
          example: 1
        phases_qty:
          type: number
          description: Количество этапов
          example: 4

    ReferralParticipationRequest:
      description: |
        Тело заявки на участие в реферальной программе.
      type: object
      required:
        - loyalty_card
        - name
        - phone
        - project_code
      properties:
        name:
          $ref: '#/components/schemas/PersonFreeFormName'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        loyalty_card:
          $ref: '#/components/schemas/AttrMrclubCardNumber'
        project_code:
          $ref: '#/components/schemas/ProjectCode'

    BillsList:
      type: object
      description: Список счетов
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Bill'

    BillUnpaid:
      type: object
      description: Реквизиты счета (параметры сущности Счет)
      required:
        - amount
        - description
        - expiration_dt
        - payment_link
        - status
      properties:
        description:
          type: string
          description: Описание
          example: "Бронирование объекта недвижимости"
          minLength: 1
        amount:
          type: number
          description: Сумма к оплате
          example: 92000
        payment_link:
          $ref: '#/components/schemas/AttrPaymentLink'
        expiration_dt:
          type: string
          format: datetime
          description: Срок оплаты
          example: "2023-04-17T15:57:40+03:00"
        status:
          $ref: '#/components/schemas/BillStatus'

    Bill:
      type: object
      description: Реквизиты счета (параметры сущности Счет)
      required:
        - amount
        - description
        - expiration_dt
        - payment_link
        - status
      properties:
        description:
          type: string
          description: Описание
          example: "Бронирование объекта недвижимости"
        amount:
          type: number
          description: Сумма к оплате
          example: 92000
        payment_link:
          allOf:
            - $ref: '#/components/schemas/AttrPaymentLink'
            - nullable: true
        expiration_dt:
          type: string
          format: datetime
          nullable: true
          description: Срок оплаты (для неоплаченных счетов)
          example: "2023-04-17T15:57:40+03:00"
        status:
          $ref: '#/components/schemas/BillStatus'

    BillStatus:
      type: object
      description: Статус счета (параметры из справочника Статусы счетов)
      required:
        - code
        - name
      properties:
        code:
          type: string
          description: Код статуса счета
          enum:
            - 'canceled'
            - 'new'
            - 'paid'
            - 'waiting'
        name:
          type: string
          description: Название статуса счета
          minLength: 1
          enum:
            - 'Не оплачен'
            - 'Ожидание'
            - 'Оплачен'
            - 'Отменен'

    PurchaseDocumentAttribute:
      type: object
      description: Атрибут документа
      required:
        - code
        - extra_value
        - formatted_value
        - name
        - value
      properties:
        code:
          type: string
          description: Код атрибута
        name:
          type: string
          description: Название атрибута
          minLength: 1
        value:
          anyOf:
            - type: string
            - type: number
            - type: integer
          description: Основное значение
          example: "11 000 000"
        formatted_value:
          type: string
          description: Основное значение форматированное
          example: "11 000 000 ₽"
          minLength: 1
        extra_value:
          type: string
          nullable: true
          description: Дополнительное значение
          example: "200 000 ₽ за кв. м"

    ContractType:
      type: object
      nullable: true
      description: Тип договора на приобретение
      required:
        - abbreviation
        - code
        - name
      properties:
        code:
          type: string
          description: Код типа договора
          enum:
            - 'ddu'
            - 'dkp'
            - 'pddu'
            - 'pdkp'
            - 'uddu'
        name:
          type: string
          description: Название типа договора
          minLength: 1
          enum:
            - 'Договор долевого участия'
            - 'Договор купли-продажи'
            - 'Предварительный договор долевого участия'
            - 'Предварительный договор купли-продажи'
            - 'Уступка прав по договору долевого участия'
        abbreviation:
          type: string
          nullable: true
          description: Аббревиатура типа договора
          enum:
            - 'ДДУ'
            - 'ДКП'
            - 'ПДДУ'
            - 'ПДКП'
            - 'УДДУ'


    PurchaseDocumentsList:
      type: object
      description: Список документов сделки
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseDocument'

    PurchaseDocument:
      type: object
      description: Документ сделки
      required:
        - file_id
        - id
        - name
        - number
        - status
        - type
      properties:
        id:
          type: number
          description: ID документа
        type:
          type: string
          description: Код типа документа
          minLength: 1
          enum:
            - 'escrow'
            - 'letter_of_credit'
            - 'mortgage_approval'
            - 'purchase_contract'
            - 'reservation_contract'
            - 'transfer_acceptance_act'
            - 'unilateral_act'
        name:
          type: string
          description: Название документа
          minLength: 1
          example: "Договор бронирования"
        status:
          $ref: '#/components/schemas/PurchaseDocumentStatus'
        number:
          type: string
          description: Номер документа (при наличии)
          nullable: true
          example: "СТН(К)-1/22/159-ДДУ/158893/23"
        file_id:
          type: integer
          description: ID приватного файла, связанного с документов
          example: 3315110
          nullable: true

    PurchaseDocumentStatus:
      type: object
      nullable: true
      description: |
        Статус документа сделки (параметры справочника Статусы документов)

        Передается только для следующих типов документов:
          - purchase_contract (договор приобретения)
          - reservation_contract (договор бронирования)
          - transfer_acceptance_act (акт приема-передачи)
          - unilateral_act (односторонний акт приема-передачи)

        Возможные статусы:
          - `signing` - Подписание
          - `active` - Действующий
          - `expired` - Истек
          - `terminated` - Расторгнут

        Для договора бронирования статус "Отменен" в ответе передавать, как "Расторгнут" (terminated)
      required:
        - code
        - name
      properties:
        code:
          type: string
          description: Код
          enum:
            - 'active'
            - 'expired'
            - 'signing'
            - 'terminated'
        name:
          type: string
          description: Название
          enum:
            - 'Действующий'
            - 'Истек'
            - 'Подписание'
            - 'Расторгнут'

    PurchaseDocumentDetail:
      type: object
      description: Документ сделки
      required:
        - attributes
        - document
      properties:
        document:
          $ref: '#/components/schemas/PurchaseDocument'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseDocumentAttribute'

    PurchasePaymentsList:
      type: object
      description: Список платежей по сделке
      required:
        - payments
        - show_in
      properties:
        show_in:
          type: object
          required:
            - purchase_card
          description: |
            Условия доступности графика платежей для различных контекстов.
          properties:
            purchase_card:
              type: boolean
              description: |
                Флаг доступности графика платежей в карточке сделки. <br>
                Правила определения значения параметра см. в документе https://confluence.mr-group.ru/pages/viewpage.action?pageId=74067546
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PurchasePayment'

    PurchasePayment:
      type: object
      description: Параметры платежа по сделке на основе данных сущности Платеж (см. https://confluence.mr-group.ru/pages/viewpage.action?pageId=73893691)
      required:
        - debt
        - expiration_dt
        - number
        - payment
      properties:
        number:
          type: integer
          description: Порядковый номер платежа
          example: 3
        expiration_dt:
          type: string
          format: datetime
          description: Срок оплаты
          example: "2012-04-23T18:25:43.511Z"
        payment:
          type: number
          example: 14027818.00
          description: Сумма к оплате в руб.
        debt:
          type: number
          example: 1402781.00
          description: Сумма задолженности в руб.


    PurchaseMrclubOffersList:
      required:
        - items
      description: Список предложений программы лояльности MR Club для сделки
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseMrclubOffer'

    PurchaseMrclubOffer:
      description: Краткая информация о предложении программы лояльности для сделки
      required:
        - categories
        - code
        - image
        - labels
        - logo
        - name
        - teaser
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/MrclubCategory'
        code:
          type: string
          description: Системное имя предложения
          minLength: 1
        image:
          type: string
          description: Изображение предложения
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
          minLength: 1
        name:
          type: string
          description: Название предложения
          example: "Обойкин — сеть обойных центров"
          minLength: 1
        teaser:
          type: string
          nullable: true
          description: Краткое описание предложения
          example: "Скидка в магазин с огромным выбором обоев"
        labels:
          type: array
          items:
            $ref: '#/components/schemas/MrclubOfferLabel'
        logo:
          type: string
          description: Логотип партнера
          nullable: true
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"

    InspectionStatus:
      type: object
      description: |
        Статус записи на осмотр

        - `pre_confirmed` — подтверждение записи
        - `confirmed` — открыт
        - `pre_canceled` — подтверждение отмены
        - `canceled` — отменен
        - `pre_completed` — подтверждение завершения
        - `completed` — завершен
      required:
        - code
        - name
      properties:
        code:
          type: string
          description: Код
          enum:
            - 'canceled'
            - 'completed'
            - 'confirmed'
            - 'pre_canceled'
            - 'pre_completed'
            - 'pre_confirmed'
        name:
          type: string
          description: Название
          enum:
            - 'Завершен'
            - 'Открыт'
            - 'Отменен'
            - 'Подтверждение завершения'
            - 'Подтверждение записи'
            - 'Подтверждение отмены'

    Schedule:
      type: object
      description: |
        Список доступных слотов
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'

    TimeSlot:
      type: object
      description: |
        Данные слота для записи
      required:
        - date
        - id
      properties:
        id:
          type: string
          format: uuid
          minLength: 1
          description: Внешний идентификатор слота
        date:
          $ref: '#/components/schemas/AttrDatetime'

    InspectionRegistrationRequest:
      type: object
      description: |
        Данные слота для записи
      required:
        - slot
      properties:
        slot:
          type: string
          format: uuid
          description: Идентификатор слота
          minLength: 1
        vehicle:
          type: object
          description: |
            Данные ТС для бронирования парковочного места
          required:
            - brand
            - number
          properties:
            number:
              type: string
              description: Номер ТС
              minLength: 1
            brand:
              type: string
              description: Марка ТС
              minLength: 1


    Button:
      description: Объект для кнопки
      required:
        - link
        - text
      type: object
      properties:
        text:
          type: string
          description: Текст кнопки
        link:
          type: string
          description: Ссылка кнопки

    Metro:
      description: Метро
      nullable: true
      required:
        - color
        - name
      type: object
      properties:
        color:
          $ref: '#/components/schemas/AttrMetroColor'
        name:
          $ref: '#/components/schemas/AttrMetroName'

    MetroMovementWay:
      description: Метро
      nullable: true
      required:
        - icon
        - name
      type: object
      properties:
        icon:
          type: string
          description: Иконка способа перемещения до метро
          example: "/upload/uf/80e/gacge20aisrrbbzizicoxk0tgecgfl9p.png"
        name:
          type: string
          description: Название способа перемещения до метро
          example: "Пешком"

    Image:
      required:
        - src
      type: object
      properties:
        src:
          type: string
          description: Ссылка на изображение
        description:
          type: string
          description: Описание для изображения

    File:
      required:
        - src
      type: object
      properties:
        src:
          type: string
          description: Ссылка на файл
        description:
          type: string
          description: Описание для файла


    SendCodeRequest:
      required:
        - mail
        - phoneNumber
        - type
      type: object
      properties:
        type:
          type: string
          description: Тип отпавки сообщения sms или mail
          example: "sms"
        phoneNumber:
          type: string
          description: Номер телефона должен содержать код страны +7 и 10 цифр номера телефона
          example: "+71234567890"
        mail:
          type: string
          description: Электронная почта
          nullable: true
          example: "mail@example.com"


    SendCodeResponse:
      required:
        - refresh
      type: object
      properties:
        refresh:
          type: string
          format: datetime
          description: Cрок деактивации повторной отправки кода
          example: "2023-04-17T15:57:40+03:00"


    SendCodeResponse2:
      required:
        - message
        - refresh
      type: object
      properties:
        refresh:
          type: string
          format: datetime
          description: Cрок деактивации повторной отправки кода
          example: "2023-04-17T15:57:40+03:00"
          nullable: true
        message:
          type: string
          description: Сообщение об ошибке (Превышен лимит ввода кода/Истек срок действия кода/Неправильный код/Превышен лимит повторных запросов/Превышен лимит ввода кода и повторных запросов/Истек срок действия кода и превышен лимит повторных запросов/Отправленный код еще действителен)
          example: "Отправленный код еще действителен"
          nullable: true

    SendCodeResponse3:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: Сообщение об ошибке (Превышен лимит ввода кода/Истек срок действия кода/Неправильный код/Превышен лимит повторных запросов/Превышен лимит ввода кода и повторных запросов/Истек срок действия кода и превышен лимит повторных запросов)
          example: "Истек срок действия кода"
          nullable: true

    CheckCodeRequest:
      required:
        - code
        - mail
        - phoneNumber
        - type
      type: object
      properties:
        type:
          type: string
          description: Тип отправки сообщения sms или mail
          example: "sms"
        code:
          type: integer
          description: Код подтверждения
          example: 1234
        phoneNumber:
          type: string
          description: Номер телефона. Должен содержать код страны +7 и 10 цифр номера
          example: "+71234567890"
        mail:
          type: string
          description: Электронная почта
          example: "mail@example.com"


    PromoSnippet:
      description: Контент акции (для сниппета акции в списке)
      required:
        - background_color
        - code
        - gradient
        - promo_expires
        - promo_image
        - subtitle
        - title
        - white_text
      type: object
      properties:
        code:
          type: string
          description: Символьный код акции
          example: "iampromo"
          nullable: true
        title:
          type: string
          description: Заголовок акции
          example: "Рассрочка 0% в ЖК Mod"
        subtitle:
          type: string
          description: Подзаголовок акции
          example: "Успейте приобрести квартиру на выгодных условиях"
          nullable: true
        promo_expires:
          type: string
          format: datetime
          description: Дата окончания акции
          example: "2012-04-23T18:25:43.511Z"
          nullable: true
        promo_image:
          type: string
          description: URL изображения для сниппета акции
          example: "/static/promo/1.jpg"
          nullable: true
        background_color:
          type: string
          format: hex
          description: HEX цвета заливки сниппета
          nullable: true
        white_text:
          type: boolean
          description: Флаг отображения светлого текста на стороне frontend
        gradient:
          type: boolean
          description: Флаг использования градиентной подложки для шрифта


    PromoList:
      description: Список акций
      required:
        - items
      type: object
      properties:
        items:
          type: array
          description: Список акций
          items:
            $ref: '#/components/schemas/PromoSnippet'


    PromoContent:
      description: Контент по акции (для карточки акции)
      type: object
      required:
        - ad_label
        - button_app_link
        - button_text
        - button_web_link
        - content
        - project
        - promo_expires
        - promo_image_detail
        - subtitle
        - title
      properties:
        title:
          type: string
          description: Заголовок акции
          example: "Рассрочка 0% в ЖК Mod"
        subtitle:
          type: string
          description: Подзаголовок акции
          example: "Успейте приобрести квартиру на выгодных условиях"
        promo_image_detail:
          type: string
          description: URL изображения для детальной страницы акции
          example: "/static/promo/2.jpg"
          nullable: true
        content:
          type: string
          format: html
          description: Форматированный в HTML контент страницы
          example: "<h3>Это заголовок</h3> И тут вот текст"
        project:
          type: object
          description: Объект связанного проекта
          nullable: true
          properties:
            id:
              $ref: '#/components/schemas/AttrProjectId'
            code:
              $ref: '#/components/schemas/ProjectCode'
        promo_expires:
          type: string
          format: datetime
          description: Дата окончания акции
          example: "2012-04-23T18:25:43.511Z"
          nullable: true
        button_text:
          type: string
          description: Текст для кнопки на странице акции
          example: "Смотреть предложения"
          nullable: true
        button_web_link:
          type: string
          description: Ссылка для кнопки на странице акции (Сайт))
          example: "/flats?project[]=1"
          nullable: true
        button_app_link:
          type: string
          description: Ссылка для кнопки на экране акции (МП)
          nullable: true
        ad_label:
          $ref: '#/components/schemas/AttrAdvertisementLabel'

    InteractivePlan:
      required:
        - background_image
        - compass_angle
        - floor
        - level_plan
        - object_types
        - svg_markup
      type: object
      nullable: true
      properties:
        background_image:
          type: string
          example: '/static/plan/hide_main.png'
          description: Ссылка на изображение плана (тут может быть изображение и SVG)
          minLength: 1
        svg_markup:
          type: string
          example: '/static/plan/hide_main_markup.svg'
          description: Ссылка на SVG разметку
          minLength: 1
        level_plan:
          type: string
          example: 'project'
          description: Уровень плана
          enum:
            - 'building'
            - 'floor'
            - 'project'
            - 'section'
        floor:
          type: number
          example: 3
          description: Этаж, который необходимо передать для получения объектов к плану
          nullable: true
        object_types:
          type: array
          example: [ 'flats' ]
          description: Типы ОН, доступные на схеме
          items:
            type: string
            minLength: 1
        compass_angle:
          $ref: '#/components/schemas/AttrCompassAngle'

    ShortInteractivePlan:
      required:
        - background_image
        - svg_markup
      type: object
      nullable: true
      properties:
        background_image:
          type: string
          example: '/static/plan/hide_main.png'
          description: Ссылка на изображение плана
          minLength: 1
        svg_markup:
          type: string
          example: '/static/plan/hide_main_markup.svg'
          description: Ссылка на SVG разметку
          minLength: 1


    TypicalObjectsList:
      type: object
      required:
        - items
        - limit
        - page
        - page_count
        - sort
      description: Список планировок
      properties:
        limit:
          $ref: '#/components/schemas/AttrPaginationLimit'
        page:
          $ref: '#/components/schemas/AttrPaginationPage'
        page_count:
          $ref: '#/components/schemas/AttrPaginationPageCount'
        sort:
          type: object
          required:
            - code
            - name
          description: Объект примененной сортировки
          properties:
            code:
              type: string
              description: Код сортировки
              minLength: 1
            name:
              type: string
              description: Название сортировки
              minLength: 1
        items:
          type: array
          description: Список планировок
          items:
            $ref: '#/components/schemas/TypicalObject'

    TypicalObject:
      type: object
      required:
        - 3d_layout
        - apartments_count
        - building
        - max_area
        - max_floor
        - min_area
        - min_deadline
        - min_floor
        - min_payment
        - min_price
        - project
        - rooms_number
        - technical_layout
        - typicalObjectId
      description: Объект планировки для списка
      properties:
        typicalObjectId:
          type: string
          format: uuid
          description: ID планировки
          minLength: 1
        project:
          type: object
          required:
            - code
            - id
            - name
          properties:
            id:
              $ref: '#/components/schemas/AttrProjectId'
            code:
              $ref: '#/components/schemas/ProjectCode'
            name:
              $ref: '#/components/schemas/AttrProjectName'
        building:
          type: object
          required:
            - code
            - deadline
            - id
            - name
          properties:
            id:
              $ref: '#/components/schemas/AttrBuildingId'
            code:
              $ref: '#/components/schemas/AttrBuildingCode'
            name:
              $ref: '#/components/schemas/AttrBuildingName'
            deadline:
              $ref: '#/components/schemas/AttrBuildingDeadline'
        apartments_count:
          type: integer
          description: Количество объектов в планировке
          example: 30
        rooms_number:
          type: integer
          description: |
            Количество комнат в планировке
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        technical_layout:
          type: string
          format: url
          description: Ссылка на изображение планировки
          minLength: 1
        3d_layout:
          type: string
          format: url
          nullable: true
          description: Ссылка на 3D планировку
        min_area:
          type: number
          description: Максимальная площадь ОН в планировке
        max_area:
          type: number
          description: Максимальная площадь ОН в планировке
        min_price:
          $ref: '#/components/schemas/AttrMinPriceNullable'
        min_payment:
          type: number
          nullable: true
          description: Минимальный платеж по ипотеке в планировке
        min_floor:
          type: integer
          description: Минимальный этаж в планировке
        max_floor:
          type: integer
          description: Максимальный этаж в планировке

    TypicalObjectDetail:
      type: object
      required:
        - items
        - sort
        - typicalObject
      properties:
        typicalObject:
          $ref: '#/components/schemas/TypicalObject'
        sort:
          type: object
          required:
            - code
            - name
          description: Объект примененной сортировки
          properties:
            code:
              type: string
              description: Код сортировки
              minLength: 1
            name:
              type: string
              description: Название сортировки
              minLength: 1
        items:
          type: array
          description: Список ОН
          items:
            $ref: '#/components/schemas/TypicalObjectProduct'


    TypicalObjectProduct:
      type: object
      required:
        - area
        - booking_type
        - building
        - code
        - discount
        - floor
        - id
        - monthly_payment
        - name
        - price
        - purchase_type
        - purchase_types
        - status
        - technical_layout
      properties:
        id:
          $ref: '#/components/schemas/AttrObjectId'
        code:
          $ref: '#/components/schemas/AttrProductCode'
        name:
          $ref: '#/components/schemas/AttrProductName'
        number:
          $ref: '#/components/schemas/AttrProductNumber'
        price:
          $ref: '#/components/schemas/AttrProductTotalPrice'
        discount:
          $ref: '#/components/schemas/Discount'
        purchase_type:
          type: string
          description: Основной способ покупки
          example: "mortgage"
        monthly_payment:
          $ref: '#/components/schemas/AttrProductMonthlyPayment'
        technical_layout:
          type: string
          description: План ОН (техническая планировка)
          example: "/upload/iblock/c13/9zarozg1dm2s58i7j30by3gn42r97puj.webp"
        area:
          $ref: '#/components/schemas/AttrProductArea'
        floor:
          $ref: '#/components/schemas/AttrProductFloor'
        building:
          required:
            - floors_number
          type: object
          description: Информация о корпусе
          properties:
            floors_number:
              type: integer
              description: Количество этажей в корпусе
        status:
          $ref: '#/components/schemas/ProductStatus'
        booking_type:
          $ref: '#/components/schemas/AttrProductBookingType'
        purchase_types:
          type: array
          description: Доступные способы покупки.
          items:
            $ref: '#/components/schemas/ProductPurchaseType'


    FilterResponse:
      type: object
      required:
        - categories
        - count
        - filters
        - projects_count
        - sorts
        - typical_objects_count
      properties:
        categories:
          type: array
          description: |
            Список доступных категорий.
            В объекте возвращается список всех доступных категорий.
          items:
            type: object
            required:
              - additional_info
              - available
              - checked
              - name
              - value
            properties:
              available:
                type: boolean
                description: Признак доступности значения для выбора
              name:
                type: string
                description: Отображаемое название категории
                example: 'Квартиры'
              value:
                type: string
                description: Код категории
                enum:
                  - 'boxrooms'
                  - 'commertials'
                  - 'flats'
                  - 'offices'
                  - 'parkings'
              checked:
                type: boolean
                description: Признак активированной категории
              additional_info:
                nullable: true
                description: Объект не используется. Объект был почему-то реализован, но в аналитике нет никакой информации, что тут должно было передаваться.
        filters:
          type: array
          description: Список доступных фильтров
          items:
            anyOf:
              - $ref: '#/components/schemas/RangeFilterResponse'
              - $ref: '#/components/schemas/BooleanFilterResponse'
              - $ref: '#/components/schemas/SelectFilterResponse'
        count:
          $ref: '#/components/schemas/AttrCount'
        projects_count:
          type: integer
          description: Количетство проектов, соответствующие фильтрам
        typical_objects_count:
          type: integer
          description: Количество планировок, соответствующие фильтрам
        sorts:
          type: array
          description: Доступные сортировки
          items:
            $ref: '#/components/schemas/Sort'


    Sort:
      type: object
      required:
        - code
        - name
      description: Объект сортировки
      properties:
        code:
          type: string
          description: Код сортировки
          example: "default"
        name:
          type: string
          description: Название сортировки
          example: "По умолчанию"

    RangeFilterResponse:
      type: object
      required:
        - code
        - global_range
        - range
        - type
      description: Фильтр типа range
      properties:
        code:
          type: string
          description: Код фильтра
          example: 'floor'
        type:
          type: string
          description: Тип фильтра
          enum:
            - 'range'
        range:
          type: object
          required:
            - max
            - min
          description: Границы фильтра
          properties:
            min:
              type: integer
              description: Минимальная граница
              example: 5
            max:
              type: integer
              description: Максимальная граница
              example: 20
        global_range:
          type: object
          required:
            - max
            - min
          description: Глоабльные границы фильтра
          properties:
            min:
              type: integer
              description: Минимальная глобальная граница
              example: 5
            max:
              type: integer
              description: Максимальная глобальная граница
              example: 20



    SelectFilterResponse:
      type: object
      required:
        - code
        - name
        - type
        - values
      description: Фильтр типа select
      properties:
        name:
          type: string
          description: Отображаемое название
          example: 'Проект'
        code:
          type: string
          description: Код фильтра
          example: 'project'
        type:
          type: string
          description: Тип фильтра
          enum:
            - 'select'
        values:
          type: array
          description: Доступные значения
          items:
            type: object
            required:
              - additional_info
              - available
              - checked
              - name
              - value
            properties:
              name:
                type: string
                description: Отображаемое название фильтра
                example: 'HIDE'
              value:
                anyOf:
                  - type: string
                  - type: integer
                description: Код значения
                example: 'hide'
              checked:
                type: boolean
                description: Признак активированного фильтра
              available:
                type: boolean
                description: Признак недоступности для выбора
              additional_info:
                nullable: true
                anyOf:
                  - $ref: '#/components/schemas/FilterAdditionalInfoProject'
                  - $ref: '#/components/schemas/FilterAdditionalInfoBuilding'
                  - $ref: '#/components/schemas/FilterAdditionalInfoPlace'



    BooleanFilterResponse:
      required:
        - available
        - checked
        - code
        - name
        - type
      type: object
      description: Фильтра типа boolean
      properties:
        name:
          type: string
          description: Отображаемое название
          example: 'Семейное'
        code:
          type: string
          description: Код фильтра
          example: 'family'
        type:
          type: string
          description: Тип фильтра
          enum:
            - 'boolean'
        checked:
          type: boolean
          description: Признак активированного фильтра
        available:
          type: boolean
          description: Признак недоступности для выбора


    FilterAdditionalInfoPlace:
      type: object
      required:
        - area_id
        - area_name
        - metro_color
        - metro_distance
        - metro_line
        - movement_way
      properties:
        area_id:
          type: integer
          description: ID округа
          example: 1
        area_name:
          type: string
          description: Название округа
          example: 'СВАО'
        metro_color:
          $ref: '#/components/schemas/AttrMetroColor'
        metro_line:
          $ref: '#/components/schemas/AttrMetroLine'
        movement_way:
          type: string
          nullable: true
          description: Ссылка на иконку способа передвижения
          example: "/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.ico"
        metro_distance:
          $ref: '#/components/schemas/AttrMetroDistance'

    FilterAdditionalInfoProject:
      type: object
      required:
        - image
        - metro_color
        - metro_distance
        - metro_line
        - min_price
        - movement_way
      properties:
        min_price:
          $ref: '#/components/schemas/AttrMinPrice'
        metro_color:
          $ref: '#/components/schemas/AttrMetroColor'
        metro_line:
          $ref: '#/components/schemas/AttrMetroLine'
        movement_way:
          type: string
          nullable: true
          description: Ссылка на иконку способа передвижения
          example: "/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.ico"
        metro_distance:
          $ref: '#/components/schemas/AttrMetroDistance'
        image:
          type: string
          nullable: true
          description: Ссылка на изображение проекта
          example: "/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.png"


    FilterAdditionalInfoBuilding:
      type: object
      required:
        - project_id
        - project_name
        - quater
        - released
        - year
      properties:
        project_id:
          $ref: '#/components/schemas/AttrProjectId'
        project_name:
          $ref: '#/components/schemas/AttrProjectName'
        released:
          type: boolean
          description: Признак, что проект сдан
        quater:
          type: integer
          nullable: true
          description: Квартал сдачи проекта
          example: 3
        year:
          type: string
          nullable: true
          description: Год сдачи проекта
          example: '2023'

    PriceTable:
      type: array
      description: Таблица цен и площадей
      items:
        $ref: '#/components/schemas/PriceRow'

    PriceRow:
      type: object
      required:
        - filter
        - min_area
        - min_price
        - name
      description: Строка таблицы цен и площадей
      properties:
        filter:
          type: integer
          description: Значение для фильтра по комнатности
        min_price:
          $ref: '#/components/schemas/AttrMinPrice'
        min_area:
          type: number
          description: Минимальная площадь
        name:
          type: string
          description: Имя строки

    PlanBuildingsList:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          description: Массив корпусов
          items:
            $ref: '#/components/schemas/PlanBuilding'

    PlanBuilding:
      type: object
      required:
        - apartments_count
        - code
        - crm_id
        - deadline
        - environment
        - floors_number
        - id
        - max_discount
        - min_area
        - min_payment
        - min_price
        - name
        - plan
        - price_table
        - readiness
      properties:
        id:
          $ref: '#/components/schemas/AttrBuildingId'
        crm_id:
          type: string
          description: ID CRM
          example: 'e8f38465-2417-47db-8a22-4082633d752a'
        code:
          $ref: '#/components/schemas/AttrBuildingCode'
        name:
          $ref: '#/components/schemas/AttrBuildingName'
        deadline:
          $ref: '#/components/schemas/AttrBuildingDeadline'
        readiness:
          type: integer
          description: Процент готовности корпуса
          example: 25
        floors_number:
          type: integer
          description: Этажность корпуса
          example: 52
        apartments_count:
          type: integer
          description: Количество квартир в корпусе
          example: 200
        min_area:
          type: number
          description: Минимальная площадь в корпусе
          example: 34.9
        min_price:
          $ref: '#/components/schemas/AttrMinPriceNullable'
        max_discount:
          $ref: '#/components/schemas/AttrMaxDiscount'
        min_payment:
          type: number
          description: Минимальный платеж по ипотеке в корпусе
          nullable: true
          example: 24654
        plan:
          $ref: '#/components/schemas/InteractivePlan'
        environment:
          $ref: '#/components/schemas/ProductEnvironment'
        price_table:
          $ref: '#/components/schemas/PriceTable'

    PlanSectionsList:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          description: Массив корпусов
          items:
            $ref: '#/components/schemas/PlanSection'

    PlanSection:
      type: object
      required:
        - apartments_count
        - crm_id
        - deadline
        - floors_number
        - id
        - max_discount
        - name
        - plan
        - price_table
        - readiness
      properties:
        id:
          type: integer
          description: ID секции
          example: 1
        crm_id:
          type: string
          description: ID CRM
          example: 'e8f38465-2417-47db-8a22-4082633d752a'
        name:
          type: string
          description: Название секции
          example: 'Vienna-1'
        deadline:
          $ref: '#/components/schemas/AttrBuildingDeadline'
        readiness:
          type: integer
          description: Процент готовности корпуса
          example: 25
        floors_number:
          type: integer
          description: Этажность секции
          example: 52
        apartments_count:
          type: integer
          description: Количество квартир в секции
          example: 200
        max_discount:
          $ref: '#/components/schemas/AttrMaxDiscount'
        plan:
          $ref: '#/components/schemas/InteractivePlan'
        price_table:
          $ref: '#/components/schemas/PriceTable'


    PlanFloorsList:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          description: Массив этажей
          items:
            $ref: '#/components/schemas/PlanFloor'

    PlanFloor:
      type: object
      required:
        - apartments_count
        - floor_number
        - max_discount
        - min_area
        - min_payment
        - min_price
        - plan
        - price_table
      properties:
        floor_number:
          type: integer
          description: Номер этажа
          example: 25
        apartments_count:
          type: integer
          description: Количество квартир на этаже
          example: 200
        min_area:
          type: number
          description: Минимальная площадь на этаже
          example: 34.9
        min_price:
          $ref: '#/components/schemas/AttrMinPriceNullable'
        max_discount:
          $ref: '#/components/schemas/AttrMaxDiscount'
        min_payment:
          type: number
          description: Минимальный платеж по ипотеке на этаже
          example: 24654
          nullable: true
        plan:
          $ref: '#/components/schemas/InteractivePlan'
        price_table:
          $ref: '#/components/schemas/PriceTable'


    ProductSubType:
      type: object
      required:
        - code
        - description
        - icon
        - name
      properties:
        code:
          type: string
          description: Код подтипа
          minLength: 1
        name:
          type: string
          description: Название подтипа
          minLength: 1
        description:
          type: string
          description: Описание подтипа
          minLength: 1
        icon:
          type: string
          format: url
          nullable: true
          description: Иконка подтипа

    SubTypeList:
      type: array
      items:
        $ref: '#/components/schemas/SubTypeWithObjects'

    SubTypeWithObjects:
      type: object
      allOf:
        - $ref: '#/components/schemas/ProductSubType'
        - type: object
          required:
            - objects
          properties:
            objects:
              type: array
              description: Массив ID CRM
              items:
                type: string

    ContentTemplate:
      type: object
      required:
        - main_title
      properties:
        main_title:
          type: string
          description: Заголовок 1-го уровня
        main_description:
          type: string
          description: Описание 1-го уровня
        second_title:
          type: string
          description: Заголовок 2-го уровня
        second_description:
          type: string
          description: Описание 2-го уровня
        main_image_desk:
          type: string
          description: Изображение для шапки десктопной версии
        main_image_mob:
          type: string
          description: Изображение для шапки моб. версии
        main_button:
          type: object
          properties:
            text:
              type: string
              description: Текст для основной кнопки
            link_web:
              type: string
              description: Ссылка для кнопки на сайте
            link_app:
              type: string
              description: Ссылка для кнопки в МП
        faq_linked_section:
          type: array
          description: Список кодов разделов FAQ
          items:
            type: string
        steps_block_code:
          type: string
          description: Код группы шагов

    FeaturesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FeatureItem'

    FeatureItem:
      type: object
      required:
        - description
        - id
        - image
        - title
      properties:
        id:
          type: string
          description: id особенности
          example: '1'
        title:
          type: string
          description: Описание особенности
          example: "Архитектура"
        description:
          type: string
          description: Описание особенности [Устарело]
          example: "Современная архитектура района"
        image:
          type: string
          format: url
          description: Ссылка на изображение особенности


    FeatureContent:
      type: object
      required:
        - content
        - title
        - video
      properties:
        title:
          type: string
          description: Описание особенности
          example: "Архитектура"
          minLength: 1
        content:
          type: string
          nullable: true
          description: HTML контент особенности
          example: "<h2>Это заголовок</h2><p>А это просто текст</p>"
        video:
          type: string
          nullable: true
          description: Ссылка на видео
          example: "https://www.youtube.com/embed/cx6djvSyZeQ"


    ProjectGalleryList:
      type: object
      required:
        - id
        - items
        - name
      properties:
        id:
          type: integer
          description: ID категории
        name:
          type: string
          description: Название категории
          example: "Виртуальный тур"
          minLength: 1
        items:
          type: array
          description: Массив элементов галереи, входящих в категорию
          items:
            $ref: '#/components/schemas/ProjectGalleryItem'

    ProjectGalleryItem:
      type: object
      description: |
        Массив элементов галереи, входящих в категорию.

        Каждый элемент массива - это объект, описывающий элемент галереи (изображение, видео и т.д.).
      required:
        - description
        - hide_description
        - id
        - image
        - link_3d
        - pins
        - type
        - video_link
      properties:
        id:
          type: integer
          description: ID элемента
          example: 1
        type:
          type: string
          description: |
            Тип элемента:

            - `image` — если Ссылка на видео и Ссылка на 3D пустые;
            - `video` — если Ссылка на видео не пустой, Ссылка на 3D — пустой;
            - `3D` — если Ссылка на 3D - не пустой.
          enum:
            - '3D'
            - 'image'
            - 'video'
        image:
          $ref: '#/components/schemas/AttrImageLink'
        video_link:
          description: |
            Ссылка на видео элемента.
          type: string
          nullable: true
        link_3d:
          description: |
            Ссылка на 3D-тур.
          type: string
          nullable: true
        description:
          description: |
            Публичное описание к элементу галереи.
          type: string
          nullable: true
          example: "Современная архитектура района"
        hide_description:
          type: boolean
          description: |
            Флаг "Скрыть описание"

            Если true, необходимо скрывать описание у карточки видео/3D
        pins:
          type: array
          items:
            $ref: '#/components/schemas/ProjectGalleryItemPin'

    ProjectGalleryItemPin:
      type: object
      description: |
        Массив пинов, связанных с элементов галереи

        Каждый элемент массива - это объект, описывающий расположение и содержимое пина
      required:
        - description
        - id
        - x
        - y
      properties:
        id:
          type: integer
          description: ID элемента
          example: 1
        x:
          $ref: '#/components/schemas/AttrPointCoordinate'
        y:
          $ref: '#/components/schemas/AttrPointCoordinate'
        description:
          type: string
          description: |
            Текст, отображаемый в качестве особенности при взаимодействии с пином
          nullable: true
          example: "Панорамные окна подъезда"

    InfrastructureResponse:
      type: object
      required:
        - categories
        - items
        - project
      properties:
        project:
          type: object
          description: Информация о проекте
          required:
            - image
            - latitude
            - longitude
            - name
          properties:
            name:
              $ref: '#/components/schemas/AttrProjectName'
            image:
              type: string
              description: Первое маркетинговое изображение проекта
            latitude:
              $ref: '#/components/schemas/AttrMapCoordinate'
            longitude:
              $ref: '#/components/schemas/AttrMapCoordinate'
        items:
          type: array
          description: Массив объектов инфраструктуры
          items:
            $ref: '#/components/schemas/InfrastructureObject'
        categories:
          type: array
          description: Массив категорий инфраструктуры
          items:
            $ref: '#/components/schemas/InfrastructureCategory'


    InfrastructureObject:
      type: object
      required:
        - address
        - availabilities
        - category_id
        - code
        - id
        - latitude
        - longitude
        - name
      properties:
        id:
          type: integer
          description: Внутренний идентификатор объекта
          example: 1
        code:
          type: string
          description: Код объекта
          example: "object_1"
        category_id:
          type: integer
          description: ID категории инфраструктуры
        name:
          type: string
          description: Название организации
          example: "Аптека №1"
        address:
          type: string
          description: Адрес объекта
          example: "ул. Примеров API, д. 3"
        availabilities:
          type: string
          nullable: true
          description: Дни и часы работы объекта
          example: "пн-пт 09:00-20:00, сб-вс 09:00-18:00"
        longitude:
          $ref: '#/components/schemas/AttrMapCoordinate'
        latitude:
          $ref: '#/components/schemas/AttrMapCoordinate'


    InfrastructureCategory:
      type: object
      required:
        - code
        - icon_app
        - icon_web
        - id
        - name
      description: Категория объекта инфраструктуры
      properties:
        id:
          type: integer
          description: ID категории
          example: 2
        name:
          type: string
          description: Название категории
          example: "Медицина"
        icon_web:
          type: string
          description: Ссылка на иконку категории для сайта
          example: "https://mrsuperapp.adv.ru/pictures/medicine_icon_web.svg"
        icon_app:
          type: string
          description: Ссылка на иконку категории для МП
          example: "https://mrsuperapp.adv.ru/pictures/medicine_icon_app.svg"


    ConstructionProgress:
      type: object
      description: Объект хода строительства по проекту
      required:
        - construction_dynamics
        - last_month
        - project
        - streams
        - timeline
      properties:
        project:
          type: object
          required:
            - code
            - id
            - name
          properties:
            id:
              $ref: '#/components/schemas/AttrProjectId'
            code:
              $ref: '#/components/schemas/ProjectCode'
            name:
              $ref: '#/components/schemas/AttrProjectName'
        construction_dynamics:
          $ref: '#/components/schemas/ConstructionDynamics'
        timeline:
          type: array
          description: Периоды хода строительства
          items:
            $ref: '#/components/schemas/ConstructionProgressTimeline'
        last_month:
          $ref: '#/components/schemas/ConstructionProgressPhoto'
        streams:
          type: array
          description: Группы live-камер по корпусам
          items:
            $ref: '#/components/schemas/ConstructionProgressStreamGroup'

    ConstructionProgressPhoto:
      type: object
      required:
        - month
        - photo
        - year
      nullable: true
      properties:
        photo:
          type: array
          description: Массив ссылок на фотографии хода строительства
          items:
            type: string
        month:
          type: integer
          description: Месяц периода
        year:
          type: integer
          description: Год периода

    ConstructionDynamics:
      type: object
      nullable: true
      required:
        - month_update
        - video_link
        - video_preview
        - year_update
      properties:
        video_link:
          type: string
          description: Ссылка на видео динамики строительства
          minLength: 1
        video_preview:
          type: string
          description: Ссылка на превью динамики строительства
          minLength: 1
        month_update:
          type: integer
          description: Месяц последнего обновления
        year_update:
          type: integer
          description: Год последнего обновления

    ConstructionProgressTimeline:
      type: object
      required:
        - count
        - month
        - year
      properties:
        count:
          $ref: '#/components/schemas/AttrCount'
        month:
          type: integer
          description: Месяц периода
        year:
          type: integer
          description: Год периода

    ConstructionProgressStreamGroup:
      type: object
      required:
        - building
        - cameras
        - cameras_count
      properties:
        building:
          type: object
          required:
            - id
            - name
          description: Связанный корпус
          properties:
            id:
              $ref: '#/components/schemas/AttrBuildingId'
            name:
              $ref: '#/components/schemas/AttrBuildingName'
        cameras_count:
          type: integer
          description: Количество камер
        cameras:
          type: array
          description: Массив камер
          items:
            $ref: '#/components/schemas/ConstructionProgressCamera'

    ConstructionProgressCamera:
      type: object
      required:
        - description
        - link
        - preview
      properties:
        description:
          type: string
          nullable: true
          description: Описание камеры
        link:
          type: string
          description: Ссылка на трансляцию камеры
          minLength: 1
        preview:
          type: string
          description: Ссылка на превью изображение
          minLength: 1

    MrclubCategoryList:
      required:
        - categories
        - count
      description: Список категорий программы лояльности MR Club
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/MrclubCategory'
        count:
          $ref: '#/components/schemas/AttrCount'

    MrclubCategory:
      description: Категория предолжения программы лояльности
      required:
        - code
        - name
      type: object
      properties:
        name:
          type: string
          description: Название категории для отображения в UI
          minLength: 1
        code:
          type: string
          description: Системное имя категории
          minLength: 1

    MrclubOffersList:
      required:
        - count
        - items
        - limit
        - page
        - page_count
      description: Список предложений программы лояльности MR Club
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MrclubOffer'
        count:
          $ref: '#/components/schemas/AttrCount'
        limit:
          $ref: '#/components/schemas/AttrPaginationLimit'
        page:
          $ref: '#/components/schemas/AttrPaginationPage'
        page_count:
          $ref: '#/components/schemas/AttrPaginationPageCount'

    MrclubOffer:
      description: Краткая информация о предложении программы лояльности
      required:
        - code
        - image
        - title
      type: object
      properties:
        code:
          type: string
          description: Системное имя предложения
        image:
          $ref: '#/components/schemas/AttrImageLink'
        name:
          type: string
          description: Название предложения
          example: "Обойкин — сеть обойных центров"
        teaser:
          type: string
          description: Краткое описание предложения
          example: "Скидка в магазин с огромным выбором обоев"
        labels:
          type: array
          items:
            $ref: '#/components/schemas/MrclubOfferLabel'

    MrclubOfferLabel:
      type: object
      description: Список лейблов
      required:
        - text
      properties:
        text:
          type: string
          description: Текст лейбла
          example: "-13%"

    MrclubOfferContent:
      description: Детальная информация о предложении программы лояльности
      required:
        - ad_label
        - code
        - date
        - image
        - teaser
        - title
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/MrclubCategory'
        code:
          type: string
          description: Системное имя предложения ПЛ
        image:
          $ref: '#/components/schemas/AttrImageLink'
        name:
          type: string
          description: Название предложения
          example: "Обойкин — сеть обойных центров"
        teaser:
          type: string
          description: Краткое описание предложения
          example: "Скидка в магазин с огромным выбором обоев"
        description:
          type: string
          description: Краткое описание предложения
          example: "Огромный ассортимент под любой бюджет, более 1 500 артикулов обоев в наличии и эксклюзивные варианты по каталогам."
        labels:
          type: array
          items:
            $ref: '#/components/schemas/MrclubOfferLabel'
        conditions:
          type: string
          description: Условия использования предложения (HTML-текст)
        partner:
          type: object
          description: Информация о партнёре по предложению ПЛ
          properties:
            code:
              type: string
              description: Системное имя партнёра
              example: "oboykin"
            name:
              type: string
              description: Название партнёра
              example: "Обойкин"
            logo:
              $ref: '#/components/schemas/AttrImageLink'
            description:
              type: string
              description: Краткое описание партнёра
              example: "Обойкин успешно работает на рынке интерьерных решений с 2014 года"
            text:
              type: string
              description: Детальное описание партнёра (HTML-текст)
        steps:
          type: array
          description: Список шагов для использования предложения программы лояльности
          items:
            $ref: '#/components/schemas/MrclubOfferStep'
        ad_label:
          $ref: '#/components/schemas/AttrAdvertisementLabel'

    MrclubOfferStep:
      type: object
      description: Шаг для использования предложения программы лояльности
      required:
        - description
        - name
      properties:
        name:
          type: string
          description: Название шага
          example: "Зайдите на сайт партнера"
          minLength: 1
        description:
          type: string
          nullable: true
          description: Дополнительное описание для шага (HTML-текст)

    AppVersion:
      type: object
      description: Результат запроса минимальных версий приложений
      required:
        - android
        - ios
      properties:
        ios:
          type: string
          description: Минимальная версия ios
        android:
          type: string
          description: Минимальная версия android

    Device:
      type: object
      description: Информация об устройстве
      required:
        - active
        - device_id
        - device_type
        - install_id
        - token
      properties:
        device_id:
          type: string
          description: ID устройства
        install_id:
          type: string
          description: ID установки
        device_type:
          type: string
          description: Тип устройства
          enum:
            - 'android_google'
            - 'android_huawei'
            - 'ios'
        token:
          type: string
          description: Токен регистрации (FCM, Heuawei)
        active:
          type: boolean
          description: Признак доступности устройства для отправки уведомлений

    BookletsResponse:
      type: object
      description: Список материалов по проекту
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Booklet'

    Booklet:
      type: object
      description: Материал по проекту
      required:
        - file
        - image
        - title
      properties:
        title:
          type: string
          description: Заголовок к материалу
        image:
          type: string
          description: Ссылка на превью изображение
        file:
          type: string
          description: Файл для скачивания


    ProductKitchen:
      type: object
      nullable: true
      required:
        - layout_type_id
      properties:
        layout_type_id:
          type: string
          description: Идентификатор типа планировки кухни


    KitchenOptionsList:
      type: object
      description: Список вариантов кухонь
      required:
        - count
        - description
        - items
      properties:
        count:
          $ref: '#/components/schemas/AttrCount'
        description:
          type: string
          description: Описание типа планировки кухни (без поддержки HTML-форматирования)
          minLength: 1
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/KitchenType'


    KitchenType:
      type: object
      required:
        - colors
        - id
        - name
      properties:
        id:
          type: integer
          description: Идентификатор типа планировки кухни
        name:
          type: string
          description: Название типа кухни
          example: "Premium"
          minLength: 1
        colors:
          type: array
          items:
            $ref: '#/components/schemas/KitchenColor'

    KitchenColor:
      type: object
      required:
        - 3d_layout
        - elements
        - file
        - id
        - image
        - images
        - kitchen_partner
        - name
      properties:
        id:
          type: integer
          description: Идентификатор варианта кухни
        name:
          type: string
          description: Название цвета кухни
          example: "Светлая"
          minLength: 1
        kitchen_partner:
          $ref: '#/components/schemas/KitchenPartner'
        file:
          type: string
          format: url
          description: Ссылка на скачивание файла - буклета
          minLength: 1
          nullable: true
        3d_layout:
          type: string
          format: url
          description: Ссылка на 3D планировку
          minLength: 1
          nullable: true
        image:
          $ref: '#/components/schemas/KitchenOptionImage'
        additional_images:
          type: array
          description: Список дополнительных изображений для кухонь
          nullable: true
          items:
            $ref: '#/components/schemas/KitchenOptionImage'
        elements:
          type: array
          description: Список элементов комплектации, связанных с данным вариантом отделки
          items:
            $ref: '#/components/schemas/KitchenOptionElement'


    KitchenOptionElement:
      type: object
      required:
        - description
        - image
        - label
        - name
      properties:
        name:
          type: string
          description: Название элемента комплектации
          example: "Материал фасадов — ЛДСП Egger"
          minLength: 1
        label:
          type: string
          description: Однострочный текст, короткий заголовок, отображаемый как подробная информация об элементе комплектации
          example: "Столешница — влагостойкий ДСП с защитным покрытием из пластика"
          minLength: 1
          nullable: true
        image:
          type: string
          format: url
          description: Ссылка на изображение для отображения в блоке с подробной информацией
          minLength: 1
          nullable: true
        description:
          type: string
          description: Подробное текстовое описание для пина
          example: "Наши столешницы влагостойкие и ударопрочные, устойчивы к образованию загрязнений и к UV-излучению."
          minLength: 1
          nullable: true


    KitchenOptionImage:
      type: object
      nullable: true
      required:
        - details_placement
        - image
        - pins
        - slider_position
      properties:
        image:
          type: string
          format: url
          description: Ссылка на изображение для слайдера
          minLength: 1
        details_placement:
          type: string
          enum:
            - 'lower_left'
            - 'lower_right'
            - 'upper_left'
            - 'upper_right'
          description: Значение (по умолчанию) для отображения popup с детальной информацией о кухонном элементе
        slider_position:
          type: number
          description: Положение в процентах по умолчанию для слайдера изображения
          nullable: true
        pins:
          type: array
          items:
            $ref: '#/components/schemas/KitchenOptionImagePin'

    KitchenOptionImagePin:
      type: object
      description: Вариант отделки
      required:
        - details_description
        - details_image
        - details_placement
        - label
        - replacement_image
        - x
        - y
      properties:
        x:
          $ref: '#/components/schemas/AttrPointCoordinate'
        y:
          $ref: '#/components/schemas/AttrPointCoordinate'
        label:
          type: string
          description: Заголовок для пина
          example: "Холодильник с функцией Frost Free"
          minLength: 1
        details_description:
          type: string
          description: Подробное текстовое описание для пина
          example: "В морозильной камере используется функция No Frost. Размораживание морозильной камере происходит автоматически, а охлаждение продуктов происходит быстрее и более равномерно"
          minLength: 1
          nullable: true
        details_image:
          type: string
          format: url
          description: Ссылка на изображение для отображения в блоке с подробной информацией
          minLength: 1
          nullable: true
        details_placement:
          type: string
          enum:
            - 'lower_left'
            - 'lower_right'
            - 'upper_left'
            - 'upper_right'
          description: Значение для отображения блока с детальной информацией о кухонном элементе (только для desktop)
          nullable: true
        replacement_image:
          type: string
          format: url
          description: Ссылка на изображение, замещающее основное изображение кухни при активации пина
          minLength: 1
          nullable: true

    KitchenPartner:
      type: object
      nullable: true
      required:
        - logo
        - name
      properties:
        name:
          type: string
          minLength: 1
          example: "Кухни Dantone"
        logo:
          type: string
          format: url
          description: Ссылка на изображение логотипа партнёра
          minLength: 1
          nullable: true

  # ################################
  # Входные параметры
  # ################################

  parameters:

    applicationFilter:
      name: application
      in: query
      description: Фильтр, позволяющий отобрать из общего массива объектов только объекты для МП
      schema:
        type: boolean

    areaMinFilter:
      name: area_min
      in: query
      description: Фильтр по минимальной площади
      example: 50
      schema:
        type: integer

    areaMaxFilter:
      name: area_max
      in: query
      description: Фильтр по максимальной площади
      example: 100
      schema:
        type: integer

    buildingsCodeFilter:
      name: building[]
      in: query
      description: Фильтр по корпусу
      example: [ 'stain' ]
      schema:
        type: array
        items:
          type: string

    categoryFilter:
      description: |
        Фильтр по типу ОН.
      name: category
      in: query
      schema:
        $ref: '#/components/schemas/AttrCategoryCode'

    completedProjectFilter:
      name: completed
      in: query
      description: Признак завершённого проекта
      schema:
        type: boolean

    floorMinFilter:
      name: floor_min
      in: query
      description: Фильтр по минимальному этажу
      example: 5
      schema:
        type: integer

    floorMaxFilter:
      name: floor_max
      in: query
      description: Фильтр по максимальному этажу
      example: 10
      schema:
        type: integer

    isAssignmentFilter:
      name: assignment
      in: query
      description: Фильтр по переуступке (пока не используются, история MRSUPERAPP-2954)
      example: true
      schema:
        type: boolean

    isBookedFilter:
      name: booked
      in: query
      description: Фильтр по признаку "Забронирован"
      example: true
      schema:
        type: boolean

    isFreeFilter:
      name: free
      in: query
      description: Фильтр по признаку "Доступен"
      example: true
      schema:
        type: boolean

    isFamilyFilter:
      name: family
      in: query
      description: Фильтр по признаку "Семейное"
      example: true
      schema:
        type: boolean

    kitchenLayoutTypeIdParam:
      name: layout_type_id
      in: query
      required: true
      description: Идентификатор типа планировки кухни
      schema:
        type: string

    paymentMinFilter:
      name: payment_min
      in: query
      description: Фильтр по мин платежу
      example: 100
      schema:
        type: integer

    paymentMaxFilter:
      name: payment_max
      in: query
      example: 200
      description: Фильтр по макс платежу
      schema:
        type: integer

    placeFilter:
      name: place[]
      in: query
      description: Фильтр по станции метро
      example: [ 'dmitrovskaya' ]
      schema:
        type: array
        items:
          type: string

    priceMinFilter:
      name: price_min
      in: query
      description: Фильтр по мин цене
      example: 100
      schema:
        type: integer

    priceMaxFilter:
      name: price_max
      in: query
      example: 200
      description: Фильтр по макс цене
      schema:
        type: integer

    productCodeFilter:
      name: product_code
      in: query
      description: Код ОН
      schema:
        type: string
        example: "kvartira-21"

    productsIdsFilter:
      name: ids[]
      in: query
      description: Фильтр по идентификаторам ОН
      example: [ 9247 ]
      schema:
        type: array
        items:
          type: integer

    projectCodeParam:
      name: project_code
      in: query
      description: Код проекта (не путать с фильтром по проекту). Параметр передается, если метод вызывается со страницы проекта
      example: 'hide'
      schema:
        type: string

    projectFilter:
      name: project
      in: query
      description: Фильтр по коду проекта
      example: 'hide'
      schema:
        type: string

    projectsFilter:
      name: project[]
      in: query
      description: Фильтр по коду проектов
      example: [ 'hide' ]
      schema:
        type: array
        items:
          type: string

    realtyObjectCodeInPath:
      description: |
        Код объекта недвижимости.
      name: code
      in: path
      required: true
      schema:
        type: string
        example: 'kvartira-21'

    releaseFilter:
      name: release[]
      in: query
      description: Фильтр по сроку сдачи
      example: [ '2Q2023' ]
      schema:
        type: array
        items:
          type: string

    roomsCountFilter:
      name: rooms[]
      in: query
      description: Фильтр по количеству комнат. 0 - студии, 4 - 4 и более
      example: [ 1 ]
      schema:
        type: array
        items:
          type: integer

    saleServiceCategoryFilter:
      # Схема для sale-service. Будет удалена в https://jira.mr-group.ru/browse/MRSUPERAPP-3396
      description: |
        Фильтр по типу ОН.
      name: category
      in: query
      schema:
        $ref: '#/components/schemas/AttrCategoryCode'

    levelMinFilter:
      name: level_min
      in: query
      description: Фильтр по минимальному уровню
      example: -3
      schema:
        type: integer

    levelMaxFilter:
      name: level_max
      in: query
      description: Фильтр по максимальному уровню
      example: -1
      schema:
        type: integer

    isDiscountFilter:
      name: discount
      in: query
      description: Фильтр по наличию скидки
      example: true
      schema:
        type: boolean

    housingFilter:
      name: housing[]
      in: query
      description: Фильтр по типу жилого помещения
      schema:
        type: array
        items:
          type: string
          enum:
            - 'Apartment'
            - 'Flat'

    decorationFilter:
      name: decoration[]
      in: query
      description: Фильтр по типу отделки
      example: [ 'MRBase', 'MRReady' ]
      schema:
        type: array
        items:
          type: string
          description: Код CRM отделки

    hasKitchenFilter:
      name: has_kitchen
      in: query
      description: Фильтр по наличию кухни
      example: true
      schema:
        type: boolean

    installmentsFilter:
      name: installments
      in: query
      description: Фильтр по наличию рассрочки (пока не используются, история MRSUPERAPP-2954)
      schema:
        type: boolean

    privateFilter:
      name: private_filter
      in: query
      description: Фильтр по признаку MR Private
      schema:
        type: boolean

    ventilationFilter:
      name: ventilation
      in: query
      description: Фильтр по признаку "Технологическая вентиляция"
      example: true
      schema:
        type: boolean

    # Сортировка

    catalogSort:
      name: sort
      in: query
      description: |
        Код способа сортировки (по умолчанию default)\
        Способы сортировки описаны тут - https://wiki.adv.ru/pages/viewpage.action?pageId=273666894
      schema:
        type: string

    # Пагинация

    paginationPage:
      name: page
      in: query
      description: Номер страницы для пагинации (по умолчанию = 1)
      schema:
        type: integer

    paginationLimit:
      name: limit
      in: query
      description: Количество элементов на странице для пагинации (каждый метод может иметь своё значение по умолчанию)
      schema:
        type: integer

    # Кастомные заголовки

    captchaToken:
      name: Captcha-Token
      in: header
      required: false
      description: Токен, полученный после прохождения проверки пользователя во внешнем сервисе верификации запросов
      example: "dD0xNjYyNDU3NDMzO2k9MmEwMjo2Yjg6YjA4MTpiNTk3OjoxOjFiO0Q9MjVCREY1RDgzMDBERjQ3QjExNkUyMDJDNjJFNEI3Q0Y0QjYzRkRDNzJEMkVGQzQyRUNDNjMxODgzMUM0REZBNzI1QUE1QzUwO3U9MTY2MjQ1NzQzMzk5MTEwNjQxNTtoPTg4MWRjMDc2YzE3MjkxNGUwNDgwMTVkYzhlZjU3ODQ0"
      schema:
        type: string

    deviceToken:
      name: Device-Token
      in: header
      required: false
      description: Константное значение, аналог Captcha-Token для моб. приложений для прохождения проверки (временное решение, будет отключено после разработки варианта проверки запросов на отправку роботом для мобильных приложений)
      schema:
        type: string

  #################################
  ## Схемы безопасности
  #################################

  securitySchemes:
    JWT:
      description: |
        JWT, создаваемый сервером аутентификации.
      type: http
      scheme: bearer
      bearerFormat: JWT

    FUSER_ID:
      description: |
        Внутренний идентификатор пользователя в Битрикс.

        Используется для идентификации неавторизованного пользователя, например, для работы с избранным.
      type: apiKey
      in: cookie
      name: FUSER_ID

